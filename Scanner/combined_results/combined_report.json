{
  "total_vulnerabilities": 1279,
  "total_images": 5,
  "scanners_used": [
    "trivy",
    "grype"
  ],
  "images": {
    "hyperledger/fabric-tools:2.1": [
      {
        "cve_id": "CVE-2021-36159",
        "package_name": "apk-tools",
        "installed_version": "2.10.4-r3",
        "fixed_version": "2.10.7-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "libfetch: an out of boundary read while libfetch uses strtol to parse the relevant numbers into address bytes leads to information leak or crash",
        "description": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-30139",
        "package_name": "apk-tools",
        "installed_version": "2.10.4-r3",
        "fixed_version": "2.10.6-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "",
        "description": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-21300",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "2.24.4-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "git: remote code execution during clone operation on case-insensitive filesystems",
        "description": "Git is an open-source distributed revision control system. In affected versions of Git a specially crafted repository that contains symbolic links as well as files using a clean/smudge filter such as Git LFS, may cause just-checked out script to be executed while cloning onto a case-insensitive file system such as NTFS, HFS+ or APFS (i.e. the default file systems on Windows and macOS). Note that clean/smudge filters have to be configured for that. Git for Windows configures Git LFS by default, and is therefore vulnerable. The problem has been patched in the versions published on Tuesday, March 9th, 2021. As a workaound, if symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. Likewise, if no clean/smudge filters such as Git LFS are configured globally (i.e. _before_ cloning), the attack is foiled. As always, it is best to avoid cloning repositories from untrusted sources. The earliest impacted version is 2.14.2. The fix versions are: 2.30.1, 2.29.3, 2.28.1, 2.27.1, 2.26.3, 2.25.5, 2.24.4, 2.23.4, 2.22.5, 2.21.4, 2.20.5, 2.19.6, 2.18.5, 2.17.62.17.6.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1967",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1g-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: Segmentation fault in SSL_check_chain causes denial of service",
        "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22945",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.79.0-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: use-after-free and double-free in MQTT sending",
        "description": "When sending data to an MQTT server, libcurl <= 7.73.0 and 7.78.0 could in some circumstances erroneously keep a pointer to an already freed memory area and both use that again in a subsequent call to send data and also free it *again*.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8169",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "libcurl: partial password leak over DNS on HTTP redirect",
        "description": "curl 7.62.0 through 7.70.0 is vulnerable to an information disclosure vulnerability that can lead to a partial password being leaked over the network and to the DNS server(s).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8177",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: Incorrect argument check can allow remote servers to overwrite local files",
        "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8231",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: Expired pointer dereference via multi API with CURLOPT_CONNECT_ONLY option set",
        "description": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8285",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: Malicious FTP server can trigger stack overflow when CURLOPT_CHUNK_BGN_FUNCTION is used",
        "description": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8286",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: Inferior OCSP verification",
        "description": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22926",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: CURLOPT_SSLCERT mixup with Secure Transport",
        "description": "libcurl-using applications can ask for a specific client certificate to be used in a transfer. This is done with the `CURLOPT_SSLCERT` option (`--cert` with the command line tool).When libcurl is built to use the macOS native TLS library Secure Transport, an application can ask for the client certificate by name or with a file name - using the same option. If the name exists as a file, it will be used instead of by name.If the appliction runs with a current working directory that is writable by other users (like `/tmp`), a malicious user can create a file name with the same name as the app wants to use by name, and thereby trick the application to use the file based cert instead of the one referred to by name making libcurl send the wrong client certificate in the TLS connection handshake.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22946",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.79.0-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "curl: Requirement to use TLS not properly enforced for IMAP, POP3, and FTP protocols",
        "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1967",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1g-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: Segmentation fault in SSL_check_chain causes denial of service",
        "description": "Server or client applications that call the SSL_check_chain() function during or after a TLS 1.3 handshake may crash due to a NULL pointer dereference as a result of incorrect handling of the \"signature_algorithms_cert\" TLS extension. The crash occurs if an invalid or unrecognised signature algorithm is received from the peer. This could be exploited by a malicious peer in a Denial of Service attack. OpenSSL version 1.1.1d, 1.1.1e, and 1.1.1f are affected by this issue. This issue did not affect OpenSSL versions prior to 1.1.1d. Fixed in OpenSSL 1.1.1g (Affected 1.1.1d-1.1.1f).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-11080",
        "package_name": "nghttp2-libs",
        "installed_version": "1.40.0-r0",
        "fixed_version": "1.40.0-r1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "nghttp2: overly large SETTINGS frames can lead to DoS",
        "description": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., > 32), then drop the connection.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-37434",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "1.2.11-r4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23806",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: IsOnCurve returns true for invalid field elements",
        "description": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24538",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: backticks not treated as string delimiters",
        "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24540",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of JavaScript whitespace",
        "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-24790",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.11, 1.22.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/netip: Unexpected behavior from Is methods for IPv4-mapped IPv6 addresses",
        "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-16845",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.13.15, 1.14.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: ReadUvarint and ReadVarint can read an unlimited number of bytes from invalid inputs",
        "description": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-28362",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.14.12, 1.15.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: panic during recursive division of very large numbers",
        "description": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-27918",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.9, 1.16.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: infinite loop when using xml.NewTokenDecoder with a custom TokenReader",
        "description": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33195",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net: lookup functions may return invalid host names",
        "description": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33196",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion",
        "description": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33198",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: math/big.Rat: may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents",
        "description": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-39293",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.8, 1.17.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion (incomplete fix of CVE-2021-33196)",
        "description": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41771",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: debug/macho: invalid dynamic symbol table command can cause panic",
        "description": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: Reader.Open panics on empty string",
        "description": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-44716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.12, 1.17.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: limit growth of header canonicalization cache",
        "description": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-23772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: uncontrolled memory consumption due to an unhandled overflow via Rat.SetString",
        "description": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24675",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/pem: fix stack overflow in Decode",
        "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24921",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.15, 1.17.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: regexp: stack exhaustion via a deeply nested expression",
        "description": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-27664",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.6, 1.19.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: handle server errors after sending GOAWAY",
        "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28131",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Decoder.Skip",
        "description": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28327",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: panic caused by oversized scalar",
        "description": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2879",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: archive/tar: github.com/vbatts/tar-split: unbounded memory consumption when reading headers",
        "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2880",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http/httputil: ReverseProxy should not forward unparseable query parameters",
        "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-29804",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30580",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: os/exec: Code injection in Cmd.Start",
        "description": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30630",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: io/fs: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30631",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: compress/gzip: stack exhaustion in Reader.Read",
        "description": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30632",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30633",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Unmarshal",
        "description": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30634",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 << 32 - 1 bytes.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30635",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/gob: stack exhaustion in Decoder.Decode",
        "description": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-32189",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.13, 1.18.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service",
        "description": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41715",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: regexp/syntax: limit memory used by parsing regexps",
        "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.8, 1.19.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "Due to unsanitized NUL values, attackers may be able to maliciously se ...",
        "description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41720",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.9, 1.19.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: os, net/http: avoid escapes from os.DirFS and http.Dir on Windows",
        "description": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41722",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: path-filepath filepath.Clean path traversal",
        "description": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41723",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang.org/x/net/http2: avoid quadratic complexity in HPACK decoding",
        "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41724",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: large handshake records may cause panics",
        "description": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41725",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, mime/multipart: denial of service from excessive resource consumption",
        "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24534",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto: denial of service from excessive memory allocation",
        "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24536",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption",
        "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24537",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: go/parser: Infinite loop in parsing",
        "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24539",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper sanitization of CSS values",
        "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29400",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of empty HTML attributes",
        "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29403",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.10, 1.20.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: runtime: unexpected behavior of setuid/setgid binaries",
        "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-39325",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.10, 1.21.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: rapid stream resets can cause excessive work (CVE-2023-44487)",
        "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45283",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.11, 1.21.4, 1.20.12, 1.21.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "The filepath package does not recognize paths with a \\??\\ prefix as sp ...",
        "description": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45287",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: Timing Side Channel attack in RSA based TLS key exchanges.",
        "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45288",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.9, 1.22.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-34156",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.22.7, 1.23.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "encoding/gob: golang: Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion",
        "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2025-47907",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.23.12, 1.24.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "trivy",
        "title": "database/sql: Postgres Scan Race Condition",
        "description": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2025-48384",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When reading a config value, Git strips any trailing carriage return and line feed (CRLF). When writing a config entry, values with a trailing CR are not quoted, causing the CR to be lost when the config is later read. When initializing a submodule, if the submodule path contains a trailing CR, the altered path is read resulting in the submodule being checked out to an incorrect location. If a symlink exists that points the altered path to the submodule hooks directory, and the submodule contains an executable post-checkout hook, the script may be unintentionally executed after checkout. This vulnerability is fixed in v2.43.7, v2.44.4, v2.45.4, v2.46.4, v2.47.3, v2.48.2, v2.49.1, and v2.50.1.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-44487",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-44487",
        "package_name": "nghttp2-libs",
        "installed_version": "1.40.0-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-32002",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, repositories with submodules can be crafted in a way that exploits a bug in Git whereby it can be fooled into writing files not into the submodule's worktree but into a `.git/` directory. This allows writing a hook that will be executed while the clone operation is still running, giving the user no opportunity to inspect the code that is being executed. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. If symbolic link support is disabled in Git (e.g. via `git config --global core.symlinks false`), the described attack won't work. As always, it is best to avoid cloning repositories from untrusted sources.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45288",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41903",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is distributed revision control system. `git log` can display commits in an arbitrary format using its `--format` specifiers. This functionality is also exposed to `git archive` via the `export-subst` gitattribute. When processing the padding operators, there is a integer overflow in `pretty.c::format_and_pad_commit()` where a `size_t` is stored improperly as an `int`, and then added as an offset to a `memcpy()`. This overflow can be triggered directly by a user running a command which invokes the commit formatting machinery (e.g., `git log --format=...`). It may also be triggered indirectly through git archive via the export-subst mechanism, which expands format specifiers inside of files within the repository during a git archive. This integer overflow can result in arbitrary heap writes, which may result in arbitrary code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. Users who are unable to upgrade should disable `git archive` in untrusted repositories. If you expose git archive via `git daemon`, disable it by running `git config --global daemon.uploadArch false`.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-28182",
        "package_name": "nghttp2-libs",
        "installed_version": "1.40.0-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "nghttp2 is an implementation of the Hypertext Transfer Protocol version 2 in C. The nghttp2 library prior to version 1.61.0 keeps reading the unbounded number of HTTP/2 CONTINUATION frames even after a stream is reset to keep HPACK context in sync.  This causes excessive CPU usage to decode HPACK stream. nghttp2 v1.61.0 mitigates this vulnerability by limiting the number of CONTINUATION frames it accepts per stream. There is no workaround for this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23521",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is distributed revision control system. gitattributes are a mechanism to allow defining attributes for paths. These attributes can be defined by adding a `.gitattributes` file to the repository, which contains a set of file patterns and the attributes that should be set for paths matching this pattern. When parsing gitattributes, multiple integer overflows can occur when there is a huge number of path patterns, a huge number of attributes for a single pattern, or when the declared attribute names are huge. These overflows can be triggered via a crafted `.gitattributes` file that may be part of the commit history. Git silently splits lines longer than 2KB when parsing gitattributes from a file, but not when parsing them from the index. Consequentially, the failure mode depends on whether the file exists in the working tree, the index or both. This integer overflow can result in arbitrary heap reads and writes, which may result in remote code execution. The problem has been patched in the versions published on 2023-01-17, going back to v2.30.7. Users are advised to upgrade. There are no known workarounds for this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-32004",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, an attacker can prepare a local repository in such a way that, when cloned, will execute arbitrary code during the operation. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid cloning repositories from untrusted sources.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-38297",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.9",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.16.9 and 1.17.x before 1.17.2 has a Buffer Overflow via large arguments in a function invocation from a WASM module, when GOARCH=wasm GOOS=js is used.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-25652",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, by feeding specially crafted input to `git apply --reject`, a path outside the working tree can be overwritten with partially controlled contents (corresponding to the rejected hunk(s) from the given patch). A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid using `git apply` with `--reject` when applying patches from an untrusted source. Use `git apply --stat` to inspect a patch before applying; avoid applying one that create a conflict where a link corresponding to the `*.rej` file exists.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-23946",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git, a revision control system, is vulnerable to path traversal prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8. By feeding a crafted input to `git apply`, a path outside the working tree can be overwritten as the user who is running `git apply`. A fix has been prepared and will appear in v2.39.2, v2.38.4, v2.37.6, v2.36.5, v2.35.7, v2.34.7, v2.33.7, v2.32.6, v2.31.7, and v2.30.8. As a workaround, use `git apply --stat` to inspect a patch before applying; avoid applying one that creates a symbolic link and then creates a file beyond the symbolic link.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-39253",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is an open source, scalable, distributed revision control system. Versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 are subject to exposure of sensitive information to a malicious actor. When performing a local clone (where the source and target of the clone are on the same volume), Git copies the contents of the source's `$GIT_DIR/objects` directory into the destination by either creating hardlinks to the source contents, or copying them (if hardlinks are disabled via `--no-hardlinks`). A malicious actor could convince a victim to clone a repository with a symbolic link pointing at sensitive information on the victim's machine. This can be done either by having the victim clone a malicious repository on the same machine, or having them clone a malicious repository embedded as a bare repository via a submodule from any source, provided they clone with the `--recurse-submodules` option. Git does not create symbolic links in the `$GIT_DIR/objects` directory. The problem has been patched in the versions published on 2022-10-18, and backported to v2.30.x. Potential workarounds: Avoid cloning untrusted repositories using the `--local` optimization when on a shared machine, either by passing the `--no-local` option to `git clone` or cloning from a URL that uses the `file://` scheme. Alternatively, avoid cloning repositories from untrusted sources with `--recurse-submodules` or run `git config --global protocol.file.allow user`.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24787",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.10",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a \"#cgo LDFLAGS\" directive.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24784",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The ParseAddressList function incorrectly handles comments (text within parentheses) within display names. Since this is a misalignment with conforming address parsers, it can result in different trust decisions being made by programs using different parsers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29007",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1, a specially crafted `.gitmodules` file with submodule URLs that are longer than 1024 characters can used to exploit a bug in `config.c::git_config_copy_or_rename_section_in_file()`. This bug can be used to inject arbitrary configuration into a user's `$GIT_DIR/config` when attempting to remove the configuration section associated with that submodule. When the attacker injects configuration values which specify executables to run (such as `core.pager`, `core.editor`, `core.sshCommand`, etc.) this can lead to a remote code execution. A fix A fix is available in versions 2.30.9, 2.31.8, 2.32.7, 2.33.8, 2.34.8, 2.35.8, 2.36.6, 2.37.7, 2.38.5, 2.39.3, and 2.40.1. As a workaround, avoid running `git submodule deinit` on untrusted repositories or without prior inspection of any submodule sections in `$GIT_DIR/config`.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-39260",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is an open source, scalable, distributed revision control system. `git shell` is a restricted login shell that can be used to implement Git's push/pull functionality via SSH. In versions prior to 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4, the function that splits the command arguments into an array improperly uses an `int` to represent the number of entries in the array, allowing a malicious actor to intentionally overflow the return value, leading to arbitrary heap writes. Because the resulting array is then passed to `execv()`, it is possible to leverage this attack to gain remote code execution on a victim machine. Note that a victim must first allow access to `git shell` as a login shell in order to be vulnerable to this attack. This problem is patched in versions 2.30.6, 2.31.5, 2.32.4, 2.33.5, 2.34.5, 2.35.5, 2.36.3, and 2.37.4 and users are advised to upgrade to the latest version. Disabling `git shell` access via remote logins is a viable short-term workaround.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-34558",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.14",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The crypto/tls package of Go through 1.16.5 does not properly assert that the type of public key in an X.509 certificate matches the expected type when doing a RSA based key exchange, allowing a malicious TLS server to cause a TLS client to panic.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-24975",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The --mirror documentation for Git through 2.35.1 does not mention the availability of deleted content, aka the \"GitBleed\" issue. This could present a security risk if information-disclosure auditing processes rely on a clone operation without the --mirror option. Note: This has been disputed by multiple 3rd parties who believe this is an intended feature of the git binary and does not pose a security risk.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24538",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.8",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24791",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an \"Expect: 100-continue\" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending \"Expect: 100-continue\" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45853",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1586",
        "package_name": "pcre2",
        "installed_version": "10.34-r1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the compile_xclass_matchingpath() function of the pcre2_jit_compile.c file. This involves a unicode property matching issue in JIT-compiled regular expressions. The issue occurs because the character was not fully read in case-less matching within JIT.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24531",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.0-0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making \"go env\" print them out.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-15586",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.13.13",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.13.13 and 1.14.x before 1.14.5 has a data race in some net/http servers, as demonstrated by the httputil.ReverseProxy Handler, because it reads a request body and writes a response at the same time.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29405",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.10",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. Flags containing embedded spaces are mishandled, allowing disallowed flags to be smuggled through the LDFLAGS sanitization by including them in the argument of another flag. This only affects usage of the gccgo compiler.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-41771",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-40330",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "git_connect_git in connect.c in Git before 2.30.1 allows a repository path to contain a newline character, which may result in unexpected cross-protocol requests, as demonstrated by the git://localhost:1234/%0d%0a%0d%0aGET%20/%20HTTP/1.1 substring.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24783",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Verifying a certificate chain which contains a certificate with an unknown public key algorithm will cause Certificate.Verify to panic. This affects all crypto/tls clients, and servers that set Config.ClientAuth to VerifyClientCertIfGiven or RequireAndVerifyClientCert. The default behavior is for TLS servers to not verify client certificates.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24540",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.9",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-44717",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.16.12 and 1.17.x before 1.17.5 on UNIX allows write operations to an unintended file or unintended network connection as a consequence of erroneous closing of file descriptor 0 after file-descriptor exhaustion.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41717",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.18.9",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "An attacker can cause excessive memory growth in a Go server accepting HTTP/2 requests. HTTP/2 server connections contain a cache of HTTP header keys sent by the client. While the total number of entries in this cache is capped, an attacker sending very large keys can cause the server to allocate approximately 64 MiB per open connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22925",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1587",
        "package_name": "pcre2",
        "installed_version": "10.34-r1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "An out-of-bounds read vulnerability was discovered in the PCRE2 library in the get_recurse_data_length() function of the pcre2_jit_compile.c file. This issue affects recursions in JIT-compiled regular expressions caused by duplicate data transfers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14039",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.13.13",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In Go before 1.13.13 and 1.14.x before 1.14.5, Certificate.Verify may lack a check on the VerifyOptions.KeyUsages EKU requirements (if VerifyOptions.Roots equals nil and the installation is on Windows). Thus, X.509 certificate verification is incomplete.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28367",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.14.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via malicious gcc flags specified via a #cgo directive.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-34156",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45289",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as \"Authorization\" or \"Cookie\". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45290",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "When parsing a multipart form (either explicitly with Request.ParseMultipartForm or implicitly with Request.FormValue, Request.PostFormValue, or Request.FormFile), limits on the total size of the parsed form were not applied to the memory consumed while reading a single form line. This permits a maliciously crafted input containing very long lines to cause allocation of arbitrarily large amounts of memory, potentially leading to memory exhaustion. With fix, the ParseMultipartForm function now correctly limits the maximum size of form lines.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41723",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28366",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.14.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Code injection in the go command with cgo before Go 1.14.12 and Go 1.15.5 allows arbitrary code execution at build time via a malicious unquoted symbol name in a linked object file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45287",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29406",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The HTTP/1 client does not fully validate the contents of the Host header. A maliciously crafted Host header can inject additional headers or entire requests. With fix, the HTTP/1 client now refuses to send requests containing an invalid Request.Host or Request.URL.Host value.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24785",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-48385",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When cloning a repository Git knows to optionally fetch a bundle advertised by the remote server, which allows the server-side to offload parts of the clone to a CDN. The Git client does not perform sufficient validation of the advertised bundles, which allows the remote side to perform protocol injection. This protocol injection can cause the client to write the fetched bundle to a location controlled by the adversary. The fetched content is fully controlled by the server, which can in the worst case lead to arbitrary code execution. The use of bundle URIs is not enabled by default and can be controlled by the bundle.heuristic config option. Some cases of the vulnerability require that the adversary is in control of where a repository will be cloned to. This either requires social engineering or a recursive clone with submodules. These cases can thus be avoided by disabling recursive clones. This vulnerability is fixed in v2.43.7, v2.44.4, v2.45.4, v2.46.4, v2.47.3, v2.48.2, v2.49.1, and v2.50.1.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29402",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.10",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The go command may generate unexpected code at build time when using cgo. This may result in unexpected behavior when running a go program which uses cgo. This may occur when running an untrusted module which contains directories with newline characters in their names. Modules which are retrieved using the go command, i.e. via \"go get\", are not affected (modules retrieved using GOPATH-mode, i.e. GO111MODULE=off, may be affected).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30635",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-29509",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of attribute namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-29511",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The encoding/xml package in Go (all versions) does not correctly preserve the semantics of element namespace prefixes during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-34158",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Calling Parse on a \"// +build\" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28362",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.14.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22947",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.79.0-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27664",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.18.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-36221",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.15",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.15.15 and 1.16.x before 1.16.7 has a race condition that can lead to a net/http/httputil ReverseProxy panic upon an ErrAbortHandler abort.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-24553",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.14.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.14.8 and 1.15.x before 1.15.1 allows XSS because text/html is the default for CGI/FCGI handlers that lack a Content-Type header.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-35945",
        "package_name": "nghttp2-libs",
        "installed_version": "1.40.0-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Envoy is a cloud-native high-performance edge/middle/service proxy. Envoy\u2019s HTTP/2 codec may leak a header map and bookkeeping structures upon receiving `RST_STREAM` immediately followed by the `GOAWAY` frames from an upstream server. In nghttp2, cleanup of pending requests due to receipt of the `GOAWAY` frame skips de-allocation of the bookkeeping structure and pending compressed header. The error return [code path] is taken if connection is already marked for not sending more requests due to `GOAWAY` frame. The clean-up code is right after the return statement, causing memory leak. Denial of service through memory exhaustion. This vulnerability was patched in versions(s) 1.26.3, 1.25.8, 1.24.9, 1.23.11.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-24675",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28327",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29526",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.10",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.17.10 and 1.18.x before 1.18.2 has Incorrect Privilege Assignment. When called with a non-zero flags parameter, the Faccessat function could incorrectly report that a file is accessible.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-52005",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a source code management tool. When cloning from a server (or fetching, or pushing), informational or error messages are transported from the remote Git process to the client via the so-called \"sideband channel\". These messages will be prefixed with \"remote:\" and printed directly to the standard error output. Typically, this standard error output is connected to a terminal that understands ANSI escape sequences, which Git did not protect against. Most modern terminals support control sequences that can be used by a malicious actor to hide and misrepresent information, or to mislead the user into executing untrusted scripts. As requested on the git-security mailing list, the patches are under discussion on the public mailing list. Users are advised to update as soon as possible. Users unable to upgrade should avoid recursive clones unless they are from trusted sources.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-52006",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. Git defines a line-based protocol that is used to exchange information between Git and Git credential helpers. Some ecosystems (most notably, .NET and node.js) interpret single Carriage Return characters as newlines, which renders the protections against CVE-2020-5260 incomplete for credential helpers that treat Carriage Returns in this way. This issue has been addressed in commit `b01b9b8` which is included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-29923",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.17 does not properly consider extraneous zero characters at the beginning of an IP address octet, which (in some situations) allows attackers to bypass access control that is based on IP addresses, because of unexpected octal interpretation. This affects net.ParseIP and net.ParseCIDR.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29404",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.10",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The go command may execute arbitrary code at build time when using cgo. This may occur when running \"go get\" on a malicious module, or when running any other command which builds untrusted code. This is can by triggered by linker flags, specified via a \"#cgo LDFLAGS\" directive. The arguments for a number of flags which are non-optional are incorrectly considered optional, allowing disallowed flags to be smuggled through the LDFLAGS sanitization. This affects usage of both the gc and gccgo compilers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24790",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.11",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-29510",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The encoding/xml package in Go versions 1.15 and earlier does not correctly preserve the semantics of directives during tokenization round-trips, which allows an attacker to craft inputs that behave in conflicting ways during different stages of processing in affected downstream applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32189",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-44716",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-25032",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30632",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30633",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22923",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.79.0-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-22490",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Using a specially-crafted repository, Git prior to versions 2.39.2, 2.38.4, 2.37.6, 2.36.5, 2.35.7, 2.34.7, 2.33.7, 2.32.6, 2.31.7, and 2.30.8 can be tricked into using its local clone optimization even when using a non-local transport. Though Git will abort local clones whose source `$GIT_DIR/objects` directory contains symbolic links, the `objects` directory itself may still be a symbolic link. These two may be combined to include arbitrary files based on known paths on the victim's filesystem within the malicious repository's working copy, allowing for data exfiltration in a similar manner as CVE-2022-39253.\n\nA fix has been prepared and will appear in v2.39.2 v2.38.4 v2.37.6 v2.36.5 v2.35.7 v2.34.7 v2.33.7 v2.32.6, v2.31.7 and v2.30.8. If upgrading is impractical, two short-term workarounds are available. Avoid cloning repositories from untrusted sources with `--recurse-submodules`. Instead, consider cloning repositories without recursively cloning their submodules, and instead run `git submodule update` at each layer. Before doing so, inspect each new `.gitmodules` file to ensure that it does not contain suspicious module URLs.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-16845",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.13.15",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29409",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to <= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24536",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24539",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-39318",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The html/template package does not properly handle HTML-like \"\" comment tokens, nor hashbang \"#!\" comment tokens, in <script> contexts. This may cause the template parser to improperly interpret the contents of <script> contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-39319",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The html/template package does not apply the proper rules for handling occurrences of \"<script\", \"<!--\", and \"</script\" within JS literals in <script> contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-39323",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Line directives (\"//line\") can be used to bypass the restrictions on \"//go:cgo_\" directives, allowing blocked linker and compiler flags to be passed during compilation. This can result in unexpected execution of arbitrary code when running \"go build\". The line directive requires the absolute path of the file in which the directive lives, which makes exploiting this issue significantly more complex.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23773",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.14",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "cmd/go in Go before 1.16.14 and 1.17.x before 1.17.7 can misinterpret branch names that falsely appear to be version tags. This can lead to incorrect access control if an actor is supposed to be able to create branches but not tags.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41409",
        "package_name": "pcre2",
        "installed_version": "10.34-r1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Integer overflow vulnerability in pcre2test before 10.41 allows attackers to cause a denial of service or other unspecified impacts via negative input.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-41772",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45285",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Using go get to fetch a module with the \".git\" suffix may unexpectedly fallback to the insecure \"git://\" protocol if the module is unavailable via the secure \"https://\" and \"git+ssh://\" protocols, even if GOINSECURE is not set for said module. This only affects users who are not using the module proxy and are fetching modules directly (i.e. GOPROXY=off).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-50349",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. When Git asks for credentials via a terminal prompt (i.e. without using any credential helper), it prints out the host name for which the user is expected to provide a username and/or a password. At this stage, any URL-encoded parts have been decoded already, and are printed verbatim. This allows attackers to craft URLs that contain ANSI escape sequences that the terminal interpret to confuse users e.g. into providing passwords for trusted Git hosting sites when in fact they are then sent to untrusted sites that are under the attacker's control. This issue has been patch via commits `7725b81` and `c903985` which are included in release versions v2.48.1, v2.47.2, v2.46.3, v2.45.3, v2.44.3, v2.43.6, v2.42.4, v2.41.3, and v2.40.4. Users are advised to upgrade. Users unable to upgrade should avoid cloning from untrusted URLs, especially recursive clones.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22898",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.67.0-r4",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41725",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29400",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-45336",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The HTTP client drops sensitive headers after following a cross-domain redirect. For example, a request to a.com/ containing an Authorization header which is redirected to b.com/ will not send that header to b.com. In the event that the client received a subsequent same-domain redirect, however, the sensitive headers would be restored. For example, a chain of redirects from a.com/, to b.com/1, and finally to b.com/2 would incorrectly send the Authorization header to b.com/2.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-34155",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.7",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24534",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32148",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8284",
        "package_name": "libcurl",
        "installed_version": "7.67.0-r0",
        "fixed_version": "7.79.0-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30631",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1705",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-32465",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. The Git project recommends to avoid working in untrusted repositories, and instead to clone it first with `git clone --no-local` to obtain a clean copy. Git has specific protections to make that a safe operation even with an untrusted source repository, but vulnerabilities allow those protections to be bypassed. In the context of cloning local repositories owned by other users, this vulnerability has been covered in CVE-2024-32004. But there are circumstances where the fixes for CVE-2024-32004 are not enough: For example, when obtaining a `.zip` file containing a full copy of a Git repository, it should not be trusted by default to be safe, as e.g. hooks could be configured to run within the context of that repository. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4. As a workaround, avoid using Git in repositories that have been obtained via archives from untrusted sources.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30630",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-39326",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.20.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A malicious HTTP sender can use chunk extensions to cause a receiver reading from a request or response body to read many more bytes from the network than are in the body. A malicious HTTP client can further exploit this to cause a server to automatically read a large amount of data (up to about 1GiB) when a handler fails to read the entire body of a request. Chunk extensions are a little-used HTTP feature which permit including additional metadata in a request or response body sent using the chunked encoding. The net/http chunked encoding reader discards this metadata. A sender can exploit this by inserting a large metadata segment with each byte transferred. The chunk reader now produces an error if the ratio of real body to encoded bytes grows too small.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33195",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30580",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-45341",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A certificate with a URI which has a IPv6 address with a zone ID may incorrectly satisfy a URI name constraint that applies to the certificate chain. Certificates containing URIs are not permitted in the web PKI, so this only affects users of private PKIs which make use of URIs.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33198",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2880",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.18.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-30629",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.11",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Non-random values for ticket_age_add in session tickets in crypto/tls before Go 1.17.11 and Go 1.18.3 allow an attacker that can observe TLS handshakes to correlate successive connections by comparing ticket ages during session resumption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23806",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.14",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3114",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.14.14",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In Go before 1.14.14 and 1.15.x before 1.15.7, crypto/elliptic/p224.go can generate incorrect outputs, related to an underflow of the lowest limb during the final complete reduction in the P-224 field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1d-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27918",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.9",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33197",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.13",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In Go before 1.15.13 and 1.16.x before 1.16.5, some configurations of ReverseProxy (from net/http/httputil) result in a situation where an attacker is able to drop arbitrary headers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-32020",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, local clones may end up hardlinking files into the target repository's object database when source and target repository reside on the same disk. If the source repository is owned by a different user, then those hardlinked files may be rewritten at any point in time by the untrusted user. Cloning local repositories will cause Git to either copy or hardlink files of the source repository into the target repository. This significantly speeds up such local clones compared to doing a \"proper\" clone and saves both disk space and compute time. When cloning a repository located on the same disk that is owned by a different user than the current user we also end up creating such hardlinks. These files will continue to be owned and controlled by the potentially-untrusted user and can be rewritten by them at will in the future. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33196",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-22871",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.23.8",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The net/http package improperly accepts a bare LF as a line terminator in chunked data chunk-size lines. This can permit request smuggling if a net/http server is used in conjunction with a server that incorrectly accepts a bare LF as part of a chunk-ext.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-47906",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.23.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "If the PATH environment variable contains paths which are executables (rather than just directories), passing certain strings to LookPath (\"\", \".\", and \"..\"), can result in the binaries listed in the PATH being unexpectedly returned.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-47907",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.23.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-24921",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.15",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39293",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24532",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.7",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The ScalarMult and ScalarBaseMult methods of the P256 Curve may return an incorrect result if called with some specific unreduced scalars (a scalar larger than the order of the curve). This does not impact usages of crypto/ecdsa or crypto/ecdh.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23772",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.16.14",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41724",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-41715",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.18.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2879",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.18.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28131",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-24537",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-48386",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a fast, scalable, distributed revision control system with an unusually rich command set that provides both high-level operations and full access to internals. The wincred credential helper uses a static buffer (target) as a unique key for storing and comparing against internal storage. This credential helper does not properly bounds check the available space remaining in the buffer before appending to it with wcsncat(), leading to potential buffer overflows. This vulnerability is fixed in v2.43.7, v2.44.4, v2.45.4, v2.46.4, v2.47.3, v2.48.2, v2.49.1, and v2.50.1.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-4673",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.23.10",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Proxy-Authorization and Proxy-Authenticate headers persisted on cross-origin redirects potentially leaking sensitive information.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-29403",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.19.10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-22866",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.22.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Due to the usage of a variable time instruction in the assembly implementation of an internal function, a small number of bits of secret scalars are leaked on the ppc64le architecture. Due to the way this function is used, we do not believe this leakage is enough to allow recovery of the private key when P-256 is used in any well known protocols.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-31525",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.15.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "net/http in Go before 1.15.12 and 1.16.x before 1.16.4 allows remote attackers to cause a denial of service (panic) via a large header to ReadRequest or ReadResponse. Server, Transport, and Client can each be affected in some configurations.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-4674",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.23.11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The go command may execute unexpected commands when operating in untrusted VCS repositories. This occurs when possibly dangerous VCS configuration is present in repositories. This can happen when a repository was fetched via one VCS (e.g. Git), but contains metadata for another VCS (e.g. Mercurial). Modules which are retrieved using the go command line, i.e. via \"go get\", are not affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-32021",
        "package_name": "git",
        "installed_version": "2.24.3-r0",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Git is a revision control system. Prior to versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4, when cloning a local source repository that contains symlinks via the filesystem, Git may create hardlinks to arbitrary user-readable files on the same filesystem as the target repository in the `objects/` directory. Cloning a local repository over the filesystem may creating hardlinks to arbitrary user-owned files on the same filesystem in the target Git repository's `objects/` directory. When cloning a repository over the filesystem (without explicitly specifying the `file://` protocol or `--no-local`), the optimizations for local cloning\nwill be used, which include attempting to hard link the object files instead of copying them. While the code includes checks against symbolic links in the source repository, which were added during the fix for CVE-2022-39253, these checks can still be raced because the hard link operation ultimately follows symlinks. If the object on the filesystem appears as a file during the check, and then a symlink during the operation, this will allow the adversary to bypass the check and create hardlinks in the destination objects directory to arbitrary, user-readable files. The problem has been patched in versions 2.45.1, 2.44.1, 2.43.4, 2.42.2, 2.41.1, 2.40.2, and 2.39.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-24789",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.21.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1962",
        "package_name": "go",
        "installed_version": "1.14.1",
        "fixed_version": "1.17.12",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Uncontrolled recursion in the Parse functions in go/parser before Go 1.17.12 and Go 1.18.4 allow an attacker to cause a panic due to stack exhaustion via deeply nested types or declarations.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-26159",
        "package_name": "oniguruma",
        "installed_version": "6.9.4-r0",
        "fixed_version": "6.9.4-r1",
        "severity": "UNKNOWN",
        "image": "hyperledger/fabric-tools:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      }
    ],
    "hyperledger/fabric-peer:2.1": [
      {
        "cve_id": "CVE-2021-36159",
        "package_name": "apk-tools",
        "installed_version": "2.10.5-r0",
        "fixed_version": "2.10.7-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "libfetch: an out of boundary read while libfetch uses strtol to parse the relevant numbers into address bytes leads to information leak or crash",
        "description": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-30139",
        "package_name": "apk-tools",
        "installed_version": "2.10.5-r0",
        "fixed_version": "2.10.6-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "",
        "description": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-37434",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "1.2.11-r4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23806",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: IsOnCurve returns true for invalid field elements",
        "description": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24538",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: backticks not treated as string delimiters",
        "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24540",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of JavaScript whitespace",
        "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-24790",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.11, 1.22.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/netip: Unexpected behavior from Is methods for IPv4-mapped IPv6 addresses",
        "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-16845",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.13.15, 1.14.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: ReadUvarint and ReadVarint can read an unlimited number of bytes from invalid inputs",
        "description": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-28362",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.14.12, 1.15.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: panic during recursive division of very large numbers",
        "description": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-27918",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.9, 1.16.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: infinite loop when using xml.NewTokenDecoder with a custom TokenReader",
        "description": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33195",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net: lookup functions may return invalid host names",
        "description": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33196",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion",
        "description": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33198",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big.Rat: may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents",
        "description": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-39293",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.8, 1.17.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion (incomplete fix of CVE-2021-33196)",
        "description": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41771",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: debug/macho: invalid dynamic symbol table command can cause panic",
        "description": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: Reader.Open panics on empty string",
        "description": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-44716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.12, 1.17.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: limit growth of header canonicalization cache",
        "description": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-23772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: uncontrolled memory consumption due to an unhandled overflow via Rat.SetString",
        "description": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24675",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/pem: fix stack overflow in Decode",
        "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24921",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.15, 1.17.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: regexp: stack exhaustion via a deeply nested expression",
        "description": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-27664",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.6, 1.19.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: handle server errors after sending GOAWAY",
        "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28131",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Decoder.Skip",
        "description": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28327",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: panic caused by oversized scalar",
        "description": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2879",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/tar: github.com/vbatts/tar-split: unbounded memory consumption when reading headers",
        "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2880",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http/httputil: ReverseProxy should not forward unparseable query parameters",
        "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-29804",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30580",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: os/exec: Code injection in Cmd.Start",
        "description": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30630",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: io/fs: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30631",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: compress/gzip: stack exhaustion in Reader.Read",
        "description": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30632",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30633",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Unmarshal",
        "description": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30634",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 << 32 - 1 bytes.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30635",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/gob: stack exhaustion in Decoder.Decode",
        "description": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-32189",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.13, 1.18.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service",
        "description": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41715",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: regexp/syntax: limit memory used by parsing regexps",
        "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.8, 1.19.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "Due to unsanitized NUL values, attackers may be able to maliciously se ...",
        "description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41720",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.9, 1.19.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: os, net/http: avoid escapes from os.DirFS and http.Dir on Windows",
        "description": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41722",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: path-filepath filepath.Clean path traversal",
        "description": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41723",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang.org/x/net/http2: avoid quadratic complexity in HPACK decoding",
        "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41724",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: large handshake records may cause panics",
        "description": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41725",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, mime/multipart: denial of service from excessive resource consumption",
        "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24534",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto: denial of service from excessive memory allocation",
        "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24536",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption",
        "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24537",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: go/parser: Infinite loop in parsing",
        "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24539",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper sanitization of CSS values",
        "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29400",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of empty HTML attributes",
        "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29403",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.10, 1.20.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: runtime: unexpected behavior of setuid/setgid binaries",
        "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-39325",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.10, 1.21.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: rapid stream resets can cause excessive work (CVE-2023-44487)",
        "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45283",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.11, 1.21.4, 1.20.12, 1.21.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "The filepath package does not recognize paths with a \\??\\ prefix as sp ...",
        "description": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45287",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: Timing Side Channel attack in RSA based TLS key exchanges.",
        "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45288",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.9, 1.22.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-34156",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.22.7, 1.23.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "encoding/gob: golang: Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion",
        "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2025-47907",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.23.12, 1.24.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "trivy",
        "title": "database/sql: Postgres Scan Race Condition",
        "description": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45853",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-25032",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      }
    ],
    "hyperledger/fabric-couchdb:latest": [
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "bsdutils",
        "installed_version": "1:2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8177",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Incorrect argument check can allow remote servers to overwrite local files",
        "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8231",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Expired pointer dereference via multi API with CURLOPT_CONNECT_ONLY option set",
        "description": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8285",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Malicious FTP server can trigger stack overflow when CURLOPT_CHUNK_BGN_FUNCTION is used",
        "description": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8286",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Inferior OCSP verification",
        "description": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22946",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u16",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Requirement to use TLS not properly enforced for IMAP, POP3, and FTP protocols",
        "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000858",
        "package_name": "dirmngr",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gnupg2: Cross site request forgery in dirmngr resulting in an information disclosure or denial of service",
        "description": "GnuPG version 2.1.12 - 2.2.11 contains a Cross ite Request Forgery (CSRF) vulnerability in dirmngr that can result in Attacker controlled CSRF, Information Disclosure, DoS. This attack appear to be exploitable via Victim must perform a WKD request, e.g. enter an email address in the composer window of Thunderbird/Enigmail. This vulnerability appears to have been fixed in after commit 4a4bb874f63741026bd26264c43bb32b1099f060.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1664",
        "package_name": "dpkg",
        "installed_version": "1.18.25",
        "fixed_version": "1.18.26",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "Dpkg::Source::Archive in dpkg, the Debian package management system, b ...",
        "description": "Dpkg::Source::Archive in dpkg, the Debian package management system, before version 1.21.8, 1.20.10, 1.19.8, 1.18.26 is prone to a directory traversal vulnerability. When extracting untrusted source packages in v2 and v3 source package formats that include a debian.tar, the in-place extraction can lead to directory traversal situations on specially crafted orig.tar and debian.tar tarballs.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1304",
        "package_name": "e2fslibs",
        "installed_version": "1.43.4-2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "e2fsprogs: out-of-bounds read/write via crafted filesystem",
        "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1304",
        "package_name": "e2fsprogs",
        "installed_version": "1.43.4-2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "e2fsprogs: out-of-bounds read/write via crafted filesystem",
        "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-12886",
        "package_name": "gcc-6-base",
        "installed_version": "6.3.0-18+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass",
        "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000858",
        "package_name": "gnupg",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gnupg2: Cross site request forgery in dirmngr resulting in an information disclosure or denial of service",
        "description": "GnuPG version 2.1.12 - 2.2.11 contains a Cross ite Request Forgery (CSRF) vulnerability in dirmngr that can result in Attacker controlled CSRF, Information Disclosure, DoS. This attack appear to be exploitable via Victim must perform a WKD request, e.g. enter an email address in the composer window of Thunderbird/Enigmail. This vulnerability appears to have been fixed in after commit 4a4bb874f63741026bd26264c43bb32b1099f060.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000858",
        "package_name": "gnupg-agent",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gnupg2: Cross site request forgery in dirmngr resulting in an information disclosure or denial of service",
        "description": "GnuPG version 2.1.12 - 2.2.11 contains a Cross ite Request Forgery (CSRF) vulnerability in dirmngr that can result in Attacker controlled CSRF, Information Disclosure, DoS. This attack appear to be exploitable via Victim must perform a WKD request, e.g. enter an email address in the composer window of Thunderbird/Enigmail. This vulnerability appears to have been fixed in after commit 4a4bb874f63741026bd26264c43bb32b1099f060.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000858",
        "package_name": "gpgv",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gnupg2: Cross site request forgery in dirmngr resulting in an information disclosure or denial of service",
        "description": "GnuPG version 2.1.12 - 2.2.11 contains a Cross ite Request Forgery (CSRF) vulnerability in dirmngr that can result in Attacker controlled CSRF, Information Disclosure, DoS. This attack appear to be exploitable via Victim must perform a WKD request, e.g. enter an email address in the composer window of Thunderbird/Enigmail. This vulnerability appears to have been fixed in after commit 4a4bb874f63741026bd26264c43bb32b1099f060.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1271",
        "package_name": "gzip",
        "installed_version": "1.6-5+b1",
        "fixed_version": "1.6-5+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gzip: arbitrary-file-write vulnerability",
        "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-26720",
        "package_name": "libavahi-client3",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is ...",
        "description": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is executed as root via /etc/network/if-up.d/avahi-daemon, and allows a local attacker to cause a denial of service or create arbitrary empty files via a symlink attack on files under /run/avahi-daemon. NOTE: this only affects the packaging for Debian GNU/Linux (used indirectly by SUSE), not the upstream Avahi product.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-26720",
        "package_name": "libavahi-common-data",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is ...",
        "description": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is executed as root via /etc/network/if-up.d/avahi-daemon, and allows a local attacker to cause a denial of service or create arbitrary empty files via a symlink attack on files under /run/avahi-daemon. NOTE: this only affects the packaging for Debian GNU/Linux (used indirectly by SUSE), not the upstream Avahi product.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-26720",
        "package_name": "libavahi-common3",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is ...",
        "description": "avahi-daemon-check-dns.sh in the Debian avahi package through 0.8-4 is executed as root via /etc/network/if-up.d/avahi-daemon, and allows a local attacker to cause a denial of service or create arbitrary empty files via a symlink attack on files under /run/avahi-daemon. NOTE: this only affects the packaging for Debian GNU/Linux (used indirectly by SUSE), not the upstream Avahi product.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "libblkid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20367",
        "package_name": "libbsd0",
        "installed_version": "0.8.3-1",
        "fixed_version": "0.8.3-1+deb9u1",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nlist.c in libbsd before 0.10.0 has an out-of-bounds read during a com ...",
        "description": "nlist.c in libbsd before 0.10.0 has an out-of-bounds read during a comparison for a symbol name from the string table (strtab).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-12900",
        "package_name": "libbz2-1.0",
        "installed_version": "1.0.6-8.1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "bzip2: bzip2: Data integrity error when decompressing (with data integrity tests fail).",
        "description": "BZ2_decompress in decompress.c in bzip2 through 1.0.6 has an out-of-bounds write when there are many selectors.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35492",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "1.14.8-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "cairo: libreoffice slideshow aborts with stack smashing in cairo's composite_boxes",
        "description": "A flaw was found in cairo's image-compositor.c in all versions prior to 1.17.4. This flaw allows an attacker who can provide a crafted input file to cairo's image-compositor (for example, by convincing a user to open a file in an application using cairo, or if an application uses cairo on untrusted input) to cause a stack buffer overflow -> out-of-bounds WRITE. The highest impact from this vulnerability is to confidentiality, integrity, as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1304",
        "package_name": "libcomerr2",
        "installed_version": "1.43.4-2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "e2fsprogs: out-of-bounds read/write via crafted filesystem",
        "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-3898",
        "package_name": "libcups2",
        "installed_version": "2.2.1-8+deb9u5",
        "fixed_version": "2.2.1-8+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "cups: heap based buffer overflow in libcups's ppdFindOption() in ppd-mark.c",
        "description": "A memory corruption issue was addressed with improved validation. This issue is fixed in macOS Catalina 10.15.4. An application may be able to gain elevated privileges.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8177",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Incorrect argument check can allow remote servers to overwrite local files",
        "description": "curl 7.20.0 through 7.70.0 is vulnerable to improper restriction of names for files and other resources that can lead too overwriting a local file when the -J flag is used.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8231",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u12",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Expired pointer dereference via multi API with CURLOPT_CONNECT_ONLY option set",
        "description": "Due to use of a dangling pointer, libcurl 7.29.0 through 7.71.1 can use the wrong connection when sending data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8285",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Malicious FTP server can trigger stack overflow when CURLOPT_CHUNK_BGN_FUNCTION is used",
        "description": "curl 7.21.0 to and including 7.73.0 is vulnerable to uncontrolled recursion due to a stack overflow issue in FTP wildcard match parsing.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8286",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Inferior OCSP verification",
        "description": "curl 7.41.0 through 7.73.0 is vulnerable to an improper check for certificate revocation due to insufficient verification of the OCSP response.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22946",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u16",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "curl: Requirement to use TLS not properly enforced for IMAP, POP3, and FTP protocols",
        "description": "A user can tell curl >= 7.20.0 and <= 7.78.0 to require a successful upgrade to TLS when speaking to an IMAP, POP3 or FTP server (`--ssl-reqd` on the command line or`CURLOPT_USE_SSL` set to `CURLUSESSL_CONTROL` or `CURLUSESSL_ALL` withlibcurl). This requirement could be bypassed if the server would return a properly crafted but perfectly legitimate response.This flaw would then make curl silently continue its operations **withoutTLS** contrary to the instructions and expectations, exposing possibly sensitive data in clear text over the network.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-8457",
        "package_name": "libdb5.3",
        "installed_version": "5.3.28-12+deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: heap out-of-bound read in function rtreenode()",
        "description": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35512",
        "package_name": "libdbus-1-3",
        "installed_version": "1.10.28-0+deb9u1",
        "fixed_version": "1.10.32-0+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "dbus: users with the same numeric UID could lead to use-after-free and undefined behaviour",
        "description": "A use-after-free flaw was found in D-Bus Development branch <= 1.13.16, dbus-1.12.x stable branch <= 1.12.18, and dbus-1.10.x and older branches <= 1.10.30 when a system has multiple usernames sharing the same UID. When a set of policy rules references these usernames, D-Bus may free some memory in the heap, which is still used by data structures necessary for the other usernames sharing the UID, possibly leading to a crash or other undefined behaviors",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22822",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in addBinding in xmlparse.c",
        "description": "addBinding in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22823",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in build_model in xmlparse.c",
        "description": "build_model in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22824",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in defineAttribute in xmlparse.c",
        "description": "defineAttribute in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23852",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u5",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in function XML_GetBuffer",
        "description": "Expat (aka libexpat) before 2.4.4 has a signed integer overflow in XML_GetBuffer, for configurations with a nonzero XML_CONTEXT_BYTES.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-25235",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u5",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Malformed 2- and 3-byte UTF-8 sequences can lead to arbitrary code execution",
        "description": "xmltok_impl.c in Expat (aka libexpat) before 2.4.5 lacks certain validation of encoding, such as checks for whether a UTF-8 character is valid in a certain context.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-25236",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u5",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Namespace-separator characters in \"xmlns[:prefix]\" attribute values can lead to arbitrary code execution",
        "description": "xmlparse.c in Expat (aka libexpat) before 2.4.5 allows attackers to insert namespace-separator characters into namespace URIs.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-25315",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u5",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in storeRawNames()",
        "description": "In Expat (aka libexpat) before 2.4.5, there is an integer overflow in storeRawNames.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-45960",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Large number of prefixed XML attributes on a single tag can crash libexpat",
        "description": "In Expat (aka libexpat) before 2.4.3, a left shift by 29 (or more) places in the storeAtts function in xmlparse.c can lead to realloc misbehavior (e.g., allocating too few bytes, or only freeing memory).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-46143",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in doProlog in xmlparse.c",
        "description": "In doProlog in xmlparse.c in Expat (aka libexpat) before 2.4.3, an integer overflow exists for m_groupSize.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22825",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in lookup in xmlparse.c",
        "description": "lookup in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22826",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in nextScaffoldPart in xmlparse.c",
        "description": "nextScaffoldPart in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22827",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: Integer overflow in storeAtts in xmlparse.c",
        "description": "storeAtts in xmlparse.c in Expat (aka libexpat) before 2.4.3 has an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23990",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "expat: integer overflow in the doProlog function",
        "description": "Expat (aka libexpat) before 2.4.4 has an integer overflow in the doProlog function.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "libfdisk1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-15999",
        "package_name": "libfreetype6",
        "installed_version": "2.6.3-3.2+deb9u1",
        "fixed_version": "2.6.3-3.2+deb9u2",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "freetype: Heap-based buffer overflow due to integer truncation in Load_SBit_Png",
        "description": "Heap buffer overflow in Freetype in Google Chrome prior to 86.0.4240.111 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27404",
        "package_name": "libfreetype6",
        "installed_version": "2.6.3-3.2+deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "FreeType: Buffer overflow in sfnt_init_face",
        "description": "FreeType commit 1e2eb65048f75c64b68708efed6ce904c31f3b2f was discovered to contain a heap buffer overflow via the function sfnt_init_face.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27405",
        "package_name": "libfreetype6",
        "installed_version": "2.6.3-3.2+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "FreeType: Segmentation violation via FNT_Size_Request",
        "description": "FreeType commit 53dfdcd8198d2b3201a23c4bad9190519ba918db was discovered to contain a segmentation violation via the function FNT_Size_Request.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27406",
        "package_name": "libfreetype6",
        "installed_version": "2.6.3-3.2+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "Freetype: Segmentation violation via FT_Request_Size",
        "description": "FreeType commit 22a0cccb4d9d002f33c1ba7a4b36812c7d4f46b5 was discovered to contain a segmentation violation via the function FT_Request_Size.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-12886",
        "package_name": "libgcc1",
        "installed_version": "1:6.3.0-18+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass",
        "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33560",
        "package_name": "libgcrypt20",
        "installed_version": "1.7.6-2+deb9u3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libgcrypt: mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm",
        "description": "Libgcrypt before 1.8.8 and 1.9.x before 1.9.3 mishandles ElGamal encryption because it lacks exponent blinding to address a side-channel attack against mpi_powm, and the window size is not chosen appropriately. This, for example, affects use of ElGamal in OpenPGP.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27218",
        "package_name": "libglib2.0-0",
        "installed_version": "2.50.3-2+deb9u2",
        "fixed_version": "2.50.3-2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "glib: integer overflow in g_byte_array_new_take function when called with a buffer of 4GB or more on a 64-bit platform",
        "description": "An issue was discovered in GNOME GLib before 2.66.7 and 2.67.x before 2.67.4. If g_byte_array_new_take() was called with a buffer of 4GB or more on a 64-bit platform, the length would be truncated modulo 2**32, causing unintended length truncation.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27219",
        "package_name": "libglib2.0-0",
        "installed_version": "2.50.3-2+deb9u2",
        "fixed_version": "2.50.3-2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "glib: integer overflow in g_bytes_new function on 64-bit platforms due to an implicit cast from 64 bits to 32 bits",
        "description": "An issue was discovered in GNOME GLib before 2.66.6 and 2.67.x before 2.67.3. The function g_bytes_new has an integer overflow on 64-bit platforms due to an implicit cast from 64 bits to 32 bits. The overflow could potentially lead to memory corruption.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-43618",
        "package_name": "libgmp10",
        "installed_version": "2:6.1.2+dfsg-1",
        "fixed_version": "2:6.1.2+dfsg-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gmp: Integer overflow and resultant buffer overflow via crafted input",
        "description": "GNU Multiple Precision Arithmetic Library (GMP) through 6.2.1 has an mpz/inp_raw.c integer overflow and resultant buffer overflow via crafted input, leading to a segmentation fault on 32-bit platforms.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-3829",
        "package_name": "libgnutls30",
        "installed_version": "3.5.8-5+deb9u4",
        "fixed_version": "3.5.8-5+deb9u5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gnutls: use-after-free/double-free in certificate verification",
        "description": "A vulnerability was found in gnutls versions from 3.5.8 before 3.6.7. A memory corruption (double free) vulnerability in the certificate verification API. Any client or server application that verifies X.509 certificates with GnuTLS 3.5.8 or later is affected.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-7999",
        "package_name": "libgraphite2-3",
        "installed_version": "1.3.10-1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "graphite2: NULL pointer dereference in Segment.cpp in libgraphite2",
        "description": "In libgraphite2 in graphite2 1.3.11, a NULL pointer dereference vulnerability was found in Segment.cpp during a dumbRendering operation, which may allow attackers to cause a denial of service or possibly have unspecified other impact via a crafted .ttf file.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28196",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "krb5: unbounded recursion via an ASN.1-encoded Kerberos message in lib/krb5/asn.1/asn1_encode.c may lead to DoS",
        "description": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-20305",
        "package_name": "libhogweed4",
        "installed_version": "3.3-1+b2",
        "fixed_version": "3.3-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nettle: Out of bounds memory access in signature verification",
        "description": "A flaw was found in Nettle in versions before 3.7.2, where several Nettle signature verification functions (GOST DSA, EDDSA & ECDSA) result in the Elliptic Curve Cryptography point (ECC) multiply function being called with out-of-range scalers, possibly resulting in incorrect results. This flaw allows an attacker to force an invalid signature, causing an assertion failure or possible validation. The highest threat to this vulnerability is to confidentiality, integrity, as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3580",
        "package_name": "libhogweed4",
        "installed_version": "3.3-1+b2",
        "fixed_version": "3.3-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nettle: Remote crash in RSA decryption via manipulated ciphertext",
        "description": "A flaw was found in the way nettle's RSA decryption functions handled specially crafted ciphertext. An attacker could use this flaw to provide a manipulated ciphertext leading to application crash and denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-2201",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "1:1.5.1-2+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libjpeg-turbo: several integer overflows and subsequent segfaults when attempting to compress/decompress gigapixel images",
        "description": "In generate_jsimd_ycc_rgb_convert_neon of jsimd_arm64_neon.S, there is a possible out of bounds write due to a missing bounds check. This could lead to remote code execution in an unprivileged process with no additional execution privileges needed. User interaction is needed for exploitation.Product: AndroidVersions: Android-8.0 Android-8.1 Android-9 Android-10Android ID: A-120551338",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13790",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "1:1.5.1-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libjpeg-turbo: heap-based buffer over-read in get_rgb_row() in rdppm.c",
        "description": "libjpeg-turbo 2.0.4, and mozjpeg 4.0.0, has a heap-based buffer over-read in get_rgb_row() in rdppm.c via a malformed PPM input file.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14152",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "1:1.5.1-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libjpeg: improper handling of max_memory_to_use setting can lead to excessive memory consumption",
        "description": "In IJG JPEG (aka libjpeg) before 9d, jpeg_mem_available() in jmemnobs.c in djpeg does not honor the max_memory_to_use setting, possibly causing excessive memory consumption.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28196",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "krb5: unbounded recursion via an ASN.1-encoded Kerberos message in lib/krb5/asn.1/asn1_encode.c may lead to DoS",
        "description": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28196",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "krb5: unbounded recursion via an ASN.1-encoded Kerberos message in lib/krb5/asn.1/asn1_encode.c may lead to DoS",
        "description": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28196",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "krb5: unbounded recursion via an ASN.1-encoded Kerberos message in lib/krb5/asn.1/asn1_encode.c may lead to DoS",
        "description": "MIT Kerberos 5 (aka krb5) before 1.17.2 and 1.18.x before 1.18.3 allows unbounded recursion via an ASN.1-encoded Kerberos message because the lib/krb5/asn.1/asn1_encode.c support for BER indefinite lengths lacks a recursion limit.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29155",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u9",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: OpenLDAP SQL injection",
        "description": "In OpenLDAP 2.x before 2.5.12 and 2.6.x before 2.6.2, a SQL injection vulnerability exists in the experimental back-sql backend to slapd, via a SQL statement within an LDAP query. This can occur during an LDAP search operation when the search filter is processed, due to a lack of proper escaping.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25692",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: NULL pointer dereference for unauthenticated packet in slapd",
        "description": "A NULL pointer dereference was found in OpenLDAP server and was fixed in openldap 2.4.55, during a request for renaming RDNs. An unauthenticated attacker could remotely crash the slapd process by sending a specially crafted request, causing a Denial of Service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25709",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: assertion failure in Certificate List syntax validation",
        "description": "A flaw was found in OpenLDAP. This flaw allows an attacker who can send a malicious packet to be processed by OpenLDAP\u2019s slapd server, to trigger an assertion failure. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25710",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: assertion failure in CSN normalization with invalid input",
        "description": "A flaw was found in OpenLDAP in versions before 2.4.56. This flaw allows an attacker who sends a malicious packet processed by OpenLDAP to force a failed assertion in csnNormalize23(). The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36221",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Integer underflow in serialNumberAndIssuerCheck in schema_init.c",
        "description": "An integer underflow was discovered in OpenLDAP before 2.4.57 leading to slapd crashes in the Certificate Exact Assertion processing, resulting in denial of service (schema_init.c serialNumberAndIssuerCheck).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36222",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in slapd in the saslAuthzTo validation",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an assertion failure in slapd in the saslAuthzTo validation, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36223",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Out-of-bounds read in Values Return Filter",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a slapd crash in the Values Return Filter control handling, resulting in denial of service (double free and out-of-bounds read).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36224",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Invalid pointer free in the saslAuthzTo processing",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an invalid pointer free and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36225",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Double free in the saslAuthzTo processing",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a double free and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36226",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Denial of service via length miscalculation in slap_parse_user",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a memch->bv_len miscalculation and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36227",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Infinite loop in slapd with the cancel_extop Cancel operation",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an infinite loop in slapd with the cancel_extop Cancel operation, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36228",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Integer underflow in issuerAndThisUpdateCheck in schema_init.c",
        "description": "An integer underflow was discovered in OpenLDAP before 2.4.57 leading to a slapd crash in the Certificate List Exact Assertion processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36229",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Type confusion in ad_keystring in ad.c",
        "description": "A flaw was discovered in ldap_X509dn2bv in OpenLDAP before 2.4.57 leading to a slapd crash in the X.509 DN parsing in ad_keystring, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36230",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in ber_next_element in decode.c",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading in an assertion failure in slapd in the X.509 DN parsing in decode.c ber_next_element, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27212",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in slapd in the issuerAndThisUpdateCheck function",
        "description": "In OpenLDAP through 2.4.57 and 2.5.x through 2.5.1alpha, an assertion failure in slapd can occur in the issuerAndThisUpdateCheck function via a crafted packet, resulting in a denial of service (daemon exit) via a short timestamp. This is related to schema_init.c and checkTime.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29155",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u9",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: OpenLDAP SQL injection",
        "description": "In OpenLDAP 2.x before 2.5.12 and 2.6.x before 2.6.2, a SQL injection vulnerability exists in the experimental back-sql backend to slapd, via a SQL statement within an LDAP query. This can occur during an LDAP search operation when the search filter is processed, due to a lack of proper escaping.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25692",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: NULL pointer dereference for unauthenticated packet in slapd",
        "description": "A NULL pointer dereference was found in OpenLDAP server and was fixed in openldap 2.4.55, during a request for renaming RDNs. An unauthenticated attacker could remotely crash the slapd process by sending a specially crafted request, causing a Denial of Service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25709",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: assertion failure in Certificate List syntax validation",
        "description": "A flaw was found in OpenLDAP. This flaw allows an attacker who can send a malicious packet to be processed by OpenLDAP\u2019s slapd server, to trigger an assertion failure. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-25710",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: assertion failure in CSN normalization with invalid input",
        "description": "A flaw was found in OpenLDAP in versions before 2.4.56. This flaw allows an attacker who sends a malicious packet processed by OpenLDAP to force a failed assertion in csnNormalize23(). The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36221",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Integer underflow in serialNumberAndIssuerCheck in schema_init.c",
        "description": "An integer underflow was discovered in OpenLDAP before 2.4.57 leading to slapd crashes in the Certificate Exact Assertion processing, resulting in denial of service (schema_init.c serialNumberAndIssuerCheck).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36222",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in slapd in the saslAuthzTo validation",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an assertion failure in slapd in the saslAuthzTo validation, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36223",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Out-of-bounds read in Values Return Filter",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a slapd crash in the Values Return Filter control handling, resulting in denial of service (double free and out-of-bounds read).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36224",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Invalid pointer free in the saslAuthzTo processing",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an invalid pointer free and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36225",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Double free in the saslAuthzTo processing",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a double free and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36226",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Denial of service via length miscalculation in slap_parse_user",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to a memch->bv_len miscalculation and slapd crash in the saslAuthzTo processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36227",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Infinite loop in slapd with the cancel_extop Cancel operation",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading to an infinite loop in slapd with the cancel_extop Cancel operation, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36228",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Integer underflow in issuerAndThisUpdateCheck in schema_init.c",
        "description": "An integer underflow was discovered in OpenLDAP before 2.4.57 leading to a slapd crash in the Certificate List Exact Assertion processing, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36229",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Type confusion in ad_keystring in ad.c",
        "description": "A flaw was discovered in ldap_X509dn2bv in OpenLDAP before 2.4.57 leading to a slapd crash in the X.509 DN parsing in ad_keystring, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-36230",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in ber_next_element in decode.c",
        "description": "A flaw was discovered in OpenLDAP before 2.4.57 leading in an assertion failure in slapd in the X.509 DN parsing in decode.c ber_next_element, resulting in denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27212",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "2.4.44+dfsg-5+deb9u8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openldap: Assertion failure in slapd in the issuerAndThisUpdateCheck function",
        "description": "In OpenLDAP through 2.4.57 and 2.5.x through 2.5.1alpha, an assertion failure in slapd can occur in the issuerAndThisUpdateCheck function via a crafted packet, resulting in a denial of service (daemon exit) via a short timestamp. This is related to schema_init.c and checkTime.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3520",
        "package_name": "liblz4-1",
        "installed_version": "0.0~r131-2+b1",
        "fixed_version": "0.0~r131-2+deb9u1",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "lz4: memory corruption due to an integer overflow bug caused by memmove argument",
        "description": "There's a flaw in lz4. An attacker who submits a crafted file to an application linked with lz4 may be able to trigger an integer overflow, leading to calling of memmove() on a negative size argument, causing an out-of-bounds write and/or a crash. The greatest impact of this flaw is to availability, with some potential impact to confidentiality and integrity as well.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1271",
        "package_name": "liblzma5",
        "installed_version": "5.2.2-1.2+b1",
        "fixed_version": "5.2.2-1.2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gzip: arbitrary-file-write vulnerability",
        "description": "An arbitrary file write vulnerability was found in GNU gzip's zgrep utility. When zgrep is applied on the attacker's chosen file name (for example, a crafted file name), this can overwrite an attacker's content to an arbitrary attacker-selected file. This flaw occurs due to insufficient validation when processing filenames with two or more newlines where selected content and the target file names are embedded in crafted multi-line file names. This flaw allows a remote, low privileged attacker to force zgrep to write arbitrary files on the system.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "libmount1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29458",
        "package_name": "libncurses5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "ncurses: segfaulting OOB read",
        "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29458",
        "package_name": "libncursesw5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "ncurses: segfaulting OOB read",
        "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-20305",
        "package_name": "libnettle6",
        "installed_version": "3.3-1+b2",
        "fixed_version": "3.3-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nettle: Out of bounds memory access in signature verification",
        "description": "A flaw was found in Nettle in versions before 3.7.2, where several Nettle signature verification functions (GOST DSA, EDDSA & ECDSA) result in the Elliptic Curve Cryptography point (ECC) multiply function being called with out-of-range scalers, possibly resulting in incorrect results. This flaw allows an attacker to force an invalid signature, causing an assertion failure or possible validation. The highest threat to this vulnerability is to confidentiality, integrity, as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3580",
        "package_name": "libnettle6",
        "installed_version": "3.3-1+b2",
        "fixed_version": "3.3-1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nettle: Remote crash in RSA decryption via manipulated ciphertext",
        "description": "A flaw was found in the way nettle's RSA decryption functions handled specially crafted ciphertext. An attacker could use this flaw to provide a manipulated ciphertext leading to application crash and denial of service.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000168",
        "package_name": "libnghttp2-14",
        "installed_version": "1.18.1-1+deb9u1",
        "fixed_version": "1.18.1-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nghttp2: Null pointer dereference when too large ALTSVC frame is received",
        "description": "nghttp2 version >= 1.10.0 and nghttp2 <= v1.31.0 contains an Improper Input Validation CWE-20 vulnerability in ALTSVC frame handling that can result in segmentation fault leading to denial of service. This attack appears to be exploitable via network client. This vulnerability appears to have been fixed in >= 1.31.1.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-11080",
        "package_name": "libnghttp2-14",
        "installed_version": "1.18.1-1+deb9u1",
        "fixed_version": "1.18.1-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "nghttp2: overly large SETTINGS frames can lead to DoS",
        "description": "In nghttp2 before version 1.41.0, the overly large HTTP/2 SETTINGS frame payload causes denial of service. The proof of concept attack involves a malicious client constructing a SETTINGS frame with a length of 14,400 bytes (2400 individual settings entries) over and over again. The attack causes the CPU to spike at 100%. nghttp2 v1.41.0 fixes this vulnerability. There is a workaround to this vulnerability. Implement nghttp2_on_frame_recv_callback callback, and if received frame is SETTINGS frame and the number of settings entries are large (e.g., > 32), then drop the connection.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-7409",
        "package_name": "libodbc1",
        "installed_version": "2.3.4-1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "unixODBC: Buffer overflow in unicode_to_ansi_copy() can lead to crash or other unspecified impact",
        "description": "In unixODBC before 2.3.5, there is a buffer overflow in the unicode_to_ansi_copy() function in DriverManager/__info.c.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-29361",
        "package_name": "libp11-kit0",
        "installed_version": "0.23.3-2",
        "fixed_version": "0.23.3-2+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "p11-kit: integer overflow when allocating memory for arrays or attributes and object identifiers",
        "description": "An issue was discovered in p11-kit 0.21.1 through 0.23.21. Multiple integer overflows have been discovered in the array allocations in the p11-kit library and the p11-kit list command, where overflow checks are missing before calling realloc or calloc.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12652",
        "package_name": "libpng16-16",
        "installed_version": "1.6.28-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libpng: does not check length of chunks against user limit",
        "description": "libpng before 1.6.32 does not properly check the length of chunks against the user limit.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11464",
        "package_name": "librsvg2-2",
        "installed_version": "2.40.16-1+b1",
        "fixed_version": "2.40.21-0+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "librsvg: SIGFPE is raised in box_blur_line function of rsvg-filter.c",
        "description": "A SIGFPE is raised in the function box_blur_line of rsvg-filter.c in GNOME librsvg 2.40.17 during an attempted parse of a crafted SVG file, because of incorrect protection against division by zero.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11464",
        "package_name": "librsvg2-common",
        "installed_version": "2.40.16-1+b1",
        "fixed_version": "2.40.21-0+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "librsvg: SIGFPE is raised in box_blur_line function of rsvg-filter.c",
        "description": "A SIGFPE is raised in the function box_blur_line of rsvg-filter.c in GNOME librsvg 2.40.17 during an attempted parse of a crafted SVG file, because of incorrect protection against division by zero.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-24407",
        "package_name": "libsasl2-2",
        "installed_version": "2.1.27~101-g0780600+dfsg-3+deb9u1",
        "fixed_version": "2.1.27~101-g0780600+dfsg-3+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "cyrus-sasl: failure to properly escape SQL input allows an attacker to execute arbitrary SQL commands",
        "description": "In Cyrus SASL 2.1.17 through 2.1.27 before 2.1.28, plugins/sql.c does not escape the password for a SQL INSERT or UPDATE statement.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-24407",
        "package_name": "libsasl2-modules-db",
        "installed_version": "2.1.27~101-g0780600+dfsg-3+deb9u1",
        "fixed_version": "2.1.27~101-g0780600+dfsg-3+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "cyrus-sasl: failure to properly escape SQL input allows an attacker to execute arbitrary SQL commands",
        "description": "In Cyrus SASL 2.1.17 through 2.1.27 before 2.1.28, plugins/sql.c does not escape the password for a SQL INSERT or UPDATE statement.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "libsmartcols1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-8457",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: heap out-of-bound read in function rtreenode()",
        "description": "SQLite3 from 3.6.0 to and including 3.27.2 is vulnerable to heap out-of-bound read in the rtreenode() function when handling invalid rtree tables.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20346",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: Multiple flaws in sqlite which can be triggered via corrupted internal databases (Magellan)",
        "description": "SQLite before 3.25.3, when the FTS3 extension is enabled, encounters an integer overflow (and resultant buffer overflow) for FTS3 queries that occur after crafted changes to FTS3 shadow tables, allowing remote attackers to execute arbitrary code by leveraging the ability to run arbitrary SQL statements (such as in certain WebSQL use cases), aka Magellan.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20506",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: Multiple flaws in sqlite which can be triggered via corrupted internal databases (Magellan)",
        "description": "SQLite before 3.25.3, when the FTS3 extension is enabled, encounters an integer overflow (and resultant buffer overflow) for FTS3 queries in a \"merge\" operation that occurs after crafted changes to FTS3 shadow tables, allowing remote attackers to execute arbitrary code by leveraging the ability to run arbitrary SQL statements (such as in certain WebSQL use cases). This is a different vulnerability than CVE-2018-20346.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-8740",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: NULL pointer dereference with databases with schema corrupted with CREATE TABLE AS allows for denial of service",
        "description": "In SQLite through 3.22.0, databases whose schema is corrupted using a CREATE TABLE AS statement could cause a NULL pointer dereference, related to build.c and prepare.c.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20218",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: selectExpander in select.c proceeds with WITH stack unwinding even after a parsing error",
        "description": "selectExpander in select.c in SQLite 3.30.1 proceeds with WITH stack unwinding even after a parsing error.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5827",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: out-of-bounds access due to the use of 32-bit memory allocator interfaces",
        "description": "Integer overflow in SQLite via WebSQL in Google Chrome prior to 74.0.3729.131 allowed a remote attacker to potentially exploit heap corruption via a crafted HTML page.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9936",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: heap-based buffer over-read in function fts5HashEntrySort in sqlite3.c",
        "description": "In SQLite 3.27.2, running fts5 prefix queries inside a transaction could trigger a heap-based buffer over-read in fts5HashEntrySort in sqlite3.c, which may lead to an information leak. This is related to ext/fts5/fts5_hash.c.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9937",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: null-pointer dereference in function fts5ChunkIterate in sqlite3.c",
        "description": "In SQLite 3.27.2, interleaving reads and writes in a single transaction with an fts5 virtual table will lead to a NULL Pointer Dereference in fts5ChunkIterate in sqlite3.c. This is related to ext/fts5/fts5_hash.c and ext/fts5/fts5_index.c.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-11655",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: malformed window-function query leads to DoS",
        "description": "SQLite through 3.31.1 allows attackers to cause a denial of service (segmentation fault) via a malformed window-function query because the AggInfo object's initialization is mishandled.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13630",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: Use-after-free in fts3EvalNextRow in ext/fts3/fts3.c",
        "description": "ext/fts3/fts3.c in SQLite before 3.32.0 has a use-after-free in fts3EvalNextRow, related to the snippet feature.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13871",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "sqlite: use-after-free in resetAccumulator in select.c",
        "description": "SQLite 3.32.2 has a use-after-free in resetAccumulator in select.c because the parse tree rewrite for window functions is too late.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1304",
        "package_name": "libss2",
        "installed_version": "1.43.4-2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "e2fsprogs: out-of-bounds read/write via crafted filesystem",
        "description": "An out-of-bounds read/write vulnerability was found in e2fsprogs 1.46.5. This issue leads to a segmentation fault and possibly arbitrary code execution via a specially crafted filesystem.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-13115",
        "package_name": "libssh2-1",
        "installed_version": "1.7.0-1+deb9u1",
        "fixed_version": "1.7.0-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libssh2: integer overflow in kex_method_diffie_hellman_group_exchange_sha256_key_exchange in kex.c leads to out-of-bounds write",
        "description": "In libssh2 before 1.9.0, kex_method_diffie_hellman_group_exchange_sha256_key_exchange in kex.c has an integer overflow that could lead to an out-of-bounds read in the way packets are read from the server. A remote attacker who compromises a SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server. This is related to an _libssh2_check_length mistake, and is different from the various issues fixed in 1.8.1, such as CVE-2019-3855.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17498",
        "package_name": "libssh2-1",
        "installed_version": "1.7.0-1+deb9u1",
        "fixed_version": "1.7.0-1+deb9u2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libssh2: integer overflow in SSH_MSG_DISCONNECT logic in packet.c",
        "description": "In libssh2 v1.9.0 and earlier versions, the SSH_MSG_DISCONNECT logic in packet.c has an integer overflow in a bounds check, enabling an attacker to specify an arbitrary (out-of-bounds) offset for a subsequent memory read. A crafted SSH server may be able to disclose sensitive information or cause a denial of service condition on the client system when a user connects to the server.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Infinite loop in BN_mod_sqrt() reachable when parsing certificates",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Infinite loop in BN_mod_sqrt() reachable when parsing certificates",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u6",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: c_rehash script allows command injection",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-12886",
        "package_name": "libstdc++6",
        "installed_version": "6.3.0-18+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "gcc: spilling of stack protection address in cfgexpand.c and function.c leads to stack-overflow protection bypass",
        "description": "stack_protect_prologue in cfgexpand.c and stack_protect_epilogue in function.c in GNU Compiler Collection (GCC) 4.1 through 8 (under certain circumstances) generate instruction sequences when targeting ARM targets that spill the address of the stack protector guard, which allows an attacker to bypass the protection of -fstack-protector, -fstack-protector-all, -fstack-protector-strong, and -fstack-protector-explicit against stack overflow by controlling what the stack canary is compared against.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-3843",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: services with DynamicUser can create SUID/SGID binaries",
        "description": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-3844",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: services with DynamicUser can get new privileges and create SGID binaries",
        "description": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1712",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "232-25+deb9u14",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: use-after-free when asynchronous polkit queries are performed",
        "description": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-19131",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libtiff: a buffer overflow via the \"invertImage()\" may lead to DoS",
        "description": "Buffer Overflow in LibTiff v4.0.10 allows attackers to cause a denial of service via the \"invertImage()\" function in the component \"tiffcrop\".",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35523",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libtiff: Integer overflow in tif_getimage.c",
        "description": "An integer overflow flaw was found in libtiff that exists in the tif_getimage.c file. This flaw allows an attacker to inject and execute arbitrary code when a user opens a crafted TIFF file. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35524",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libtiff: Heap-based buffer overflow in TIFF2PDF tool",
        "description": "A heap-based buffer overflow flaw was found in libtiff in the handling of TIFF images in libtiff's TIFF2PDF tool. A specially crafted TIFF file can lead to arbitrary code execution. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29458",
        "package_name": "libtinfo5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "ncurses: segfaulting OOB read",
        "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-3843",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: services with DynamicUser can create SUID/SGID binaries",
        "description": "It was discovered that a systemd service that uses DynamicUser property can create a SUID/SGID binary that would be allowed to run as the transient service UID/GID even after the service is terminated. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the UID/GID will be recycled.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-3844",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: services with DynamicUser can get new privileges and create SGID binaries",
        "description": "It was discovered that a systemd service that uses DynamicUser property can get new privileges through the execution of SUID binaries, which would allow to create binaries owned by the service transient group with the setgid bit set. A local attacker may use this flaw to access resources that will be owned by a potentially different service in the future, when the GID will be recycled.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1712",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "232-25+deb9u14",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "systemd: use-after-free when asynchronous polkit queries are performed",
        "description": "A heap use-after-free vulnerability was found in systemd before version v245-rc1, where asynchronous Polkit queries are performed while handling dbus messages. A local unprivileged attacker can abuse this flaw to crash systemd services or potentially execute code and elevate their privileges, by sending specially crafted dbus messages.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "libuuid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-31535",
        "package_name": "libx11-6",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: missing request length checks",
        "description": "LookupCol.c in X.Org X through X11R7.7 and libX11 before 1.7.1 might allow remote attackers to execute arbitrary code. The libX11 XLookupColor request (intended for server-side color lookup) contains a flaw allowing a client to send color-name requests with a name longer than the maximum size allowed by the protocol (and also longer than the maximum packet size for normal-sized packets). The user-controlled data exceeding the maximum size is then interpreted by the server as additional X protocol requests and executed, e.g., to disable X server authorization completely. For example, if the victim encounters malicious terminal control sequences for color codes, then the attacker may be able to take full control of the running graphical session.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14363",
        "package_name": "libx11-6",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: integer overflow leads to double free in locale handling",
        "description": "An integer overflow vulnerability leading to a double-free was found in libX11. This flaw allows a local privileged attacker to cause an application compiled with libX11 to crash, or in some cases, result in arbitrary code execution. The highest threat from this flaw is to confidentiality, integrity as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-31535",
        "package_name": "libx11-data",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: missing request length checks",
        "description": "LookupCol.c in X.Org X through X11R7.7 and libX11 before 1.7.1 might allow remote attackers to execute arbitrary code. The libX11 XLookupColor request (intended for server-side color lookup) contains a flaw allowing a client to send color-name requests with a name longer than the maximum size allowed by the protocol (and also longer than the maximum packet size for normal-sized packets). The user-controlled data exceeding the maximum size is then interpreted by the server as additional X protocol requests and executed, e.g., to disable X server authorization completely. For example, if the victim encounters malicious terminal control sequences for color codes, then the attacker may be able to take full control of the running graphical session.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14363",
        "package_name": "libx11-data",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: integer overflow leads to double free in locale handling",
        "description": "An integer overflow vulnerability leading to a double-free was found in libX11. This flaw allows a local privileged attacker to cause an application compiled with libX11 to crash, or in some cases, result in arbitrary code execution. The highest threat from this flaw is to confidentiality, integrity as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-31535",
        "package_name": "libx11-xcb1",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: missing request length checks",
        "description": "LookupCol.c in X.Org X through X11R7.7 and libX11 before 1.7.1 might allow remote attackers to execute arbitrary code. The libX11 XLookupColor request (intended for server-side color lookup) contains a flaw allowing a client to send color-name requests with a name longer than the maximum size allowed by the protocol (and also longer than the maximum packet size for normal-sized packets). The user-controlled data exceeding the maximum size is then interpreted by the server as additional X protocol requests and executed, e.g., to disable X server authorization completely. For example, if the victim encounters malicious terminal control sequences for color codes, then the attacker may be able to take full control of the running graphical session.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14363",
        "package_name": "libx11-xcb1",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libX11: integer overflow leads to double free in locale handling",
        "description": "An integer overflow vulnerability leading to a double-free was found in libX11. This flaw allows a local privileged attacker to cause an application compiled with libX11 to crash, or in some cases, result in arbitrary code execution. The highest threat from this flaw is to confidentiality, integrity as well as system availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-8872",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Out-of-bounds read in htmlParseTryOrFinish",
        "description": "The htmlParseTryOrFinish function in HTMLparser.c in libxml2 2.9.4 allows attackers to cause a denial of service (buffer over-read) or information disclosure.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-16932",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Infinite recursion in parameter entities",
        "description": "parser.c in libxml2 before 2.9.5 does not prevent infinite recursion in parameter entities.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-5130",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "chromium-browser: heap overflow in libxml2",
        "description": "An integer overflow in xmlmemory.c in libxml2 before 2.9.5, as used in Google Chrome prior to 62.0.3202.62 and other products, allowed a remote attacker to potentially exploit heap corruption via a crafted XML file.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-14404",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: NULL pointer dereference in xmlXPathCompOpEval() function in xpath.c",
        "description": "A NULL pointer dereference vulnerability exists in the xpath.c:xmlXPathCompOpEval() function of libxml2 through 2.9.8 when parsing an invalid XPath expression in the XPATH_OP_AND or XPATH_OP_OR case. Applications processing untrusted XSL format inputs with the use of the libxml2 library may be vulnerable to a denial of service attack due to a crash of the application.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19956",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: memory leak in xmlParseBalancedChunkMemoryRecover in parser.c",
        "description": "xmlParseBalancedChunkMemoryRecover in parser.c in libxml2 before 2.9.10 has a memory leak related to newDoc->oldNs.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20388",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: memory leak in xmlSchemaPreRun in xmlschemas.c",
        "description": "xmlSchemaPreRun in xmlschemas.c in libxml2 2.9.10 allows an xmlSchemaValidateStream memory leak.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-7595",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: infinite loop in xmlStringLenDecodeEntities in some end-of-file situations",
        "description": "xmlStringLenDecodeEntities in parser.c in libxml2 2.9.10 has an infinite loop in a certain end-of-file situation.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3516",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Use-after-free in xmlEncodeEntitiesInternal() in entities.c",
        "description": "There's a flaw in libxml2's xmllint in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by xmllint could trigger a use-after-free. The greatest impact of this flaw is to confidentiality, integrity, and availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3517",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Heap-based buffer overflow in xmlEncodeEntitiesInternal() in entities.c",
        "description": "There is a flaw in the xml entity encoding functionality of libxml2 in versions before 2.9.11. An attacker who is able to supply a crafted file to be processed by an application linked with the affected functionality of libxml2 could trigger an out-of-bounds read. The most likely impact of this flaw is to application availability, with some potential impact to confidentiality and integrity if an attacker is able to use memory information to further exploit the application.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3518",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Use-after-free in xmlXIncludeDoProcess() in xinclude.c",
        "description": "There's a flaw in libxml2 in versions before 2.9.11. An attacker who is able to submit a crafted file to be processed by an application linked with libxml2 could trigger a use-after-free. The greatest impact from this flaw is to confidentiality, integrity, and availability.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23308",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "libxml2: Use-after-free of ID and IDREF attributes",
        "description": "valid.c in libxml2 before 2.9.13 has a use-after-free of ID and IDREF attributes.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12424",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "1:4.4-4.1+deb9u1",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "shadow-utils: Buffer overflow via newusers tool",
        "description": "In shadow before 4.5, the newusers tool could be made to manipulate internal data structures in ways unintended by the authors. Malformed input may lead to crashes (with a buffer overflow or other memory corruption) or other unspecified behaviors. This crosses a privilege boundary in, for example, certain web-hosting environments in which a Control Panel allows an unprivileged user account to create subaccounts.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-20002",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "1:4.4-4.1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "The Debian shadow package before 1:4.5-1 for Shadow incorrectly lists  ...",
        "description": "The Debian shadow package before 1:4.5-1 for Shadow incorrectly lists pts/0 and pts/1 as physical terminals in /etc/securetty. This allows local users to login as password-less users even if they are connected by non-physical means such as SSH (hence bypassing PAM's nullok_secure configuration). This notably affects environments such as virtual machines automatically generated with a default blank root password, allowing all local users to escalate privileges.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "mount",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29458",
        "package_name": "ncurses-base",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "ncurses: segfaulting OOB read",
        "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29458",
        "package_name": "ncurses-bin",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "ncurses: segfaulting OOB read",
        "description": "ncurses 6.3 before patch 20220416 has an out-of-bounds read and segmentation violation in convert_strings in tinfo/read_entry.c in the terminfo library.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: Infinite loop in BN_mod_sqrt() reachable when parsing certificates",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u6",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "openssl: c_rehash script allows command injection",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12424",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "1:4.4-4.1+deb9u1",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "shadow-utils: Buffer overflow via newusers tool",
        "description": "In shadow before 4.5, the newusers tool could be made to manipulate internal data structures in ways unintended by the authors. Malformed input may lead to crashes (with a buffer overflow or other memory corruption) or other unspecified behaviors. This crosses a privilege boundary in, for example, certain web-hosting environments in which a Control Panel allows an unprivileged user account to create subaccounts.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-20002",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "1:4.4-4.1+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "The Debian shadow package before 1:4.5-1 for Shadow incorrectly lists  ...",
        "description": "The Debian shadow package before 1:4.5-1 for Shadow incorrectly lists pts/0 and pts/1 as physical terminals in /etc/securetty. This allows local users to login as password-less users even if they are connected by non-physical means such as SSH (hence bypassing PAM's nullok_secure configuration). This notably affects environments such as virtual machines automatically generated with a default blank root password, allowing all local users to escalate privileges.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10543",
        "package_name": "perl-base",
        "installed_version": "5.24.1-3+deb9u5",
        "fixed_version": "5.24.1-3+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "perl: heap-based buffer overflow in regular expression compiler leads to DoS",
        "description": "Perl before 5.30.3 on 32-bit platforms allows a heap-based buffer overflow because nested regular expression quantifiers have an integer overflow.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10878",
        "package_name": "perl-base",
        "installed_version": "5.24.1-3+deb9u5",
        "fixed_version": "5.24.1-3+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "perl: corruption of intermediate language state of compiled regular expression due to integer overflow leads to DoS",
        "description": "Perl before 5.30.3 has an integer overflow related to mishandling of a \"PL_regkind[OP(n)] == NOTHING\" situation. A crafted regular expression could lead to malformed bytecode with a possibility of instruction injection.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12723",
        "package_name": "perl-base",
        "installed_version": "5.24.1-3+deb9u5",
        "fixed_version": "5.24.1-3+deb9u7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "perl: corruption of intermediate language state of compiled regular expression due to recursive S_study_chunk() calls leads to DoS",
        "description": "regcomp.c in Perl before 5.30.3 allows a buffer overflow via a crafted regular expression because of recursive S_study_chunk calls.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-16156",
        "package_name": "perl-base",
        "installed_version": "5.24.1-3+deb9u5",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "perl-CPAN: Bypass of verification of signatures in CHECKSUMS files",
        "description": "CPAN 2.28 allows Signature Verification Bypass.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2779",
        "package_name": "util-linux",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "util-linux: runuser tty hijack via TIOCSTI ioctl",
        "description": "runuser in util-linux allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-25032",
        "package_name": "zlib1g",
        "installed_version": "1:1.2.8.dfsg-5",
        "fixed_version": "1:1.2.8.dfsg-5+deb9u1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "trivy",
        "title": "zlib: A flaw found in zlib when compressing (not decompressing) certain inputs",
        "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2274",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2274",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The OpenSSL 3.0.4 release introduced a serious bug in the RSA implementation for X86_64 CPUs supporting the AVX512IFMA instructions. This issue makes the RSA implementation with 2048 bit private keys incorrect on such machines and memory corruption will happen during the computation. As a consequence of the memory corruption an attacker may be able to trigger a remote code execution on the machine performing the computation. SSL/TLS servers or other servers using 2048 bit RSA private keys running on machines supporting AVX512IFMA instructions of the X86_64 architecture are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000001",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In glibc 2.26 and earlier there is confusion in the usage of getcwd() by realpath() which can be used to write before the destination buffer leading to a buffer underflow and potential code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000001",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In glibc 2.26 and earlier there is confusion in the usage of getcwd() by realpath() which can be used to write before the destination buffer leading to a buffer underflow and potential code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000001",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In glibc 2.26 and earlier there is confusion in the usage of getcwd() by realpath() which can be used to write before the destination buffer leading to a buffer underflow and potential code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9169",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9169",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9169",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, proceed_next_node in posix/regexec.c has a heap-based buffer over-read via an attempted case-insensitive regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1551",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1551",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is an overflow bug in the x64_64 Montgomery squaring procedure used in exponentiation with 512-bit moduli. No EC algorithms are affected. Analysis suggests that attacks against 2-prime RSA1024, 3-prime RSA1536, and DSA1024 as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH512 are considered just feasible. However, for an attack the target would have to re-use the DH512 private key, which is not recommended anyway. Also applications directly using the low level API BN_mod_exp may be affected if they use BN_FLG_CONSTTIME. Fixed in OpenSSL 1.1.1e (Affected 1.1.1-1.1.1d). Fixed in OpenSSL 1.0.2u (Affected 1.0.2-1.0.2t).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2011-3389",
        "package_name": "libgnutls30",
        "installed_version": "3.5.8-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-18276",
        "package_name": "bash",
        "installed_version": "4.4-5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in disable_priv_mode in shell.c in GNU Bash through 5.0 patch 11. By default, if Bash is run with its effective UID not equal to its real UID, it will drop privileges by setting its effective UID to its real UID. However, it does so incorrectly. On Linux and other systems that support \"saved UID\" functionality, the saved UID is not dropped. An attacker with command execution in the shell can use \"enable -f\" for runtime loading of a new builtin, which can be a shared object that calls setuid() and therefore regains privileges. However, binaries running with an effective UID of 0 are unaffected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32206",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32206",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-5969",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u6",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** libxml2 2.9.4, when used in recover mode, allows remote attackers to cause a denial of service (NULL pointer dereference) via a crafted XML document.  NOTE: The maintainer states \"I would disagree of a CVE with the Recover parsing option which should only be used for manual recovery at least for XML parser.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-34903",
        "package_name": "dirmngr",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-34903",
        "package_name": "gnupg",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-34903",
        "package_name": "gnupg-agent",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-34903",
        "package_name": "gpgv",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG through 2.3.6, in unusual situations where an attacker possesses any secret-key information from a victim's keyring and other constraints (e.g., use of GPGME) are met, allows signature forgery via injection into the status line.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-35942",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-35942",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-35942",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The wordexp function in the GNU C Library (aka glibc) through 2.33 may crash or read arbitrary memory in parse_param (in posix/wordexp.c) when called with an untrusted, crafted pattern, potentially resulting in a denial of service or disclosure of information. This occurs because atoi was used but strtoul should have been used to ensure correct calculations.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12825",
        "package_name": "libcroco3",
        "installed_version": "0.6.11-3",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcroco through 0.6.13 has excessive recursion in cr_parser_parse_any_core in cr-parser.c, leading to stack consumption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-5155",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) before 2.28, parse_reg_exp in posix/regcomp.c misparses alternatives, which allows attackers to cause a denial of service (assertion failure and application exit) or trigger an incorrect result by attempting a regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-5155",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) before 2.28, parse_reg_exp in posix/regcomp.c misparses alternatives, which allows attackers to cause a denial of service (assertion failure and application exit) or trigger an incorrect result by attempting a regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-5155",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) before 2.28, parse_reg_exp in posix/regcomp.c misparses alternatives, which allows attackers to cause a denial of service (assertion failure and application exit) or trigger an incorrect result by attempting a regular-expression match.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-6096",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-6096",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-6096",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable signed comparison vulnerability exists in the ARMv7 memcpy() implementation of GNU glibc 2.30.9000. Calling memcpy() (on ARMv7 targets that utilize the GNU glibc implementation) with a negative value for the 'num' parameter results in a signed comparison vulnerability. If an attacker underflows the 'num' parameter to memcpy(), this vulnerability could lead to undefined behavior such as writing to out-of-bounds memory and potentially remote code execution. Furthermore, this memcpy() implementation allows for program execution to continue in scenarios where a segmentation fault or crash should have occurred. The dangers occur in that subsequent execution and iterations of this code will be executed with this corrupted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20217",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Reachable Assertion issue was discovered in the KDC in MIT Kerberos 5 (aka krb5) before 1.17. If an attacker can obtain a krbtgt ticket using an older encryption type (single-DES, triple-DES, or RC4), the attacker can crash the KDC by making an S4U2Self request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20217",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Reachable Assertion issue was discovered in the KDC in MIT Kerberos 5 (aka krb5) before 1.17. If an attacker can obtain a krbtgt ticket using an older encryption type (single-DES, triple-DES, or RC4), the attacker can crash the KDC by making an S4U2Self request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20217",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Reachable Assertion issue was discovered in the KDC in MIT Kerberos 5 (aka krb5) before 1.17. If an attacker can obtain a krbtgt ticket using an older encryption type (single-DES, triple-DES, or RC4), the attacker can crash the KDC by making an S4U2Self request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20217",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Reachable Assertion issue was discovered in the KDC in MIT Kerberos 5 (aka krb5) before 1.17. If an attacker can obtain a krbtgt ticket using an older encryption type (single-DES, triple-DES, or RC4), the attacker can crash the KDC by making an S4U2Self request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3999",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3999",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3999",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-19144",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u7",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Buffer Overflow in LibTiff v4.0.10 allows attackers to cause a denial of service via the 'in _TIFFmemcpy' funtion in the component 'tif_unix.c'.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6485",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow in the implementation of the posix_memalign in memalign functions in the GNU C Library (aka glibc or libc6) 2.26 and earlier could cause these functions to return a pointer to a heap area that is too small, potentially leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6485",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow in the implementation of the posix_memalign in memalign functions in the GNU C Library (aka glibc or libc6) 2.26 and earlier could cause these functions to return a pointer to a heap area that is too small, potentially leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6485",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow in the implementation of the posix_memalign in memalign functions in the GNU C Library (aka glibc or libc6) 2.26 and earlier could cause these functions to return a pointer to a heap area that is too small, potentially leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17543",
        "package_name": "liblz4-1",
        "installed_version": "0.0~r131-2+b1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LZ4 before 1.9.2 has a heap-based buffer overflow in LZ4_write32 (related to LZ4_compress_destSize), affecting applications that call LZ4_compress_fast with a large input. (This issue can also lead to data corruption.) NOTE: the vendor states \"only a few specific / uncommon usages of the API are at risk.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-8871",
        "package_name": "libcroco3",
        "installed_version": "0.6.11-3",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The cr_parser_parse_selector_core function in cr-parser.c in libcroco 0.6.12 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted CSS file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27776",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27776",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A insufficiently protected credentials vulnerability in fixed in curl 7.83.0 might leak authentication or cookie header data on HTTP redirects to the same host but another port number.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20446",
        "package_name": "librsvg2-2",
        "installed_version": "2.40.16-1+b1",
        "fixed_version": "2.40.21-0+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In xml.rs in GNOME librsvg before 2.46.2, a crafted SVG file with nested patterns can cause denial of service when passed to the library for processing. The attacker constructs pattern elements so that the number of final rendered objects grows exponentially.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20446",
        "package_name": "librsvg2-common",
        "installed_version": "2.40.16-1+b1",
        "fixed_version": "2.40.21-0+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In xml.rs in GNOME librsvg before 2.46.2, a crafted SVG file with nested patterns can cause denial of service when passed to the library for processing. The attacker constructs pattern elements so that the number of final rendered objects grows exponentially.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1152",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "1:1.5.1-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libjpeg-turbo 1.5.90 is vulnerable to a denial of service vulnerability caused by a divide by zero when processing a crafted BMP image.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-11656",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In SQLite through 3.31.1, the ALTER TABLE implementation has a use-after-free, as demonstrated by an ORDER BY clause that belongs to a compound SELECT statement.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-16168",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In SQLite through 3.29.0, whereLoopAddBtreeIndex in sqlite3.c can crash a browser or other application because of missing validation of a sqlite_stat1 sz field, aka a \"severe division by zero in the query planner.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6551",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The malloc implementation in the GNU C Library (aka glibc or libc6), from version 2.24 to 2.26 on powerpc, and only in version 2.26 on i386, did not properly handle malloc calls with arguments close to SIZE_MAX and could return a pointer to a heap region that is smaller than requested, eventually leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6551",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The malloc implementation in the GNU C Library (aka glibc or libc6), from version 2.24 to 2.26 on powerpc, and only in version 2.26 on i386, did not properly handle malloc calls with arguments close to SIZE_MAX and could return a pointer to a heap region that is smaller than requested, eventually leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6551",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The malloc implementation in the GNU C Library (aka glibc or libc6), from version 2.24 to 2.26 on powerpc, and only in version 2.26 on i386, did not properly handle malloc calls with arguments close to SIZE_MAX and could return a pointer to a heap region that is smaller than requested, eventually leading to heap corruption.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23218",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23219",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23218",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23219",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23218",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function svcunix_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its path argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23219",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The deprecated compatibility function clnt_create in the sunrpc module of the GNU C Library (aka glibc) through 2.34 copies its hostname argument on the stack without validating its length, which may result in a buffer overflow, potentially resulting in a denial of service or (if an application is not built with a stack protector enabled) arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-18258",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The xz_head function in xzlib.c in libxml2 before 2.9.6 allows remote attackers to cause a denial of service (memory consumption) via a crafted LZMA file, because the decoder functionality does not restrict memory usage to what is required for a legitimate file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22576",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22576",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An improper authentication vulnerability exists in curl 7.33.0 to and including 7.82.0 which might allow reuse OAUTH2-authenticated connections without properly making sure that the connection was authenticated with the same credentials as set for this transfer. This affects SASL-enabled protocols: SMPTP(S), IMAP(S), POP3(S) and LDAP(S) (openldap only).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27782",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27782",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl would reuse a previously created connection even when a TLS or SSHrelated option had been changed that should have prohibited reuse.libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse if one of them matches the setup. However, several TLS andSSH settings were left out from the configuration match checks, making themmatch too easily.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-25013",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-25013",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-25013",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv feature in the GNU C Library (aka glibc or libc6) through 2.32, when processing invalid multi-byte input sequences in the EUC-KR encoding, may have a buffer over-read.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5730",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to circumvent a DN containership check by supplying both a \"linkdn\" and \"containerdn\" database argument, or by supplying a DN string which is a left extension of a container DN string but is not hierarchically within the container DN.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5730",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to circumvent a DN containership check by supplying both a \"linkdn\" and \"containerdn\" database argument, or by supplying a DN string which is a left extension of a container DN string but is not hierarchically within the container DN.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5730",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to circumvent a DN containership check by supplying both a \"linkdn\" and \"containerdn\" database argument, or by supplying a DN string which is a left extension of a container DN string but is not hierarchically within the container DN.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5730",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to circumvent a DN containership check by supplying both a \"linkdn\" and \"containerdn\" database argument, or by supplying a DN string which is a left extension of a container DN string but is not hierarchically within the container DN.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u4",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The OpenSSL public API function X509_issuer_and_serial_hash() attempts to create a unique hash value based on the issuer and serial number data contained within an X509 certificate. However it fails to correctly handle any errors that may occur while parsing the issuer field (which might occur if the issuer field is maliciously constructed). This may subsequently result in a NULL pointer deref and a crash leading to a potential denial of service attack. The function X509_issuer_and_serial_hash() is never directly called by OpenSSL itself so applications are only vulnerable if they use this function directly and they use it on certificates that may have been obtained from untrusted sources. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11462",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Double free vulnerability in MIT Kerberos 5 (aka krb5) allows attackers to have unspecified impact via vectors involving automatic deletion of security contexts on error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11462",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Double free vulnerability in MIT Kerberos 5 (aka krb5) allows attackers to have unspecified impact via vectors involving automatic deletion of security contexts on error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11462",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Double free vulnerability in MIT Kerberos 5 (aka krb5) allows attackers to have unspecified impact via vectors involving automatic deletion of security contexts on error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11462",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Double free vulnerability in MIT Kerberos 5 (aka krb5) allows attackers to have unspecified impact via vectors involving automatic deletion of security contexts on error.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-3810",
        "package_name": "apt",
        "installed_version": "1.4.9",
        "fixed_version": "1.4.10",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Missing input validation in the ar/tar implementations of APT before version 2.1.2 could result in denial of service when processing specially crafted deb files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-3810",
        "package_name": "libapt-pkg5.0",
        "installed_version": "1.4.9",
        "fixed_version": "1.4.10",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Missing input validation in the ar/tar implementations of APT before version 2.1.2 could result in denial of service when processing specially crafted deb files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-14567",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libxml2 2.9.8, if --with-lzma is used, allows remote attackers to cause a denial of service (infinite loop) via a crafted XML file that triggers LZMA_MEMLIMIT_ERROR, as demonstrated by xmllint, a different vulnerability than CVE-2015-8035 and CVE-2018-9251.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5710",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. The pre-defined function \"strlen\" is getting a \"NULL\" string as a parameter value in plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in the Key Distribution Center (KDC), which allows remote authenticated users to cause a denial of service (NULL pointer dereference) via a modified kadmin client.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5710",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. The pre-defined function \"strlen\" is getting a \"NULL\" string as a parameter value in plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in the Key Distribution Center (KDC), which allows remote authenticated users to cause a denial of service (NULL pointer dereference) via a modified kadmin client.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5710",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. The pre-defined function \"strlen\" is getting a \"NULL\" string as a parameter value in plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in the Key Distribution Center (KDC), which allows remote authenticated users to cause a denial of service (NULL pointer dereference) via a modified kadmin client.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5710",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. The pre-defined function \"strlen\" is getting a \"NULL\" string as a parameter value in plugins/kdb/ldap/libkdb_ldap/ldap_principal2.c in the Key Distribution Center (KDC), which allows remote authenticated users to cause a denial of service (NULL pointer dereference) via a modified kadmin client.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28153",
        "package_name": "libglib2.0-0",
        "installed_version": "2.50.3-2+deb9u2",
        "fixed_version": "2.50.3-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in GNOME GLib before 2.66.8. When g_file_replace() is used with G_FILE_CREATE_REPLACE_DESTINATION to replace a path that is a dangling symlink, it incorrectly also creates the target of the symlink as an empty file, which could conceivably have security relevance if the symlink is attacker-controlled. (If the path is a symlink to a file that already exists, then the contents of that file correctly remain unchanged.)",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1968",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u2",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The Raccoon attack exploits a flaw in the TLS specification which can lead to an attacker being able to compute the pre-master secret in connections which have used a Diffie-Hellman (DH) based ciphersuite. In such a case this would result in the attacker being able to eavesdrop on all encrypted communications sent over that TLS connection. The attack can only be exploited if an implementation re-uses a DH secret across multiple TLS connections. Note that this issue only impacts DH ciphersuites and not ECDH ciphersuites. This issue affects OpenSSL 1.0.2 which is out of support and no longer receiving public updates. OpenSSL 1.1.1 is not vulnerable to this issue. Fixed in OpenSSL 1.0.2w (Affected 1.0.2-1.0.2v).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-24977",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GNOME project libxml2 v2.9.10 has a global buffer over-read vulnerability in xmlEncodeEntitiesInternal at libxml2/entities.c. The issue has been fixed in commit 50f06b3e.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-8834",
        "package_name": "libcroco3",
        "installed_version": "0.6.11-3",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The cr_tknzr_parse_comment function in cr-tknzr.c in libcroco 0.6.12 allows remote attackers to cause a denial of service (memory allocation error) via a crafted CSS file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37750",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37750",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37750",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37750",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The Key Distribution Center (KDC) in MIT Kerberos 5 (aka krb5) before 1.18.5 and 1.19.x before 1.19.3 has a NULL pointer dereference in kdc/do_tgs_req.c via a FAST inner body that lacks a server field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22924",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u15",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22924",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u15",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl keeps previously used connections in a connection pool for subsequenttransfers to reuse, if one of them matches the setup.Due to errors in the logic, the config matching function did not take 'issuercert' into account and it compared the involved paths *case insensitively*,which could lead to libcurl reusing wrong connections.File paths are, or can be, case sensitive on many systems but not all, and caneven vary depending on used file systems.The comparison also didn't include the 'issuer cert' which a transfer can setto qualify how to verify the server certificate.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5729",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to cause a denial of service (NULL pointer dereference) or bypass a DN container check by supplying tagged data that is internal to the database module.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5729",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to cause a denial of service (NULL pointer dereference) or bypass a DN container check by supplying tagged data that is internal to the database module.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5729",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to cause a denial of service (NULL pointer dereference) or bypass a DN container check by supplying tagged data that is internal to the database module.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5729",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "1.15-1+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "MIT krb5 1.6 or later allows an authenticated kadmin with permission to add principals to an LDAP Kerberos database to cause a denial of service (NULL pointer dereference) or bypass a DN container check by supplying tagged data that is internal to the database module.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-15088",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "plugins/preauth/pkinit/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-15088",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "plugins/preauth/pkinit/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-15088",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "plugins/preauth/pkinit/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-15088",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "plugins/preauth/pkinit/pkinit_crypto_openssl.c in MIT Kerberos 5 (aka krb5) through 1.15.2 mishandles Distinguished Name (DN) fields, which allows remote attackers to execute arbitrary code or cause a denial of service (buffer overflow and application crash) in situations involving untrusted X.509 data, related to the get_matching_data and X509_NAME_oneline_ex functions. NOTE: this has security relevance only in use cases outside of the MIT Kerberos distribution, e.g., the use of get_matching_data in KDC certauth plugin code that is specific to Red Hat.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-14498",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "1:1.5.1-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "get_8bit_row in rdbmp.c in libjpeg-turbo through 1.5.90 and MozJPEG through 3.3.1 allows attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted 8-bit BMP in which one or more of the color indices is out of range for the number of palette entries.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1751",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1751",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1751",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An out-of-bounds write vulnerability was found in glibc before 2.31 when handling signal trampolines on PowerPC. Specifically, the backtrace function did not properly check the array bounds when storing the frame address, resulting in a denial of service or potential code execution. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "1.0.2u-1~deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "1.1.0l-1~deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The X.509 GeneralName type is a generic type for representing different types of names. One of those name types is known as EDIPartyName. OpenSSL provides a function GENERAL_NAME_cmp which compares different instances of a GENERAL_NAME to see if they are equal or not. This function behaves incorrectly when both GENERAL_NAMEs contain an EDIPARTYNAME. A NULL pointer dereference and a crash may occur leading to a possible denial of service attack. OpenSSL itself uses the GENERAL_NAME_cmp function for two purposes: 1) Comparing CRL distribution point names between an available CRL and a CRL distribution point embedded in an X509 certificate 2) When verifying that a timestamp response token signer matches the timestamp authority name (exposed via the API functions TS_RESP_verify_response and TS_RESP_verify_token) If an attacker can control both items being compared then that attacker could trigger a crash. For example if the attacker can trick a client or server into checking a malicious certificate against a malicious CRL then this may occur. Note that some applications automatically download CRLs based on a URL embedded in a certificate. This checking happens prior to the signatures on the certificate and CRL being verified. OpenSSL's s_server, s_client and verify tools have support for the \"-crl_download\" option which implements automatic CRL downloading and this attack has been demonstrated to work against those tools. Note that an unrelated bug means that affected versions of OpenSSL cannot parse or construct correct encodings of EDIPARTYNAME. However it is possible to construct a malformed EDIPARTYNAME that OpenSSL's parser will accept and hence trigger this attack. All OpenSSL 1.1.1 and 1.0.2 versions are affected by this issue. Other OpenSSL releases are out of support and have not been checked. Fixed in OpenSSL 1.1.1i (Affected 1.1.1-1.1.1h). Fixed in OpenSSL 1.0.2x (Affected 1.0.2-1.0.2w).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4209",
        "package_name": "libgnutls30",
        "installed_version": "3.5.8-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3326",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3326",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3326",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid input sequences in the ISO-2022-JP-3 encoding, fails an assertion in the code path and aborts the program, potentially resulting in a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32208",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-32208",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-2870",
        "package_name": "libgdk-pixbuf2.0-0",
        "installed_version": "2.36.5-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable integer overflow vulnerability exists in the tiff_image_parse functionality of Gdk-Pixbuf 2.36.6 when compiled with Clang. A specially crafted tiff file can cause a heap-overflow resulting in remote code execution. An attacker can send a file or a URL to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-2870",
        "package_name": "libgdk-pixbuf2.0-common",
        "installed_version": "2.36.5-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable integer overflow vulnerability exists in the tiff_image_parse functionality of Gdk-Pixbuf 2.36.6 when compiled with Clang. A specially crafted tiff file can cause a heap-overflow resulting in remote code execution. An attacker can send a file or a URL to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5094",
        "package_name": "e2fslibs",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable code execution vulnerability exists in the quota file functionality of E2fsprogs 1.45.3. A specially crafted ext4 partition can cause an out-of-bounds write on the heap, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5094",
        "package_name": "e2fsprogs",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable code execution vulnerability exists in the quota file functionality of E2fsprogs 1.45.3. A specially crafted ext4 partition can cause an out-of-bounds write on the heap, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5094",
        "package_name": "libcomerr2",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable code execution vulnerability exists in the quota file functionality of E2fsprogs 1.45.3. A specially crafted ext4 partition can cause an out-of-bounds write on the heap, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5094",
        "package_name": "libss2",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable code execution vulnerability exists in the quota file functionality of E2fsprogs 1.45.3. A specially crafted ext4 partition can cause an out-of-bounds write on the heap, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10228",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10228",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10228",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv program in the GNU C Library (aka glibc or libc6) 2.31 and earlier, when invoked with multiple suffixes in the destination encoding (TRANSLATE or IGNORE) along with the -c option, enters an infinite loop when processing invalid multi-byte input sequences, leading to a denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-18064",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "cairo through 1.15.14 has an out-of-bounds stack-memory write during processing of a crafted document by WebKitGTK+ because of the interaction between cairo-rectangular-scan-converter.c (the generate and render_rows functions) and cairo-image-compositor.c (the _cairo_image_spans_and_zero function).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27781",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27781",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libcurl provides the `CURLOPT_CERTINFO` option to allow applications torequest details to be returned about a server's certificate chain.Due to an erroneous function, a malicious server could make libcurl built withNSS get stuck in a never-ending busy-loop when trying to retrieve thatinformation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27774",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-27774",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An insufficiently protected credentials vulnerability exists in curl 4.9 to and include curl 7.82.0 are affected that could allow an attacker to extract credentials when follows HTTP(S) redirects is used with authentication could leak credentials to other services that exist on different protocols or port numbers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-17740",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-17740",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "contrib/slapd-modules/nops/nops.c in OpenLDAP through 2.4.45, when both the nops module and the memberof overlay are enabled, attempts to free a buffer that was allocated on the stack, which allows remote attackers to cause a denial of service (slapd crash) via a member MODDN operation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1752",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1752",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1752",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A use-after-free vulnerability introduced in glibc upstream version 2.14 was found in the way the tilde expansion was carried out. Directory paths containing an initial tilde followed by a valid username were affected by this issue. A local attacker could exploit this flaw by creating a specially crafted path that, when processed by the glob function, would potentially lead to arbitrary code execution. This was fixed in version 2.32.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33574",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33574",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33574",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The mq_notify function in the GNU C Library (aka glibc) versions 2.32 and 2.33 has a use-after-free. It may use the notification thread attributes object (passed through its struct sigevent parameter) after it has been freed by the caller, leading to a denial of service (application crash) or possibly unspecified other impact.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-45346",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Memory Leak vulnerabilty exists in SQLite Project SQLite3 3.35.1 and 3.37.0 via maliciously crafted SQL Queries (made via editing the Database File), it is possible to query a record, and leak subsequent bytes of memory that extend beyond the record, which could let a malicous user obtain sensitive information..",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12132",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The DNS stub resolver in the GNU C Library (aka glibc or libc6) before version 2.26, when EDNS support is enabled, will solicit large UDP responses from name servers, potentially simplifying off-path DNS spoofing attacks due to IP fragmentation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12132",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The DNS stub resolver in the GNU C Library (aka glibc or libc6) before version 2.26, when EDNS support is enabled, will solicit large UDP responses from name servers, potentially simplifying off-path DNS spoofing attacks due to IP fragmentation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-12132",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The DNS stub resolver in the GNU C Library (aka glibc or libc6) before version 2.26, when EDNS support is enabled, will solicit large UDP responses from name servers, potentially simplifying off-path DNS spoofing attacks due to IP fragmentation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-9814",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "cairo-truetype-subset.c in cairo 1.15.6 and earlier allows remote attackers to cause a denial of service (out-of-bounds read) because of mishandling of an unexpected malloc(0) call.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2014-8130",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The _TIFFmalloc function in tif_unix.c in LibTIFF 4.0.3 does not reject a zero size, which allows remote attackers to cause a denial of service (divide-by-zero error and application crash) via a crafted TIFF image that is mishandled by the TIFFWriteScanline function in tif_write.c, as demonstrated by tiffdither.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-7475",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Cairo version 1.15.4 is vulnerable to a NULL pointer dereference related to the FT_Load_Glyph and FT_Render_Glyph resulting in an application crash.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22947",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u16",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22947",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u16",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl >= 7.20.0 and <= 7.78.0 connects to an IMAP or POP3 server to retrieve data using STARTTLS to upgrade to TLS security, the server can respond and send back multiple responses at once that curl caches. curl would then upgrade to TLS but not flush the in-queue of cached responses but instead continue using and trustingthe responses it got *before* the TLS handshake as if they were authenticated.Using this flaw, it allows a Man-In-The-Middle attacker to first inject the fake responses, then pass-through the TLS traffic from the legitimate server and trick curl into sending data back to the user thinking the attacker's injected data comes from the TLS-protected server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20796",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20796",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20796",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(\\227|)(\\\\1\\\\1|t1|\\\\\\2537)+' in grep.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-14550",
        "package_name": "libpng16-16",
        "installed_version": "1.6.28-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue has been found in third-party PNM decoding associated with libpng 1.6.35. It is a stack-based buffer overflow in the function get_token in pnm2png.c in pnm2png.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2015-3276",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2015-3276",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The nss_parse_ciphers function in libraries/libldap/tls_m.c in OpenLDAP does not properly parse OpenSSL-style multi-keyword mode cipher strings, which might cause a weaker than intended cipher to be used and allow remote attackers to have unspecified impact via unknown vectors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-16232",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** LibTIFF 4.0.8 has multiple memory leak vulnerabilities, which allow attackers to cause a denial of service (memory consumption), as demonstrated by tif_open.c, tif_lzw.c, and tif_aux.c. NOTE: Third parties were unable to reproduce the issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-27350",
        "package_name": "apt",
        "installed_version": "1.4.9",
        "fixed_version": "1.4.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "APT had several integer overflows and underflows while parsing .deb packages, aka GHSL-2020-168 GHSL-2020-169, in files apt-pkg/contrib/extracttar.cc, apt-pkg/deb/debfile.cc, and apt-pkg/contrib/arfile.cc. This issue affects: apt 1.2.32ubuntu0 versions prior to 1.2.32ubuntu0.2; 1.6.12ubuntu0 versions prior to 1.6.12ubuntu0.2; 2.0.2ubuntu0 versions prior to 2.0.2ubuntu0.2; 2.1.10ubuntu0 versions prior to 2.1.10ubuntu0.1;",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-27350",
        "package_name": "libapt-pkg5.0",
        "installed_version": "1.4.9",
        "fixed_version": "1.4.11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "APT had several integer overflows and underflows while parsing .deb packages, aka GHSL-2020-168 GHSL-2020-169, in files apt-pkg/contrib/extracttar.cc, apt-pkg/deb/debfile.cc, and apt-pkg/contrib/arfile.cc. This issue affects: apt 1.2.32ubuntu0 versions prior to 1.2.32ubuntu0.2; 1.6.12ubuntu0 versions prior to 1.6.12ubuntu0.2; 2.0.2ubuntu0 versions prior to 2.0.2ubuntu0.2; 2.1.10ubuntu0 versions prior to 2.1.10ubuntu0.1;",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-6519",
        "package_name": "libavahi-client3",
        "installed_version": "0.6.32-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "avahi-daemon in Avahi through 0.6.32 and 0.7 inadvertently responds to IPv6 unicast queries with source addresses that are not on-link, which allows remote attackers to cause a denial of service (traffic amplification) and may cause information leakage by obtaining potentially sensitive  information from the responding device via port-5353 UDP packets.  NOTE: this may overlap CVE-2015-2809.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-6519",
        "package_name": "libavahi-common-data",
        "installed_version": "0.6.32-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "avahi-daemon in Avahi through 0.6.32 and 0.7 inadvertently responds to IPv6 unicast queries with source addresses that are not on-link, which allows remote attackers to cause a denial of service (traffic amplification) and may cause information leakage by obtaining potentially sensitive  information from the responding device via port-5353 UDP packets.  NOTE: this may overlap CVE-2015-2809.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-6519",
        "package_name": "libavahi-common3",
        "installed_version": "0.6.32-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "avahi-daemon in Avahi through 0.6.32 and 0.7 inadvertently responds to IPv6 unicast queries with source addresses that are not on-link, which allows remote attackers to cause a denial of service (traffic amplification) and may cause information leakage by obtaining potentially sensitive  information from the responding device via port-5353 UDP packets.  NOTE: this may overlap CVE-2015-2809.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-19211",
        "package_name": "libncurses5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-19211",
        "package_name": "libncursesw5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-19211",
        "package_name": "libtinfo5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-19211",
        "package_name": "ncurses-base",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-19211",
        "package_name": "ncurses-bin",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In ncurses 6.1, there is a NULL pointer dereference at function _nc_parse_entry in parse_entry.c that will lead to a denial of service attack. The product proceeds to the dereference code path even after a \"dubious character `*' in name or alias field\" detection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-25313",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "2.2.0-2+deb9u5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In Expat (aka libexpat) before 2.4.5, an attacker can trigger stack exhaustion in build_model via a large nesting depth in the DTD element.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-16869",
        "package_name": "libhogweed4",
        "installed_version": "3.3-1+b2",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Bleichenbacher type side-channel based padding oracle attack was found in the way nettle handles endian conversion of RSA decrypted PKCS#1 v1.5 data. An attacker who is able to run a process on the same physical core as the victim process, could use this flaw extract plaintext or in some cases downgrade any TLS connections to a vulnerable server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-16869",
        "package_name": "libnettle6",
        "installed_version": "3.3-1+b2",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Bleichenbacher type side-channel based padding oracle attack was found in the way nettle handles endian conversion of RSA decrypted PKCS#1 v1.5 data. An attacker who is able to run a process on the same physical core as the victim process, could use this flaw extract plaintext or in some cases downgrade any TLS connections to a vulnerable server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2005-2541",
        "package_name": "tar",
        "installed_version": "1.29b-1.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Tar 1.15.1 does not properly warn the user when extracting setuid or setgid files, which may allow local users or remote attackers to gain privileges.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14155",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libpcre in PCRE before 8.44 allows an integer overflow via a large number after a (?C substring.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2011-3374",
        "package_name": "apt",
        "installed_version": "1.4.9",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2011-3374",
        "package_name": "libapt-pkg5.0",
        "installed_version": "1.4.9",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "It was found that apt-key in apt, all versions, do not correctly validate gpg keys with the master keyring, leading to a potential man-in-the-middle attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2056",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2057",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2058",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Divide By Zero error in tiffcrop in libtiff 4.4.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f3a5e010.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-21913",
        "package_name": "libicu57",
        "installed_version": "57.1-6+deb9u4",
        "fixed_version": "57.1-6+deb9u5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "International Components for Unicode (ICU-20850) v66.1 was discovered to contain a use after free bug in the pkg_createWithAssemblyCode function in the file tools/pkgdata/pkgdata.cpp.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6128",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The TIFFFdOpen function in tif_unix.c in LibTIFF 4.0.10 has a memory leak, as demonstrated by pal2rgb.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-asn1",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-base",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-corba",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-crypto",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-diameter",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-edoc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-eldap",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-erl-docgen",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-eunit",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-ic",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-inets",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-mnesia",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-nox",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-odbc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-os-mon",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-parsetools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-percept",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-public-key",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-reltool",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-runtime-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-snmp",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-ssh",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-ssl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-syntax-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-wx",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12872",
        "package_name": "erlang-xmerl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "1:19.2.1+dfsg-2+deb9u3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "yaws_config.erl in Yaws through 2.0.2 and/or 2.0.7 loads obsolete TLS ciphers, as demonstrated by ones that allow Sweet32 attacks, if running on an Erlang/OTP virtual machine with a version less than 21.0.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3537",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u4",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A vulnerability found in libxml2 in versions before 2.9.11 shows that it did not propagate errors while parsing XML mixed content, causing a NULL dereference. If an untrusted XML document was parsed in recovery mode and post-validated, the flaw could be used to crash the application. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-7169",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used \"group blacklisting\" (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-7169",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in shadow 4.5. newgidmap (in shadow-utils) is setuid and allows an unprivileged user to be placed in a user namespace where setgroups(2) is permitted. This allows an attacker to remove themselves from a supplementary group, which may allow access to certain filesystem paths if the administrator has used \"group blacklisting\" (e.g., chmod g-rwx) to restrict access to paths. This flaw effectively reverts a security feature in the kernel (in particular, the /proc/self/setgroups knob) to prevent this sort of privilege escalation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-6311",
        "package_name": "libgdk-pixbuf2.0-0",
        "installed_version": "2.36.5-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "gdk-pixbuf-thumbnailer.c in gdk-pixbuf allows context-dependent attackers to cause a denial of service (NULL pointer dereference and application crash) via vectors related to printing an error message.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-6311",
        "package_name": "libgdk-pixbuf2.0-common",
        "installed_version": "2.36.5-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "gdk-pixbuf-thumbnailer.c in gdk-pixbuf allows context-dependent attackers to cause a denial of service (NULL pointer dereference and application crash) via vectors related to printing an error message.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-8842",
        "package_name": "libcups2",
        "installed_version": "2.2.1-8+deb9u5",
        "fixed_version": "2.2.1-8+deb9u6",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A buffer overflow was addressed with improved bounds checking. This issue is fixed in macOS Catalina 10.15.2, Security Update 2019-002 Mojave, and Security Update 2019-007 High Sierra. In certain configurations, a remote attacker may be able to submit arbitrary print jobs.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0561",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Null source pointer passed as an argument to memcpy() function within TIFFFetchStripThing() in tif_dirread.c in libtiff versions from 3.9.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, the fix is available with commit eecb0712.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-16888",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "It was discovered systemd does not correctly check the content of PIDFile files before using it to kill processes. When a service is run from an unprivileged user (e.g. User field set in the service file), a local attacker who is able to write to the PIDFile of the mentioned service may use this flaw to trick systemd into killing other services and/or privileged processes. Versions before v237 are vulnerable.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-16888",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "It was discovered systemd does not correctly check the content of PIDFile files before using it to kill processes. When a service is run from an unprivileged user (e.g. User field set in the service file), a local attacker who is able to write to the PIDFile of the mentioned service may use this flaw to trick systemd into killing other services and/or privileged processes. Versions before v237 are vulnerable.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2014-8166",
        "package_name": "libcups2",
        "installed_version": "2.2.1-8+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The browsing feature in the server in CUPS does not filter ANSI escape sequences from shared printer names, which might allow remote attackers to execute arbitrary code via a crafted printer name.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-46822",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1622",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LibTIFF master branch has an out-of-bounds read in LZWDecode in libtiff/tif_lzw.c:619, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit b4e79bfa.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-40528",
        "package_name": "libgcrypt20",
        "installed_version": "1.7.6-2+deb9u3",
        "fixed_version": "1.7.6-2+deb9u4",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The ElGamal implementation in Libgcrypt before 1.9.4 allows plaintext recovery because, during interaction between two cryptographic libraries, a certain dangerous combination of the prime defined by the receiver's public key, the generator defined by the receiver's public key, and the sender's ephemeral exponents can lead to a cross-configuration attack against OpenPGP.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1623",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LibTIFF master branch has an out-of-bounds read in LZWDecode in libtiff/tif_lzw.c:624, allowing attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit b4e79bfa.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-9234",
        "package_name": "dirmngr",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG 2.2.4 and 2.2.5 does not enforce a configuration in which key certification requires an offline master Certify key, which results in apparently valid certifications that occurred only with access to a signing subkey.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-9234",
        "package_name": "gnupg",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG 2.2.4 and 2.2.5 does not enforce a configuration in which key certification requires an offline master Certify key, which results in apparently valid certifications that occurred only with access to a signing subkey.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-9234",
        "package_name": "gnupg-agent",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG 2.2.4 and 2.2.5 does not enforce a configuration in which key certification requires an offline master Certify key, which results in apparently valid certifications that occurred only with access to a signing subkey.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-9234",
        "package_name": "gpgv",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GnuPG 2.2.4 and 2.2.5 does not enforce a configuration in which key certification requires an offline master Certify key, which results in apparently valid certifications that occurred only with access to a signing subkey.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-14048",
        "package_name": "libpng16-16",
        "installed_version": "1.6.28-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue has been found in libpng 1.6.34. It is a SEGV in the function png_free_data in png.c, related to the recommended error handling for png_read_image.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0907",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Unchecked Return Value to NULL Pointer Dereference in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f2b656e2.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10001",
        "package_name": "libcups2",
        "installed_version": "2.2.1-8+deb9u5",
        "fixed_version": "2.2.1-8+deb9u7",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An input validation issue was addressed with improved memory handling. This issue is fixed in macOS Big Sur 11.1, Security Update 2020-001 Catalina, Security Update 2020-007 Mojave. A malicious application may be able to read restricted memory.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-22844",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LibTIFF 4.3.0 has an out-of-bounds read in _TIFFmemcpy in tif_unix.c in certain situations involving a custom tag and 0x0200 as the second word of the DE field.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-29362",
        "package_name": "libp11-kit0",
        "installed_version": "0.23.3-2",
        "fixed_version": "0.23.3-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in p11-kit 0.21.1 through 0.23.21. A heap-based buffer over-read has been discovered in the RPC protocol used by thep11-kit server/remote commands and the client library. When the remote entity supplies a byte array through a serialized PKCS#11 function call, the receiving entity may allow the reading of up to 4 bytes of memory past the heap allocation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0924",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Out-of-bounds Read error in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 408976c4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-14855",
        "package_name": "dirmngr",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-14855",
        "package_name": "gnupg",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-14855",
        "package_name": "gnupg-agent",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-14855",
        "package_name": "gpgv",
        "installed_version": "2.1.18-8~deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the way certificate signatures could be forged using collisions found in the SHA-1 algorithm. An attacker could use this weakness to create forged certificate signatures. This issue affects GnuPG versions before 2.2.18.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6461",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in cairo 1.16.0. There is an assertion problem in the function _cairo_arc_in_direction in the file cairo-arc.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6462",
        "package_name": "libcairo2",
        "installed_version": "1.14.8-1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in cairo 1.16.0. There is an infinite loop in the function _arc_error_normalized in the file cairo-arc.c, related to _arc_max_angle_for_tolerance_normalized.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33910",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "232-25+deb9u13",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-33910",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "232-25+deb9u13",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "basic/unit-name.c in systemd prior to 246.15, 247.8, 248.5, and 249.1 has a Memory Allocation with an Excessive Size Value (involving strdupa and alloca for a pathname controlled by a local attacker) that results in an operating system crash.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-33068",
        "package_name": "libharfbuzz0b",
        "installed_version": "1.4.2-1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow in the component hb-ot-shape-fallback.cc of Harfbuzz v4.3.0 allows attackers to cause a Denial of Service (DoS) via unspecified vectors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0891",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A heap buffer overflow in ExtractImageSection function in tiffcrop.c in libtiff library Version 4.3.0 allows attacker to trigger unsafe or out of bounds memory access via crafted TIFF image file which could result into application crash, potential information disclosure or any other context-dependent impact",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22898",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u15",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22898",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u15",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "curl 7.7 through 7.76.1 suffers from an information disclosure when the `-t` command line option, known as `CURLOPT_TELNETOPTIONS` in libcurl, is used to send variable=content pairs to TELNET servers. Due to a flaw in the option parser for sending NEW_ENV variables, libcurl could be made to pass on uninitialized data from a stack based buffer to the server, resulting in potentially revealing sensitive internal information to the server using a clear-text network protocol.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-15232",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libjpeg-turbo 1.5.2 has a NULL Pointer Dereference in jdpostct.c and jquant1.c via a crafted JPEG file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010023",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010023",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010023",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Re-mapping current loaded library with malicious ELF file. The impact is: In worst case attacker may evaluate privileges. The component is: libld. The attack vector is: Attacker sends 2 ELF files to victim and asks to run ldd on it. ldd execute code. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0865",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Reachable Assertion in tiffcp in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 5e180045.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3541",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u5",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in libxml2. Exponential entity expansion attack its possible bypassing all existing protection mechanisms and leading to denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0909",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Divide By Zero error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit f8d0f9aa.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22876",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u14",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22876",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u14",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "curl 7.1.1 to and including 7.75.0 is vulnerable to an \"Exposure of Private Personal Information to an Unauthorized Actor\" by leaking credentials in the HTTP Referer: header. libcurl does not strip off user credentials from the URL when automatically populating the Referer: HTTP request header field in outgoing HTTP requests, and therefore risks leaking sensitive data to the server that is the target of the second HTTP request.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-7246",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 268) or possibly have unspecified other impact via a crafted file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0562",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "4.0.8-2+deb9u8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Null source pointer passed as an argument to memcpy() function within TIFFReadDirectory() in tif_dirread.c in libtiff versions from 4.0 to 4.3.0 could lead to Denial of Service via crafted TIFF file. For users that compile libtiff from sources, a fix is available with commit 561599c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0908",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Null source pointer passed as an argument to memcpy() function within TIFFFetchNormalTag () in tif_dirread.c in libtiff versions up to 4.3.0 could lead to Denial of Service via crafted TIFF file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8284",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-8284",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "7.52.1-5+deb9u13",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A malicious server can use the FTP PASV response to trick curl 7.73.0 and earlier into connecting back to a given IP address and port, and this way potentially make curl extract information about services that are otherwise private and not disclosed, for example doing port scanning and service banner extractions.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-29824",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u7",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In libxml2 before 2.9.14, several buffer handling functions in buf.c (xmlBuf*) and tree.c (xmlBuffer*) don't check for integer overflows. This can result in out-of-bounds memory writes. Exploitation requires a victim to open a crafted, multi-gigabyte XML file. Other software using libxml2's buffer functions, for example libxslt through 1.1.35, is affected as well.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-16868",
        "package_name": "libgnutls30",
        "installed_version": "3.5.8-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A Bleichenbacher type side-channel based padding oracle attack was found in the way gnutls handles verification of RSA decrypted PKCS#1 v1.5 data. An attacker who is able to run process on the same physical core as the victim process, could use this to extract plaintext or in some cases downgrade any TLS connections to a vulnerable server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14344",
        "package_name": "libx11-6",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow leading to a heap-buffer overflow was found in The X Input Method (XIM) client was implemented in libX11 before version 1.6.10. As per upstream this is security relevant when setuid programs call XIM client functions while running with elevated privileges. No such programs are shipped with Red Hat Enterprise Linux.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14344",
        "package_name": "libx11-data",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow leading to a heap-buffer overflow was found in The X Input Method (XIM) client was implemented in libX11 before version 1.6.10. As per upstream this is security relevant when setuid programs call XIM client functions while running with elevated privileges. No such programs are shipped with Red Hat Enterprise Linux.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-14344",
        "package_name": "libx11-xcb1",
        "installed_version": "2:1.6.4-3+deb9u1",
        "fixed_version": "2:1.6.4-3+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An integer overflow leading to a heap-buffer overflow was found in The X Input Method (XIM) client was implemented in libX11 before version 1.6.10. As per upstream this is security relevant when setuid programs call XIM client functions while running with elevated privileges. No such programs are shipped with Red Hat Enterprise Linux.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6829",
        "package_name": "libgcrypt20",
        "installed_version": "1.7.6-2+deb9u3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "cipher/elgamal.c in Libgcrypt through 1.8.2, when used to encrypt messages directly, improperly encodes plaintexts, which allows attackers to obtain sensitive information by reading ciphertext data (i.e., it does not have semantic security in face of a ciphertext-only attack). The Decisional Diffie-Hellman (DDH) assumption does not hold for Libgcrypt's ElGamal implementation.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-asn1",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-base",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-corba",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-crypto",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-diameter",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-edoc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-eldap",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-erl-docgen",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-eunit",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-ic",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-inets",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-mnesia",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-nox",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-odbc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-os-mon",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-parsetools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-percept",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-public-key",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-reltool",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-runtime-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-snmp",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-ssh",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-ssl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-syntax-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-wx",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-1000107",
        "package_name": "erlang-xmerl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "inets in Erlang possibly 22.1 and earlier follows RFC 3875 section 4.1.18 and therefore does not protect applications from the presence of untrusted client data in the HTTP_PROXY environment variable, which might allow remote attackers to redirect an application's outbound HTTP traffic to an arbitrary proxy server via a crafted Proxy header in an HTTP request, aka an \"httpoxy\" issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17595",
        "package_name": "libncurses5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17595",
        "package_name": "libncursesw5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17595",
        "package_name": "libtinfo5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17595",
        "package_name": "ncurses-base",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17595",
        "package_name": "ncurses-bin",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the fmt_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2007-6755",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain \"skeleton key\" values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2007-6755",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The NIST SP 800-90A default statement of the Dual Elliptic Curve Deterministic Random Bit Generation (Dual_EC_DRBG) algorithm contains point Q constants with a possible relationship to certain \"skeleton key\" values, which might allow context-dependent attackers to defeat cryptographic protection mechanisms by leveraging knowledge of those values.  NOTE: this is a preliminary CVE for Dual_EC_DRBG; future research may provide additional details about point Q and associated attacks, and could potentially lead to a RECAST or REJECT of this CVE.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10029",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10029",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-10029",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The GNU C Library (aka glibc or libc6) before 2.32 could overflow an on-stack buffer during range reduction if an input to an 80-bit long double function contains a non-canonical bit pattern, a seen when passing a 0x5d414141414141410000 value to sinl on x86 targets. This is related to sysdeps/ieee754/ldbl-96/e_rem_pio2l.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1210",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A vulnerability classified as problematic was found in LibTIFF 4.3.0. Affected by this vulnerability is the TIFF File Handler of tiff2ps. Opening a malicious file leads to a denial of service. The attack can be launched remotely but requires user interaction. The exploit has been disclosed to the public and may be used.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13434",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "SQLite through 3.32.0 has an integer overflow in sqlite3_str_vappendf in printf.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2012-0039",
        "package_name": "libglib2.0-0",
        "installed_version": "2.50.3-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GLib 2.31.8 and earlier, when the g_str_hash function is used, computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.  NOTE: this issue may be disputed by the vendor; the existence of the g_str_hash function is not a vulnerability in the library, because callers of g_hash_table_new and g_hash_table_new_full can specify an arbitrary hash function that is appropriate for the application.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-1000082",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd v233 and earlier fails to safely parse usernames starting with a numeric digit (e.g. \"0day\"), running the service in question with root privileges rather than the user intended.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-1000082",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd v233 and earlier fails to safely parse usernames starting with a numeric digit (e.g. \"0day\"), running the service in question with root privileges rather than the user intended.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5709",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5709",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5709",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-5709",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in MIT Kerberos 5 (aka krb5) through 1.16. There is a variable \"dbentry->n_key_data\" in kadmin/dbutil/dump.c that can store 16-bit data but unknowingly the developer has assigned a \"u4\" variable to it, which is for 32-bit data. An attacker can use this vulnerability to affect other artifacts of the database as we know that a Kerberos database dump file contains trusted data.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-10126",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LibTIFF 4.0.9 has a NULL pointer dereference in the jpeg_fdct_16x16 function in jfdctint.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1354",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5068",
        "package_name": "libgl1-mesa-glx",
        "installed_version": "13.0.6-1+b2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable shared memory permissions vulnerability exists in the functionality of X11 Mesa 3D Graphics Library 19.1.2. An attacker can access the shared memory without any specific permissions to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5068",
        "package_name": "libglapi-mesa",
        "installed_version": "13.0.6-1+b2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable shared memory permissions vulnerability exists in the functionality of X11 Mesa 3D Graphics Library 19.1.2. An attacker can access the shared memory without any specific permissions to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1355",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-7245",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Stack-based buffer overflow in the pcre32_copy_substring function in pcre_get.c in libpcre1 in PCRE 8.40 allows remote attackers to cause a denial of service (WRITE of size 4) or possibly have unspecified other impact via a crafted file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6129",
        "package_name": "libpng16-16",
        "installed_version": "1.6.28-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** png_create_info_struct in png.c in libpng 1.6.36 has a memory leak, as demonstrated by pngcp. NOTE: a third party has stated \"I don't think it is libpng's job to free this buffer.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-17973",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** In LibTIFF 4.0.8, there is a heap-based use-after-free in the t2p_writeproc function in tiff2pdf.c. NOTE: there is a third-party report of inability to reproduce this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-9318",
        "package_name": "libxml2",
        "installed_version": "2.9.4+dfsg1-2.2+deb9u2",
        "fixed_version": "2.9.4+dfsg1-2.2+deb9u6",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libxml2 2.9.4 and earlier, as used in XMLSec 1.2.23 and earlier and other products, does not offer a flag directly indicating that the current document may be read but other files may not be opened, which makes it easier for remote attackers to conduct XML External Entity (XXE) attacks via a crafted document.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9923",
        "package_name": "tar",
        "installed_version": "1.29b-1.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "pax_decode_header in sparse.c in GNU Tar before 1.32 had a NULL pointer dereference when parsing certain archives that have malformed extended headers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5188",
        "package_name": "e2fslibs",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A code execution vulnerability exists in the directory rehashing functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4 directory can cause an out-of-bounds write on the stack, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5188",
        "package_name": "e2fsprogs",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A code execution vulnerability exists in the directory rehashing functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4 directory can cause an out-of-bounds write on the stack, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5188",
        "package_name": "libcomerr2",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A code execution vulnerability exists in the directory rehashing functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4 directory can cause an out-of-bounds write on the stack, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-5188",
        "package_name": "libss2",
        "installed_version": "1.43.4-2",
        "fixed_version": "1.43.4-2+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A code execution vulnerability exists in the directory rehashing functionality of E2fsprogs e2fsck 1.45.4. A specially crafted ext4 directory can cause an out-of-bounds write on the stack, resulting in code execution. An attacker can corrupt a partition to trigger this vulnerability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2781",
        "package_name": "coreutils",
        "installed_version": "8.26-3",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-13685",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The dump_callback function in SQLite 3.20.0 allows remote attackers to cause a denial of service (EXC_BAD_ACCESS and application crash) via a crafted file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010024",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010024",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010024",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass ASLR using cache of thread stack and heap. The component is: glibc. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2010-4756",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2010-4756",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2010-4756",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The glob implementation in the GNU C Library (aka glibc or libc6) allows remote authenticated users to cause a denial of service (CPU and memory consumption) via crafted glob expressions that do not match any pathnames, as demonstrated by glob expressions in STAT commands to an FTP daemon, a different vulnerability than CVE-2010-2632.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39537",
        "package_name": "libncurses5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39537",
        "package_name": "libncursesw5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39537",
        "package_name": "libtinfo5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39537",
        "package_name": "ncurses-base",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-39537",
        "package_name": "ncurses-bin",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in ncurses through v6.2-1. _nc_captoinfo in captoinfo.c has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-5563",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "LibTIFF version 4.0.7 is vulnerable to a heap-based buffer over-read in tif_lzw.c resulting in DoS or code execution via a crafted bmp image to tools/bmp2tiff.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-9937",
        "package_name": "libjbig0",
        "installed_version": "2.1-3.1+b2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In LibTIFF 4.0.8, there is a memory malloc failure in tif_jbig.c. A crafted TIFF document can lead to an abort resulting in a remote denial of service attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9192",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9192",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-9192",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** In the GNU C Library (aka glibc or libc6) through 2.29, check_dst_limits_calc_pos_1 in posix/regexec.c has Uncontrolled Recursion, as demonstrated by '(|)(\\\\1\\\\1)*' in grep, a different issue than CVE-2018-20796. NOTE: the software maintainer disputes that this is a vulnerability because the behavior occurs only with a crafted pattern.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-13627",
        "package_name": "libgcrypt20",
        "installed_version": "1.7.6-2+deb9u3",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "It was discovered that there was a ECDSA timing attack in the libgcrypt20 cryptographic library. Version affected: 1.8.4-5, 1.7.6-2+deb9u3, and 1.6.3-2+deb8u4. Versions fixed: 1.8.5-2 and 1.6.3-2+deb8u7.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13632",
        "package_name": "libsqlite3-0",
        "installed_version": "3.16.2-5+deb9u1",
        "fixed_version": "3.16.2-5+deb9u2",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "ext/fts3/fts3_snippet.c in SQLite before 3.32.0 has a NULL pointer dereference via a crafted matchinfo() query.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "bsdutils",
        "installed_version": "1:2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "libblkid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "libfdisk1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "libmount1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "libsmartcols1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "libuuid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "mount",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-37600",
        "package_name": "util-linux",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** An integer overflow in util-linux through 2.37.1 can potentially cause a buffer overflow if an attacker were able to use system resources in a way that leads to a large number in the /proc/sysvipc/sem file. NOTE: this is unexploitable in GNU C Library environments, and possibly in all realistic environments.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6954",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd-tmpfiles in systemd through 237 mishandles symlinks present in non-terminal path components, which allows local users to obtain ownership of arbitrary files via vectors involving creation of a directory and a file under that directory, and later replacing that directory with a symlink. This occurs even if the fs.protected_symlinks sysctl is turned on.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-6954",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd-tmpfiles in systemd through 237 mishandles symlinks present in non-terminal path components, which allows local users to obtain ownership of arbitrary files via vectors involving creation of a directory and a file under that directory, and later replacing that directory with a symlink. This occurs even if the fs.protected_symlinks sysctl is turned on.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-17541",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Libjpeg-turbo all version have a stack-based buffer overflow in the \"transform\" component. A remote attacker can send a malformed jpeg file to the service and cause arbitrary code execution or denial of service of the target service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-31782",
        "package_name": "libfreetype6",
        "installed_version": "2.6.3-3.2+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "ftbench.c in FreeType Demo Programs through 2.12.1 has a heap-based buffer overflow.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20838",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libpcre in PCRE before 8.43 allows a subject buffer over-read in JIT when UTF is disabled, and \\X or \\R has more than one fixed quantifier, a related issue to CVE-2019-20454.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-27618",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-27618",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-27618",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The iconv function in the GNU C Library (aka glibc or libc6) 2.32 and earlier, when processing invalid multi-byte input sequences in IBM1364, IBM1371, IBM1388, IBM1390, and IBM1399 encodings, fails to advance the input state, which could lead to an infinite loop in applications, resulting in a denial of service, a different vulnerability from CVE-2016-10228.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-11164",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In PCRE 8.41, the OP_KETRMAX feature in the match function in pcre_exec.c allows stack exhaustion (uncontrolled recursion) when processing a crafted regular expression.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-18661",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in LibTIFF 4.0.9. There is a NULL pointer dereference in the function LZWDecode in the file tif_lzw.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-7309",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, the memcmp function for the x32 architecture can incorrectly return zero (indicating that the inputs are equal) because the RDX most significant bit is mishandled.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-7309",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, the memcmp function for the x32 architecture can incorrectly return zero (indicating that the inputs are equal) because the RDX most significant bit is mishandled.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-7309",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.29, the memcmp function for the x32 architecture can incorrectly return zero (indicating that the inputs are equal) because the RDX most significant bit is mishandled.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10739",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.28, the getaddrinfo function would successfully parse a string that contained an IPv4 address followed by whitespace and arbitrary characters, which could lead applications to incorrectly assume that it had parsed a valid string, without the possibility of embedded HTTP headers or other potentially dangerous substrings.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10739",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.28, the getaddrinfo function would successfully parse a string that contained an IPv4 address followed by whitespace and arbitrary characters, which could lead applications to incorrectly assume that it had parsed a valid string, without the possibility of embedded HTTP headers or other potentially dangerous substrings.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-10739",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In the GNU C Library (aka glibc or libc6) through 2.28, the getaddrinfo function would successfully parse a string that contained an IPv4 address followed by whitespace and arbitrary characters, which could lead applications to incorrectly assume that it had parsed a valid string, without the possibility of embedded HTTP headers or other potentially dangerous substrings.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4214",
        "package_name": "libpng16-16",
        "installed_version": "1.6.28-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-12049",
        "package_name": "libdbus-1-3",
        "installed_version": "1.10.28-0+deb9u1",
        "fixed_version": "1.10.32-0+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in dbus >= 1.3.0 before 1.12.18. The DBusServer in libdbus, as used in dbus-daemon, leaks file descriptors when a message exceeds the per-message file descriptor limit. A local attacker with access to the D-Bus system bus or another system service's private AF_UNIX socket could use this to make the system service reach its file descriptor limit, denying service to subsequent D-Bus clients.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010025",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010025",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010025",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may guess the heap addresses of pthread_created thread. The component is: glibc. NOTE: the vendor's position is \"ASLR bypass itself is not a vulnerability.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27645",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27645",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-27645",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The nameserver caching daemon (nscd) in the GNU C Library (aka glibc or libc6) 2.29 through 2.33, when processing a request for netgroup lookup, may crash due to a double-free, potentially resulting in degraded service or Denial of Service on the local system. This is related to netgroupcache.c.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3997",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3997",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-20482",
        "package_name": "tar",
        "installed_version": "1.29b-1.1",
        "fixed_version": "1.29b-1.1+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GNU Tar through 1.30, when --sparse is used, mishandles file shrinkage during read access, which allows local users to cause a denial of service (infinite read loop in sparse_dump_region in sparse.c) by modifying a file that is supposed to be archived by a different user's process (e.g., a system backup running as root).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2011-4116",
        "package_name": "perl-base",
        "installed_version": "5.24.1-3+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "_is_safe in the File::Temp module for Perl does not properly handle symlinks.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17594",
        "package_name": "libncurses5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17594",
        "package_name": "libncursesw5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17594",
        "package_name": "libtinfo5",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17594",
        "package_name": "ncurses-base",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-17594",
        "package_name": "ncurses-bin",
        "installed_version": "6.0+20161126-1+deb9u2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "There is a heap-based buffer over-read in the _nc_find_entry function in tinfo/comp_hash.c in the terminfo library in ncurses before 6.1-20191012.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35457",
        "package_name": "libglib2.0-0",
        "installed_version": "2.50.3-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNOME GLib before 2.65.3 has an integer overflow, that might lead to an out-of-bounds write, in g_option_group_add_entries. NOTE: the vendor's position is \"Realistically this is not a security issue. The standard pattern is for callers to provide a static list of option entries in a fixed number of calls to g_option_group_add_entries().\" The researcher states that this pattern is undocumented.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22922",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22922",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl is instructed to download content using the metalink feature, thecontents is verified against a hash provided in the metalink XML file.The metalink XML file points out to the client how to get the same contentfrom a set of different URLs, potentially hosted by different servers and theclient can then download the file from one or several of them. In a serial orparallel manner.If one of the servers hosting the contents has been breached and the contentsof the specific file on that server is replaced with a modified payload, curlshould detect this when the hash of the file mismatches after a completeddownload. It should remove the contents and instead try getting the contentsfrom another URL. This is not done, and instead such a hash mismatch is onlymentioned in text and the potentially malicious content is kept in the file ondisk.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2007-5686",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2007-5686",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "initscripts in rPath Linux 1 sets insecure permissions for the /var/log/btmp file, which allows local users to obtain sensitive information regarding authentication attempts.  NOTE: because sshd detects the insecure permissions and does not log certain events, this also prevents sshd from logging failed authentication attempts by remote attackers.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6488",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The string component in the GNU C Library (aka glibc or libc6) through 2.28, when running on the x32 architecture, incorrectly attempts to use a 64-bit register for size_t in assembly codes, which can lead to a segmentation fault or possibly unspecified other impact, as demonstrated by a crash in __memmove_avx_unaligned_erms in sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S during a memcpy.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6488",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The string component in the GNU C Library (aka glibc or libc6) through 2.28, when running on the x32 architecture, incorrectly attempts to use a 64-bit register for size_t in assembly codes, which can lead to a segmentation fault or possibly unspecified other impact, as demonstrated by a crash in __memmove_avx_unaligned_erms in sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S during a memcpy.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-6488",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The string component in the GNU C Library (aka glibc or libc6) through 2.28, when running on the x32 architecture, incorrectly attempts to use a 64-bit register for size_t in assembly codes, which can lead to a segmentation fault or possibly unspecified other impact, as demonstrated by a crash in __memmove_avx_unaligned_erms in sysdeps/x86_64/multiarch/memmove-vec-unaligned-erms.S during a memcpy.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20386",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-20386",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An issue was discovered in button_open in login/logind-button.c in systemd before 243. When executing the udevadm trigger command, a memory leak may occur.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2015-8985",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The pop_fail_stack function in the GNU C Library (aka glibc or libc6) allows context-dependent attackers to cause a denial of service (assertion failure and application crash) via vectors related to extended regular expression processing.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2015-8985",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The pop_fail_stack function in the GNU C Library (aka glibc or libc6) allows context-dependent attackers to cause a denial of service (assertion failure and application crash) via vectors related to extended regular expression processing.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2015-8985",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The pop_fail_stack function in the GNU C Library (aka glibc or libc6) allows context-dependent attackers to cause a denial of service (assertion failure and application crash) via vectors related to extended regular expression processing.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010022",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010022",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-1010022",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** GNU Libc current is affected by: Mitigation bypass. The impact is: Attacker may bypass stack guard protection. The component is: nptl. The attack vector is: Exploit stack buffer overflow vulnerability and use this bypass vulnerability to bypass stack guard. NOTE: Upstream comments indicate \"this is being treated as a non-security bug and no real threat.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-15719",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-15719",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libldap in certain third-party OpenLDAP packages has a certificate-validation flaw when the third-party package is asserting RFC6125 support. It considers CN even when there is a non-matching subjectAltName (SAN). This is fixed in, for example, openldap-2.4.46-10.el8 in Red Hat Enterprise Linux.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19126",
        "package_name": "libc-bin",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19126",
        "package_name": "libc6",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19126",
        "package_name": "multiarch-support",
        "installed_version": "2.24-11+deb9u4",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "On the x86-64 architecture, the GNU C Library (aka glibc) before 2.31 fails to ignore the LD_PREFER_MAP_32BIT_EXEC environment variable during program execution after a security transition, allowing local attackers to restrict the possible mapping addresses for loaded libraries and thus bypass ASLR for a setuid program.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13776",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13776",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd through v245 mishandles numerical usernames such as ones composed of decimal digits or 0x followed by hex digits, as demonstrated by use of root privileges when privileges of the 0x0 user account were intended. NOTE: this issue exists because of an incomplete fix for CVE-2017-1000082.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22923",
        "package_name": "curl",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-22923",
        "package_name": "libcurl3",
        "installed_version": "7.52.1-5+deb9u10",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "When curl is instructed to get content using the metalink feature, and a user name and password are used to download the metalink XML file, those same credentials are then subsequently passed on to each of the servers from which curl will download or try to download the contents from. Often contrary to the user's expectations and intentions and without telling the user it happened.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-36087",
        "package_name": "libsepol1",
        "installed_version": "2.6-2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The CIL compiler in SELinux 3.2 has a heap-based buffer over-read in ebitmap_match_any (called indirectly from cil_check_neverallow). This occurs because there is sometimes a lack of checks for invalid statements in an optional block.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2012-2657",
        "package_name": "libodbc1",
        "installed_version": "2.3.4-1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED **  Buffer overflow in the SQLDriverConnect function in unixODBC 2.0.10, 2.3.1, and earlier allows local users to cause a denial of service (crash) via a long string in the FILEDSN option.  NOTE: this issue might not be a vulnerability, since the ability to set this option typically implies that the attacker already has legitimate access to cause a DoS or execute code, and therefore the issue would not cross privilege boundaries. There may be limited attack scenarios if isql command-line options are exposed to an attacker, although it seems likely that other, more serious issues would also be exposed, and this issue might not cross privilege boundaries in that context.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-1000654",
        "package_name": "libtasn1-6",
        "installed_version": "4.10-1.1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "GNU Libtasn1-4.13 libtasn1-4.13 version libtasn1-4.13, libtasn1-4.12 contains a DoS, specifically CPU usage will reach 100% when running asn1Paser against the POC due to an issue in _asn1_expand_object_id(p_tree), after a long time, the program will be killed. This attack appears to be exploitable via parsing a crafted file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2010-0928",
        "package_name": "libssl1.1",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a \"fault-based attack.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2010-0928",
        "package_name": "openssl",
        "installed_version": "1.1.0l-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "OpenSSL 0.9.8i on the Gaisler Research LEON3 SoC on the Xilinx Virtex-II Pro FPGA uses a Fixed Width Exponentiation (FWE) algorithm for certain signature calculations, and does not verify the signature before providing it to a caller, which makes it easier for physically proximate attackers to determine the private key via a modified supply voltage for the microprocessor, related to a \"fault-based attack.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-14159",
        "package_name": "libldap-2.4-2",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-14159",
        "package_name": "libldap-common",
        "installed_version": "2.4.44+dfsg-5+deb9u4",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "slapd in OpenLDAP 2.4.45 and earlier creates a PID file after dropping privileges to a non-root account, which might allow local users to kill arbitrary processes by leveraging access to this non-root account for PID file modification before a root script executes a \"kill `cat /pathname`\" command, as demonstrated by openldap-initscript.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-11813",
        "package_name": "libjpeg62-turbo",
        "installed_version": "1:1.5.1-2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "libjpeg 9c has a large loop because read_pixel in rdtarga.c mishandles EOF.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3468",
        "package_name": "libavahi-client3",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in avahi in versions 0.6 up to 0.8. The event used to signal the termination of the client connection on the avahi Unix socket is not correctly handled in the client_work function, allowing a local attacker to trigger an infinite loop. The highest threat from this vulnerability is to the availability of the avahi service, which becomes unresponsive after this flaw is triggered.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3468",
        "package_name": "libavahi-common-data",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in avahi in versions 0.6 up to 0.8. The event used to signal the termination of the client connection on the avahi Unix socket is not correctly handled in the client_work function, allowing a local attacker to trigger an infinite loop. The highest threat from this vulnerability is to the availability of the avahi service, which becomes unresponsive after this flaw is triggered.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3468",
        "package_name": "libavahi-common3",
        "installed_version": "0.6.32-2",
        "fixed_version": "0.6.32-2+deb9u1",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in avahi in versions 0.6 up to 0.8. The event used to signal the termination of the client connection on the avahi Unix socket is not correctly handled in the client_work function, allowing a local attacker to trigger an infinite loop. The highest threat from this vulnerability is to the availability of the avahi service, which becomes unresponsive after this flaw is triggered.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2004-0971",
        "package_name": "libgssapi-krb5-2",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The krb5-send-pr script in the kerberos5 (krb5) package in Trustix Secure Linux 1.5 through 2.1, and possibly other operating systems, allows local users to overwrite files via a symlink attack on temporary files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2004-0971",
        "package_name": "libk5crypto3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The krb5-send-pr script in the kerberos5 (krb5) package in Trustix Secure Linux 1.5 through 2.1, and possibly other operating systems, allows local users to overwrite files via a symlink attack on temporary files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2004-0971",
        "package_name": "libkrb5-3",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The krb5-send-pr script in the kerberos5 (krb5) package in Trustix Secure Linux 1.5 through 2.1, and possibly other operating systems, allows local users to overwrite files via a symlink attack on temporary files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2004-0971",
        "package_name": "libkrb5support0",
        "installed_version": "1.15-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The krb5-send-pr script in the kerberos5 (krb5) package in Trustix Secure Linux 1.5 through 2.1, and possibly other operating systems, allows local users to overwrite files via a symlink attack on temporary files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-18078",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd-tmpfiles in systemd before 237 attempts to support ownership/permission changes on hardlinked files even if the fs.protected_hardlinks sysctl is turned off, which allows local users to bypass intended access restrictions via vectors involving a hard link to a file for which the user lacks write access, as demonstrated by changing the ownership of the /etc/passwd file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-18078",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd-tmpfiles in systemd before 237 attempts to support ownership/permission changes on hardlinked files even if the fs.protected_hardlinks sysctl is turned off, which allows local users to bypass intended access restrictions via vectors involving a hard link to a file for which the user lacks write access, as demonstrated by changing the ownership of the /etc/passwd file.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-36085",
        "package_name": "libsepol1",
        "installed_version": "2.6-2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __verify_map_perm_classperms and hashtab_map).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-36086",
        "package_name": "libsepol1",
        "installed_version": "2.6-2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The CIL compiler in SELinux 3.2 has a use-after-free in cil_reset_classpermission (called from cil_reset_classperms_set and cil_reset_classperms_list).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-36084",
        "package_name": "libsepol1",
        "installed_version": "2.6-2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "The CIL compiler in SELinux 3.2 has a use-after-free in __cil_verify_classperms (called from __cil_verify_classpermission and __cil_pre_verify_helper).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-20193",
        "package_name": "tar",
        "installed_version": "1.29b-1.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the src/list.c of tar 1.33 and earlier. This flaw allows an attacker who can submit a crafted input file to tar to cause uncontrolled consumption of memory. The highest threat from this vulnerability is to system availability.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-9117",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In LibTIFF 4.0.7, the program processes BMP images without verifying that biWidth and biHeight in the bitmap-information header match the actual input, leading to a heap-based buffer over-read in bmp2tiff.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-16231",
        "package_name": "libpcre3",
        "installed_version": "2:8.39-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** In PCRE 8.41, after compiling, a pcretest load test PoC produces a crash overflow in the function match() in pcre_exec.c because of a self-recursive call. NOTE: third parties dispute the relevance of this report, noting that there are options that can be used to limit the amount of stack that is used.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19882",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2019-19882",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "shadow 4.8, in certain circumstances affecting at least Gentoo, Arch Linux, and Void Linux, allows local users to obtain root access because setuid programs are misconfigured. Specifically, this affects shadow 4.8 when compiled using --with-libpam but without explicitly passing --disable-account-tools-setuid, and without a PAM configuration suitable for use with setuid account management tools. This combination leads to account management tools (groupadd, groupdel, groupmod, useradd, userdel, usermod) that can easily be used by unprivileged local users to escalate privileges to root in multiple ways. This issue became much more relevant in approximately December 2019 when an unrelated bug was fixed (i.e., the chmod calls to suidusbins were fixed in the upstream Makefile which is now included in the release version 4.8).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-26691",
        "package_name": "libcups2",
        "installed_version": "2.2.1-8+deb9u5",
        "fixed_version": "2.2.1-8+deb9u8",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A logic issue was addressed with improved state management. This issue is fixed in Security Update 2022-003 Catalina, macOS Monterey 12.3, macOS Big Sur 11.6.5. An application may be able to gain elevated privileges.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35521",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in libtiff. Due to a memory allocation failure in tif_read.c, a crafted TIFF file can lead to an abort, resulting in denial of service.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1056",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "Out-of-bounds Read error in tiffcrop in libtiff 4.3.0 allows attackers to cause a denial-of-service via a crafted tiff file. For users that compile libtiff from sources, the fix is available with commit 46dc8fcd.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2013-4235",
        "package_name": "login",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2013-4235",
        "package_name": "passwd",
        "installed_version": "1:4.4-4.1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "shadow: TOCTOU (time-of-check time-of-use) race condition when copying and removing directory trees",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13529",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-13529",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "An exploitable denial-of-service vulnerability exists in Systemd 245. A specially crafted DHCP FORCERENEW packet can cause a server running the DHCP client to be vulnerable to a DHCP ACK spoofing attack. An attacker can forge a pair of FORCERENEW and DCHP ACK packets to reconfigure the server.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2013-4392",
        "package_name": "libsystemd0",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2013-4392",
        "package_name": "libudev1",
        "installed_version": "232-25+deb9u12",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "systemd, when updating file permissions, allows local users to change the permissions and SELinux security contexts for arbitrary files via a symlink attack on unspecified files.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-asn1",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-base",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-corba",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-crypto",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-diameter",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-edoc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-eldap",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-erl-docgen",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-eunit",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-ic",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-inets",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-mnesia",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-nox",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-odbc",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-os-mon",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-parsetools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-percept",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-public-key",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-reltool",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-runtime-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-snmp",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-ssh",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-ssl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-syntax-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-tools",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-wx",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2009-0130",
        "package_name": "erlang-xmerl",
        "installed_version": "1:19.2.1+dfsg-2+deb9u2",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED ** lib/crypto/c_src/crypto_drv.c in erlang does not properly check the return value from the OpenSSL DSA_do_verify function, which might allow remote attackers to bypass validation of the certificate chain via a malformed SSL/TLS signature, a similar vulnerability to CVE-2008-5077.  NOTE: a package maintainer disputes this issue, reporting that there is a proper check within the only code that uses the applicable part of crypto_drv.c, and thus \"this report is invalid.\"",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2017-18018",
        "package_name": "coreutils",
        "installed_version": "8.26-3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In GNU Coreutils through 8.29, chown-core.c in chown and chgrp does not prevent replacement of a plain file with a symlink during use of the POSIX \"-R -L\" options, which allows local users to modify the ownership of arbitrary files by leveraging a race condition.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2012-2658",
        "package_name": "libodbc1",
        "installed_version": "2.3.4-1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "** DISPUTED **  Buffer overflow in the SQLDriverConnect function in unixODBC 2.3.1 allows local users to cause a denial of service (crash) via a long string in the DRIVER option.  NOTE: this issue might not be a vulnerability, since the ability to set this option typically implies that the attacker already has legitimate access to cause a DoS or execute code, and therefore the issue would not cross privilege boundaries. There may be limited attack scenarios if isql command-line options are exposed to an attacker, although it seems likely that other, more serious issues would also be exposed, and this issue might not cross privilege boundaries in that context.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-35522",
        "package_name": "libtiff5",
        "installed_version": "4.0.8-2+deb9u5",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "In LibTIFF, there is a memory malloc failure in tif_pixarlog.c. A crafted TIFF document can lead to an abort, resulting in a remote denial of service attack.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2013-0340",
        "package_name": "libexpat1",
        "installed_version": "2.2.0-2+deb9u3",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "bsdutils",
        "installed_version": "1:2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "libblkid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "libfdisk1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "libmount1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "libsmartcols1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "libuuid1",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "mount",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0563",
        "package_name": "util-linux",
        "installed_version": "2.29.2-1+deb9u1",
        "fixed_version": "No fix available",
        "severity": "NEGLIGIBLE",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "A flaw was found in the util-linux chfn and chsh utilities when compiled with Readline support. The Readline library uses an \"INPUTRC\" environment variable to get a path to the library config file. When the library cannot parse the specified file, it prints an error message containing data from the file. This flaw allows an unprivileged user to read root-owned files, potentially leading to privilege escalation. This flaw affects util-linux versions prior to 2.37.4.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3601",
        "package_name": "libssl1.0.2",
        "installed_version": "1.0.2u-1~deb9u1",
        "fixed_version": "No fix available",
        "severity": "UNKNOWN",
        "image": "hyperledger/fabric-couchdb:latest",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      }
    ],
    "hyperledger/fabric-orderer:2.1": [
      {
        "cve_id": "CVE-2021-36159",
        "package_name": "apk-tools",
        "installed_version": "2.10.5-r0",
        "fixed_version": "2.10.7-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "libfetch: an out of boundary read while libfetch uses strtol to parse the relevant numbers into address bytes leads to information leak or crash",
        "description": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\0' terminator one byte too late.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-30139",
        "package_name": "apk-tools",
        "installed_version": "2.10.5-r0",
        "fixed_version": "2.10.6-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "",
        "description": "In Alpine Linux apk-tools before 2.12.5, the tarball parser allows a buffer overflow and crash.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3711",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: SM2 Decryption Buffer Overflow",
        "description": "In order to decrypt SM2 encrypted data an application is expected to call the API function EVP_PKEY_decrypt(). Typically an application will call this function twice. The first time, on entry, the \"out\" parameter can be NULL and, on exit, the \"outlen\" parameter is populated with the buffer size required to hold the decrypted plaintext. The application can then allocate a sufficiently sized buffer and call EVP_PKEY_decrypt() again, but this time passing a non-NULL value for the \"out\" parameter. A bug in the implementation of the SM2 decryption code means that the calculation of the buffer size required to hold the plaintext returned by the first call to EVP_PKEY_decrypt() can be smaller than the actual size required by the second call. This can lead to a buffer overflow when EVP_PKEY_decrypt() is called by the application a second time with a buffer that is too small. A malicious attacker who is able present SM2 content for decryption to an application could cause attacker chosen data to overflow the buffer by up to a maximum of 62 bytes altering the contents of other data held after the buffer, possibly changing application behaviour or causing the application to crash. The location of the buffer is application dependent but is typically heap allocated. Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23840",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: integer overflow in CipherUpdate",
        "description": "Calls to EVP_CipherUpdate, EVP_EncryptUpdate and EVP_DecryptUpdate may overflow the output length argument in some cases where the input length is close to the maximum permissable length for an integer on the platform. In such cases the return value from the function call will be 1 (indicating success), but the output length value will be negative. This could cause applications to behave incorrectly or crash. OpenSSL versions 1.1.1i and below are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1j. OpenSSL versions 1.0.2x and below are affected by this issue. However OpenSSL 1.0.2 is out of support and no longer receiving public updates. Premium support customers of OpenSSL 1.0.2 should upgrade to 1.0.2y. Other users should upgrade to 1.1.1j. Fixed in OpenSSL 1.1.1j (Affected 1.1.1-1.1.1i). Fixed in OpenSSL 1.0.2y (Affected 1.0.2-1.0.2x).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: CA certificate check bypass with X509_V_FLAG_X509_STRICT",
        "description": "The X509_V_FLAG_X509_STRICT flag enables additional security checks of the certificates present in a certificate chain. It is not set by default. Starting from OpenSSL version 1.1.1h a check to disallow certificates in the chain that have explicitly encoded elliptic curve parameters was added as an additional strict check. An error in the implementation of this check meant that the result of a previous check to confirm that certificates in the chain are valid CA certificates was overwritten. This effectively bypasses the check that non-CA certificates must not be able to issue other certificates. If a \"purpose\" has been configured then there is a subsequent opportunity for checks that the certificate is a valid CA. All of the named \"purpose\" values implemented in libcrypto perform this check. Therefore, where a purpose is set the certificate chain will still be rejected even when the strict flag has been used. A purpose is set by default in libssl client and server certificate verification routines, but it can be overridden or removed by an application. In order to be affected, an application must explicitly set the X509_V_FLAG_X509_STRICT verification flag and either not set a purpose for the certificate verification or, in the case of TLS client or server applications, override the default purpose. OpenSSL versions 1.1.1h and newer are affected by this issue. Users of these versions should upgrade to OpenSSL 1.1.1k. OpenSSL 1.0.2 is not impacted by this issue. Fixed in OpenSSL 1.1.1k (Affected 1.1.1h-1.1.1j).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3712",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1l-r0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "openssl: Read buffer overruns processing ASN.1 strings",
        "description": "ASN.1 strings are represented internally within OpenSSL as an ASN1_STRING structure which contains a buffer holding the string data and a field holding the buffer length. This contrasts with normal C strings which are repesented as a buffer for the string data which is terminated with a NUL (0) byte. Although not a strict requirement, ASN.1 strings that are parsed using OpenSSL's own \"d2i\" functions (and other similar parsing functions) as well as any string whose value has been set with the ASN1_STRING_set() function will additionally NUL terminate the byte array in the ASN1_STRING structure. However, it is possible for applications to directly construct valid ASN1_STRING structures which do not NUL terminate the byte array by directly setting the \"data\" and \"length\" fields in the ASN1_STRING array. This can also happen by using the ASN1_STRING_set0() function. Numerous OpenSSL functions that print ASN.1 data have been found to assume that the ASN1_STRING byte array will be NUL terminated, even though this is not guaranteed for strings that have been directly constructed. Where an application requests an ASN.1 structure to be printed, and where that ASN.1 structure contains ASN1_STRINGs that have been directly constructed by the application without NUL terminating the \"data\" field, then a read buffer overrun can occur. The same thing can also occur during name constraints processing of certificates (for example if a certificate has been directly constructed by the application instead of loading it via the OpenSSL parsing functions, and the certificate contains non NUL terminated ASN1_STRING structures). It can also occur in the X509_get1_email(), X509_REQ_get1_email() and X509_get1_ocsp() functions. If a malicious actor can cause an application to directly construct an ASN1_STRING and then process it through one of the affected OpenSSL functions then this issue could be hit. This might result in a crash (causing a Denial of Service attack). It could also result in the disclosure of private memory contents (such as private keys, or sensitive plaintext). Fixed in OpenSSL 1.1.1l (Affected 1.1.1-1.1.1k). Fixed in OpenSSL 1.0.2za (Affected 1.0.2-1.0.2y).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-28831",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r10",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: invalid free or segmentation fault via malformed gzip data",
        "description": "decompress_gunzip.c in BusyBox through 1.32.1 mishandles the error bit on the huft_build result pointer, with a resultant invalid free or segmentation fault, via malformed gzip data.",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42378",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_i function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42379",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the next_input_file function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42380",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the clrvar function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42381",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the hash_init function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42382",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the getvar_s function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42383",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42384",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the handle_special function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42385",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the evaluate function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42386",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "busybox: use-after-free in awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc()",
        "description": "A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-37434",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "1.2.11-r4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "zlib: heap-based buffer over-read and overflow in inflate() in inflate.c via a large gzip header extra field",
        "description": "zlib through 1.2.12 has a heap-based buffer over-read or buffer overflow in inflate in inflate.c via a large gzip header extra field. NOTE: only applications that call inflateGetHeader are affected. Some common applications bundle the affected zlib source code but may be unable to call inflateGetHeader (e.g., see the nodejs/node reference).",
        "detected_by": [
          "trivy",
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-23806",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: IsOnCurve returns true for invalid field elements",
        "description": "Curve.IsOnCurve in crypto/elliptic in Go before 1.16.14 and 1.17.x before 1.17.7 can incorrectly return true in situations with a big.Int value that is not a valid field element.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24538",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: backticks not treated as string delimiters",
        "description": "Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. \"var a = {{.}}\"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24540",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of JavaScript whitespace",
        "description": "Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set \"\\t\\n\\f\\r\\u0020\\u2028\\u2029\" in JavaScript contexts that also contain actions may not be properly sanitized during execution.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-24790",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.11, 1.22.4",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/netip: Unexpected behavior from Is methods for IPv4-mapped IPv6 addresses",
        "description": "The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-16845",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.13.15, 1.14.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: ReadUvarint and ReadVarint can read an unlimited number of bytes from invalid inputs",
        "description": "Go before 1.13.15 and 14.x before 1.14.7 can have an infinite read loop in ReadUvarint and ReadVarint in encoding/binary via invalid inputs.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2020-28362",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.14.12, 1.15.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: panic during recursive division of very large numbers",
        "description": "Go before 1.14.12 and 1.15.x before 1.15.4 allows Denial of Service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-27918",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.9, 1.16.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: infinite loop when using xml.NewTokenDecoder with a custom TokenReader",
        "description": "encoding/xml in Go before 1.15.9 and 1.16.x before 1.16.1 has an infinite loop if a custom TokenReader (for xml.NewTokenDecoder) returns EOF in the middle of an element. This can occur in the Decode, DecodeElement, or Skip method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33195",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net: lookup functions may return invalid host names",
        "description": "Go before 1.15.13 and 1.16.x before 1.16.5 has functions for DNS lookups that do not validate replies from DNS servers, and thus a return value may contain an unsafe injection (e.g., XSS) that does not conform to the RFC1035 format.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33196",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion",
        "description": "In archive/zip in Go before 1.15.13 and 1.16.x before 1.16.5, a crafted file count (in an archive's header) can cause a NewReader or OpenReader panic.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-33198",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.15.13, 1.16.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big.Rat: may cause a panic or an unrecoverable fatal error if passed inputs with very large exponents",
        "description": "In Go before 1.15.13 and 1.16.x before 1.16.5, there can be a panic for a large exponent to the math/big.Rat SetString or UnmarshalText method.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-39293",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.8, 1.17.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: malformed archive may cause panic or memory exhaustion (incomplete fix of CVE-2021-33196)",
        "description": "In archive/zip in Go before 1.16.8 and 1.17.x before 1.17.1, a crafted archive header (falsely designating that many files are present) can cause a NewReader or OpenReader panic. NOTE: this issue exists because of an incomplete fix for CVE-2021-33196.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41771",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: debug/macho: invalid dynamic symbol table command can cause panic",
        "description": "ImportedSymbols in debug/macho (for Open or OpenFat) in Go before 1.16.10 and 1.17.x before 1.17.3 Accesses a Memory Location After the End of a Buffer, aka an out-of-bounds slice situation.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-41772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.10, 1.17.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/zip: Reader.Open panics on empty string",
        "description": "Go before 1.16.10 and 1.17.x before 1.17.3 allows an archive/zip Reader.Open panic via a crafted ZIP archive containing an invalid name or an empty filename field.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2021-44716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.12, 1.17.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: limit growth of header canonicalization cache",
        "description": "net/http in Go before 1.16.12 and 1.17.x before 1.17.5 allows uncontrolled memory consumption in the header canonicalization cache via HTTP/2 requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-23772",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.14, 1.17.7",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: uncontrolled memory consumption due to an unhandled overflow via Rat.SetString",
        "description": "Rat.SetString in math/big in Go before 1.16.14 and 1.17.x before 1.17.7 has an overflow that can lead to Uncontrolled Memory Consumption.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24675",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/pem: fix stack overflow in Decode",
        "description": "encoding/pem in Go before 1.17.9 and 1.18.x before 1.18.1 has a Decode stack overflow via a large amount of PEM data.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-24921",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.16.15, 1.17.8",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: regexp: stack exhaustion via a deeply nested expression",
        "description": "regexp.Compile in Go before 1.16.15 and 1.17.x before 1.17.8 allows stack exhaustion via a deeply nested expression.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-27664",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.6, 1.19.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http: handle server errors after sending GOAWAY",
        "description": "In net/http in Go before 1.18.6 and 1.19.x before 1.19.1, attackers can cause a denial of service because an HTTP/2 connection can hang during closing if shutdown were preempted by a fatal error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28131",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Decoder.Skip",
        "description": "Uncontrolled recursion in Decoder.Skip in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a deeply nested XML document.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-28327",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.9, 1.18.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/elliptic: panic caused by oversized scalar",
        "description": "The generic P-256 feature in crypto/elliptic in Go before 1.17.9 and 1.18.x before 1.18.1 allows a panic via long scalar input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2879",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: archive/tar: github.com/vbatts/tar-split: unbounded memory consumption when reading headers",
        "description": "Reader.Read does not set a limit on the maximum size of file headers. A maliciously crafted archive could cause Read to allocate unbounded amounts of memory, potentially causing resource exhaustion or panics. After fix, Reader.Read limits the maximum size of header blocks to 1 MiB.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-2880",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http/httputil: ReverseProxy should not forward unparseable query parameters",
        "description": "Requests forwarded by ReverseProxy include the raw query parameters from the inbound request, including unparsable parameters rejected by net/http. This could permit query parameter smuggling when a Go proxy forwards a parameter with an unparsable value. After fix, ReverseProxy sanitizes the query parameters in the forwarded query when the outbound request's Form field is set after the ReverseProxy. Director function returns, indicating that the proxy has parsed the query parameters. Proxies which do not parse query parameters continue to forward the original query parameters unchanged.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-29804",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Incorrect conversion of certain invalid paths to valid, absolute paths in Clean in path/filepath before Go 1.17.11 and Go 1.18.3 on Windows allows potential directory traversal attack.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30580",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: os/exec: Code injection in Cmd.Start",
        "description": "Code injection in Cmd.Start in os/exec before Go 1.17.11 and Go 1.18.3 allows execution of any binaries in the working directory named either \"..com\" or \"..exe\" by calling Cmd.Run, Cmd.Start, Cmd.Output, or Cmd.CombinedOutput when Cmd.Path is unset.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30630",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: io/fs: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in io/fs before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path which contains a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30631",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: compress/gzip: stack exhaustion in Reader.Read",
        "description": "Uncontrolled recursion in Reader.Read in compress/gzip before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via an archive containing a large number of concatenated 0-length compressed files.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30632",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: stack exhaustion in Glob",
        "description": "Uncontrolled recursion in Glob in path/filepath before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a path containing a large number of path separators.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30633",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/xml: stack exhaustion in Unmarshal",
        "description": "Uncontrolled recursion in Unmarshal in encoding/xml before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via unmarshalling an XML document into a Go struct which has a nested field that uses the 'any' field tag.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30634",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.11, 1.18.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "ELSA-2022-17957: ol8addon security update (IMPORTANT)",
        "description": "Infinite loop in Read in crypto/rand before Go 1.17.11 and Go 1.18.3 on Windows allows attacker to cause an indefinite hang by passing a buffer larger than 1 << 32 - 1 bytes.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-30635",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.12, 1.18.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: encoding/gob: stack exhaustion in Decoder.Decode",
        "description": "Uncontrolled recursion in Decoder.Decode in encoding/gob before Go 1.17.12 and Go 1.18.4 allows an attacker to cause a panic due to stack exhaustion via a message which contains deeply nested structures.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-32189",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.17.13, 1.18.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: math/big: decoding big.Float and big.Rat types can panic if the encoded message is too short, potentially allowing a denial of service",
        "description": "A too-short encoded message can cause a panic in Float.GobDecode and Rat GobDecode in math/big in Go before 1.17.13 and 1.18.5, potentially allowing a denial of service.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41715",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.7, 1.19.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: regexp/syntax: limit memory used by parsing regexps",
        "description": "Programs which compile regular expressions from untrusted sources may be vulnerable to memory exhaustion or denial of service. The parsed regexp representation is linear in the size of the input, but in some cases the constant factor can be as high as 40,000, making relatively small regexps consume much larger amounts of memory. After fix, each regexp being parsed is limited to a 256 MB memory footprint. Regular expressions whose representation would use more space than that are rejected. Normal use of regular expressions is unaffected.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41716",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.8, 1.19.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "Due to unsanitized NUL values, attackers may be able to maliciously se ...",
        "description": "Due to unsanitized NUL values, attackers may be able to maliciously set environment variables on Windows. In syscall.StartProcess and os/exec.Cmd, invalid environment variable values containing NUL values are not properly checked for. A malicious environment variable value can exploit this behavior to set a value for a different environment variable. For example, the environment variable string \"A=B\\x00C=D\" sets the variables \"A=B\" and \"C=D\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41720",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.18.9, 1.19.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: os, net/http: avoid escapes from os.DirFS and http.Dir on Windows",
        "description": "On Windows, restricted files can be accessed via os.DirFS and http.Dir. The os.DirFS function and http.Dir type provide access to a tree of files rooted at a given directory. These functions permit access to Windows device files under that root. For example, os.DirFS(\"C:/tmp\").Open(\"COM1\") opens the COM1 device. Both os.DirFS and http.Dir only provide read-only filesystem access. In addition, on Windows, an os.DirFS for the directory (the root of the current drive) can permit a maliciously crafted path to escape from the drive and access any path on the system. With fix applied, the behavior of os.DirFS(\"\") has changed. Previously, an empty root was treated equivalently to \"/\", so os.DirFS(\"\").Open(\"tmp\") would open the path \"/tmp\". This now returns an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41722",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: path/filepath: path-filepath filepath.Clean path traversal",
        "description": "A path traversal vulnerability exists in filepath.Clean on Windows. On Windows, the filepath.Clean function could transform an invalid path such as \"a/../c:/b\" into the valid path \"c:\\b\". This transformation of a relative (if invalid) path into an absolute path could enable a directory traversal attack. After fix, the filepath.Clean function transforms this path into the relative (but still invalid) path \".\\c:\\b\".",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41723",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang.org/x/net/http2: avoid quadratic complexity in HPACK decoding",
        "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41724",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: large handshake records may cause panics",
        "description": "Large handshake records may cause panics in crypto/tls. Both clients and servers may send large TLS handshake records which cause servers and clients, respectively, to panic when attempting to construct responses. This affects all TLS 1.3 clients, TLS 1.2 clients which explicitly enable session resumption (by setting Config.ClientSessionCache to a non-nil value), and TLS 1.3 servers which request client certificates (by setting Config.ClientAuth >= RequestClientCert).",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2022-41725",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.6, 1.20.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, mime/multipart: denial of service from excessive resource consumption",
        "description": "A denial of service is possible from excessive resource consumption in net/http and mime/multipart. Multipart form parsing with mime/multipart.Reader.ReadForm can consume largely unlimited amounts of memory and disk files. This also affects form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. ReadForm takes a maxMemory parameter, and is documented as storing \"up to maxMemory bytes +10MB (reserved for non-file parts) in memory\". File parts which cannot be stored in memory are stored on disk in temporary files. The unconfigurable 10MB reserved for non-file parts is excessively large and can potentially open a denial of service vector on its own. However, ReadForm did not properly account for all memory consumed by a parsed form, such as map entry overhead, part names, and MIME headers, permitting a maliciously crafted form to consume well over 10MB. In addition, ReadForm contained no limit on the number of disk files created, permitting a relatively small request body to create a large number of disk temporary files. With fix, ReadForm now properly accounts for various forms of memory overhead, and should now stay within its documented limit of 10MB + maxMemory bytes of memory consumption. Users should still be aware that this limit is high and may still be hazardous. In addition, ReadForm now creates at most one on-disk temporary file, combining multiple form parts into a single temporary file. The mime/multipart.File interface type's documentation states, \"If stored on disk, the File's underlying concrete type will be an *os.File.\". This is no longer the case when a form contains more than one file part, due to this coalescing of parts into a single file. The previous behavior of using distinct files for each form part may be reenabled with the environment variable GODEBUG=multipartfiles=distinct. Users should be aware that multipart.ReadForm and the http.Request methods that call it do not limit the amount of disk consumed by temporary files. Callers can limit the size of form data with http.MaxBytesReader.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24534",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto: denial of service from excessive memory allocation",
        "description": "HTTP and MIME header parsing can allocate large amounts of memory, even when parsing small inputs, potentially leading to a denial of service. Certain unusual patterns of input data can cause the common function used to parse HTTP and MIME headers to allocate substantially more memory than required to hold the parsed headers. An attacker can exploit this behavior to cause an HTTP server to allocate large amounts of memory from a small request, potentially leading to memory exhaustion and a denial of service. With fix, header parsing now correctly allocates only the memory required to hold parsed headers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24536",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, net/textproto, mime/multipart: denial of service from excessive resource consumption",
        "description": "Multipart form parsing can consume large amounts of CPU and memory when processing form inputs containing very large numbers of parts. This stems from several causes: 1. mime/multipart.Reader.ReadForm limits the total memory a parsed multipart form can consume. ReadForm can undercount the amount of memory consumed, leading it to accept larger inputs than intended. 2. Limiting total memory does not account for increased pressure on the garbage collector from large numbers of small allocations in forms with many parts. 3. ReadForm can allocate a large number of short-lived buffers, further increasing pressure on the garbage collector. The combination of these factors can permit an attacker to cause an program that parses multipart forms to consume large amounts of CPU and memory, potentially resulting in a denial of service. This affects programs that use mime/multipart.Reader.ReadForm, as well as form parsing in the net/http package with the Request methods FormFile, FormValue, ParseMultipartForm, and PostFormValue. With fix, ReadForm now does a better job of estimating the memory consumption of parsed forms, and performs many fewer short-lived allocations. In addition, the fixed mime/multipart.Reader imposes the following limits on the size of parsed forms: 1. Forms parsed with ReadForm may contain no more than 1000 parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxparts=. 2. Form parts parsed with NextPart and NextRawPart may contain no more than 10,000 header fields. In addition, forms parsed with ReadForm may contain no more than 10,000 header fields across all parts. This limit may be adjusted with the environment variable GODEBUG=multipartmaxheaders=.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24537",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.8, 1.20.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: go/parser: Infinite loop in parsing",
        "description": "Calling any of the Parse functions on Go source code which contains //line directives with very large line numbers can cause an infinite loop due to integer overflow.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-24539",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper sanitization of CSS values",
        "description": "Angle brackets (<>) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29400",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.9, 1.20.4",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: html/template: improper handling of empty HTML attributes",
        "description": "Templates containing actions in unquoted HTML attributes (e.g. \"attr={{.}}\") executed with empty input can result in output with unexpected results when parsed due to HTML normalization rules. This may allow injection of arbitrary attributes into tags.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-29403",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.19.10, 1.20.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: runtime: unexpected behavior of setuid/setgid binaries",
        "description": "On Unix platforms, the Go runtime does not behave differently when a binary is run with the setuid/setgid bits. This can be dangerous in certain cases, such as when dumping memory state, or assuming the status of standard i/o file descriptors. If a setuid/setgid binary is executed with standard I/O file descriptors closed, opening any files can result in unexpected content being read or written with elevated privileges. Similarly, if a setuid/setgid program is terminated, either via panic or signal, it may leak the contents of its registers.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-39325",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.10, 1.21.3",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: rapid stream resets can cause excessive work (CVE-2023-44487)",
        "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrentStreams setting and the ConfigureServer function.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45283",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.11, 1.21.4, 1.20.12, 1.21.5",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "The filepath package does not recognize paths with a \\??\\ prefix as sp ...",
        "description": "The filepath package does not recognize paths with a \\??\\ prefix as special. On Windows, a path beginning with \\??\\ is a Root Local Device path equivalent to a path beginning with \\\\?\\. Paths with a \\??\\ prefix may be used to access arbitrary locations on the system. For example, the path \\??\\c:\\x is equivalent to the more common path c:\\x. Before fix, Clean could convert a rooted path such as \\a\\..\\??\\b into the root local device path \\??\\b. Clean will now convert this to .\\??\\b. Similarly, Join(\\, ??, b) could convert a seemingly innocent sequence of path elements into the root local device path \\??\\b. Join will now convert this to \\.\\??\\b. In addition, with fix, IsAbs now correctly reports paths beginning with \\??\\ as absolute, and VolumeName correctly reports the \\??\\ prefix as a volume name. UPDATE: Go 1.20.11 and Go 1.21.4 inadvertently changed the definition of the volume name in Windows paths starting with \\?, resulting in filepath.Clean(\\?\\c:) returning \\?\\c: rather than \\?\\c:\\ (among other effects). The previous behavior has been restored.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45287",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.20.0",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: crypto/tls: Timing Side Channel attack in RSA based TLS key exchanges.",
        "description": "Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-45288",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.21.9, 1.22.2",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS",
        "description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2024-34156",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.22.7, 1.23.1",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "encoding/gob: golang: Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion",
        "description": "Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2025-47907",
        "package_name": "stdlib",
        "installed_version": "v1.14.1",
        "fixed_version": "1.23.12, 1.24.6",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "trivy",
        "title": "database/sql: Postgres Scan Race Condition",
        "description": "Cancelling a query (e.g. by cancelling the context passed to one of the query methods) during a call to the Scan method of the returned Rows can result in unexpected results if other queries are being made in parallel. This can result in a race condition that may overwrite the expected results with those of another query, causing the call to Scan to return either unexpected results from the other query or an error.",
        "detected_by": [
          "trivy"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0286",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a type confusion vulnerability relating to X.400 address processing\ninside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but\nthe public structure definition for GENERAL_NAME incorrectly specified the type\nof the x400Address field as ASN1_TYPE. This field is subsequently interpreted by\nthe OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an\nASN1_STRING.\n\nWhen CRL checking is enabled (i.e. the application sets the\nX509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass\narbitrary pointers to a memcmp call, enabling them to read memory contents or\nenact a denial of service. In most cases, the attack requires the attacker to\nprovide both the certificate chain and CRL, neither of which need to have a\nvalid signature. If the attacker only controls one of these inputs, the other\ninput must already contain an X.400 address as a CRL distribution point, which\nis uncommon. As such, this vulnerability is most likely to only affect\napplications which have implemented their own functionality for retrieving CRLs\nover a network.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-2650",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing some specially crafted ASN.1 object identifiers or\ndata containing them may be very slow.\n\nImpact summary: Applications that use OBJ_obj2txt() directly, or use any of\nthe OpenSSL subsystems OCSP, PKCS7/SMIME, CMS, CMP/CRMF or TS with no message\nsize limit may experience notable to very long delays when processing those\nmessages, which may lead to a Denial of Service.\n\nAn OBJECT IDENTIFIER is composed of a series of numbers - sub-identifiers -\nmost of which have no size limit.  OBJ_obj2txt() may be used to translate\nan ASN.1 OBJECT IDENTIFIER given in DER encoding form (using the OpenSSL\ntype ASN1_OBJECT) to its canonical numeric text form, which are the\nsub-identifiers of the OBJECT IDENTIFIER in decimal form, separated by\nperiods.\n\nWhen one of the sub-identifiers in the OBJECT IDENTIFIER is very large\n(these are sizes that are seen as absurdly large, taking up tens or hundreds\nof KiBs), the translation to a decimal number in text may take a very long\ntime.  The time complexity is O(n^2) with 'n' being the size of the\nsub-identifiers in bytes (*).\n\nWith OpenSSL 3.0, support to fetch cryptographic algorithms using names /\nidentifiers in string form was introduced.  This includes using OBJECT\nIDENTIFIERs in canonical numeric text form as identifiers for fetching\nalgorithms.\n\nSuch OBJECT IDENTIFIERs may be received through the ASN.1 structure\nAlgorithmIdentifier, which is commonly used in multiple protocols to specify\nwhat cryptographic algorithm should be used to sign or verify, encrypt or\ndecrypt, or digest passed data.\n\nApplications that call OBJ_obj2txt() directly with untrusted data are\naffected, with any version of OpenSSL.  If the use is for the mere purpose\nof display, the severity is considered low.\n\nIn OpenSSL 3.0 and newer, this affects the subsystems OCSP, PKCS7/SMIME,\nCMS, CMP/CRMF or TS.  It also impacts anything that processes X.509\ncertificates, including simple things like verifying its signature.\n\nThe impact on TLS is relatively low, because all versions of OpenSSL have a\n100KiB limit on the peer's certificate chain.  Additionally, this only\nimpacts clients, or servers that have explicitly enabled client\nauthentication.\n\nIn OpenSSL 1.1.1 and 1.0.2, this only affects displaying diverse objects,\nsuch as X.509 certificates.  This is assumed to not happen in such a way\nthat it would cause a Denial of Service, so these versions are considered\nnot affected by this issue in such a way that it would be cause for concern,\nand the severity is therefore considered low.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-1292",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2068",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-5535",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an\nempty supported client protocols buffer may cause a crash or memory contents to\nbe sent to the peer.\n\nImpact summary: A buffer overread can have a range of potential consequences\nsuch as unexpected application beahviour or a crash. In particular this issue\ncould result in up to 255 bytes of arbitrary private data from memory being sent\nto the peer leading to a loss of confidentiality. However, only applications\nthat directly call the SSL_select_next_proto function with a 0 length list of\nsupported client protocols are affected by this issue. This would normally never\nbe a valid scenario and is typically not under attacker control but may occur by\naccident in the case of a configuration or programming error in the calling\napplication.\n\nThe OpenSSL API function SSL_select_next_proto is typically used by TLS\napplications that support ALPN (Application Layer Protocol Negotiation) or NPN\n(Next Protocol Negotiation). NPN is older, was never standardised and\nis deprecated in favour of ALPN. We believe that ALPN is significantly more\nwidely deployed than NPN. The SSL_select_next_proto function accepts a list of\nprotocols from the server and a list of protocols from the client and returns\nthe first protocol that appears in the server list that also appears in the\nclient list. In the case of no overlap between the two lists it returns the\nfirst item in the client list. In either case it will signal whether an overlap\nbetween the two lists was found. In the case where SSL_select_next_proto is\ncalled with a zero length client list it fails to notice this condition and\nreturns the memory immediately following the client list pointer (and reports\nthat there was no overlap in the lists).\n\nThis function is typically called from a server side application callback for\nALPN or a client side application callback for NPN. In the case of ALPN the list\nof protocols supplied by the client is guaranteed by libssl to never be zero in\nlength. The list of server protocols comes from the application and should never\nnormally be expected to be of zero length. In this case if the\nSSL_select_next_proto function has been called as expected (with the list\nsupplied by the client passed in the client/client_len parameters), then the\napplication will not be vulnerable to this issue. If the application has\naccidentally been configured with a zero length server list, and has\naccidentally passed that zero length server list in the client/client_len\nparameters, and has additionally failed to correctly handle a \"no overlap\"\nresponse (which would normally result in a handshake failure in ALPN) then it\nwill be vulnerable to this problem.\n\nIn the case of NPN, the protocol permits the client to opportunistically select\na protocol when there is no overlap. OpenSSL returns the first client protocol\nin the no overlap case in support of this. The list of client protocols comes\nfrom the application and should never normally be expected to be of zero length.\nHowever if the SSL_select_next_proto function is accidentally called with a\nclient_len of 0 then an invalid memory pointer will be returned instead. If the\napplication uses this output as the opportunistic protocol then the loss of\nconfidentiality will occur.\n\nThis issue has been assessed as Low severity because applications are most\nlikely to be vulnerable if they are using NPN instead of ALPN - but NPN is not\nwidely used. It also requires an application configuration or programming error.\nFinally, this issue would not typically be under attacker control making active\nexploitation unlikely.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.\n\nDue to the low severity of this issue we are not issuing new releases of\nOpenSSL at this time. The fix will be included in the next releases when they\nbecome available.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-3449",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1k-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-0778",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The BN_mod_sqrt() function, which computes a modular square root, contains a bug that can cause it to loop forever for non-prime moduli. Internally this function is used when parsing certificates that contain elliptic curve public keys in compressed form or explicit elliptic curve parameters with a base point encoded in compressed form. It is possible to trigger the infinite loop by crafting a certificate that has invalid explicit curve parameters. Since certificate parsing happens prior to verification of the certificate signature, any process that parses an externally supplied certificate may thus be subject to a denial of service attack. The infinite loop can also be reached when parsing crafted private keys as they can contain explicit elliptic curve parameters. Thus vulnerable situations include: - TLS clients consuming server certificates - TLS servers consuming client certificates - Hosting providers taking certificates or private keys from customers - Certificate authorities parsing certification requests from subscribers - Anything else which parses ASN.1 elliptic curve parameters Also any other applications that use the BN_mod_sqrt() where the attacker can control the parameter values are vulnerable to this DoS issue. In the OpenSSL 1.0.2 version the public key is not parsed during initial parsing of the certificate which makes it slightly harder to trigger the infinite loop. However any operation which requires the public key from the certificate will trigger the infinite loop. In particular the attacker can use a self-signed certificate to trigger the loop during verification of the certificate signature. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0. It was addressed in the releases of 1.1.1n and 3.0.2 on the 15th March 2022. Fixed in OpenSSL 3.0.2 (Affected 3.0.0,3.0.1). Fixed in OpenSSL 1.1.1n (Affected 1.1.1-1.1.1m). Fixed in OpenSSL 1.0.2zd (Affected 1.0.2-1.0.2zc).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-28391",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "BusyBox through 1.35.0 allows remote attackers to execute arbitrary code if netstat is used to print a DNS PTR record's value to a VT compatible terminal. Alternatively, the attacker could choose to change the terminal's colors.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2511",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Some non-default TLS server configurations can cause unbounded\nmemory growth when processing TLSv1.3 sessions\n\nImpact summary: An attacker may exploit certain server configurations to trigger\nunbounded memory growth that would lead to a Denial of Service\n\nThis problem can occur in TLSv1.3 if the non-default SSL_OP_NO_TICKET option is\nbeing used (but not if early_data support is also configured and the default\nanti-replay protection is in use). In this case, under certain conditions, the\nsession cache can get into an incorrect state and it will fail to flush properly\nas it fills. The session cache will continue to grow in an unbounded manner. A\nmalicious client could deliberately create the scenario for this failure to\nforce a Denial of Service. It may also happen by accident in normal operation.\n\nThis issue only affects TLS servers supporting TLSv1.3. It does not affect TLS\nclients.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue. OpenSSL\n1.0.2 is also not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0464",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A security vulnerability has been identified in all supported versions\n\nof OpenSSL related to the verification of X.509 certificate chains\nthat include policy constraints.  Attackers may be able to exploit this\nvulnerability by creating a malicious certificate chain that triggers\nexponential use of computational resources, leading to a denial-of-service\n(DoS) attack on affected systems.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-4807",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: The POLY1305 MAC (message authentication code) implementation\ncontains a bug that might corrupt the internal state of applications on the\nWindows 64 platform when running on newer X86_64 processors supporting the\nAVX512-IFMA instructions.\n\nImpact summary: If in an application that uses the OpenSSL library an attacker\ncan influence whether the POLY1305 MAC algorithm is used, the application\nstate might be corrupted with various application dependent consequences.\n\nThe POLY1305 MAC (message authentication code) implementation in OpenSSL does\nnot save the contents of non-volatile XMM registers on Windows 64 platform\nwhen calculating the MAC of data larger than 64 bytes. Before returning to\nthe caller all the XMM registers are set to zero rather than restoring their\nprevious content. The vulnerable code is used only on newer x86_64 processors\nsupporting the AVX512-IFMA instructions.\n\nThe consequences of this kind of internal application state corruption can\nbe various - from no consequences, if the calling application does not\ndepend on the contents of non-volatile XMM registers at all, to the worst\nconsequences, where the attacker could get complete control of the application\nprocess. However given the contents of the registers are just zeroized so\nthe attacker cannot put arbitrary values inside, the most likely consequence,\nif any, would be an incorrect result of some application dependent\ncalculations or a crash leading to a denial of service.\n\nThe POLY1305 MAC algorithm is most frequently used as part of the\nCHACHA20-POLY1305 AEAD (authenticated encryption with associated data)\nalgorithm. The most common usage of this AEAD cipher is with TLS protocol\nversions 1.2 and 1.3 and a malicious client can influence whether this AEAD\ncipher is used by the server. This implies that server applications using\nOpenSSL can be potentially impacted. However we are currently not aware of\nany concrete application that would be affected by this issue therefore we\nconsider this a Low severity security issue.\n\nAs a workaround the AVX512-IFMA instructions support can be disabled at\nruntime by setting the environment variable OPENSSL_ia32cap:\n\n   OPENSSL_ia32cap=:~0x200000\n\nThe FIPS provider is not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3446",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. One of those\nchecks confirms that the modulus ('p' parameter) is not too large. Trying to use\na very large modulus is slow and OpenSSL will not normally use a modulus which\nis over 10,000 bits in length.\n\nHowever the DH_check() function checks numerous aspects of the key or parameters\nthat have been supplied. Some of those checks use the supplied modulus value\neven if it has already been found to be too large.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulernable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the '-check' option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-45853",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-48174",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "CRITICAL",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a stack overflow vulnerability in ash.c:6030 in busybox before 1.35. In the environment of Internet of Vehicles, this vulnerability can be executed from command to arbitrary code execution.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23841",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0466",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function X509_VERIFY_PARAM_add0_policy() is documented to\nimplicitly enable the certificate policy check when doing certificate\nverification. However the implementation of the function does not\nenable the check which allows certificates with invalid or incorrect\npolicies to pass the certificate verification.\n\nAs suddenly enabling the policy check could break existing deployments it was\ndecided to keep the existing behavior of the X509_VERIFY_PARAM_add0_policy()\nfunction.\n\nInstead the applications that require OpenSSL to perform certificate\npolicy check need to use X509_VERIFY_PARAM_set1_policies() or explicitly\nenable the policy check by calling X509_VERIFY_PARAM_set_flags() with\nthe X509_V_FLAG_POLICY_CHECK flag argument.\n\nCertificate policy checks are disabled by default in OpenSSL and are not\ncommonly used by applications.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-9143",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Use of the low-level GF(2^m) elliptic curve APIs with untrusted\nexplicit values for the field polynomial can lead to out-of-bounds memory reads\nor writes.\n\nImpact summary: Out of bound memory writes can lead to an application crash or\neven a possibility of a remote code execution, however, in all the protocols\ninvolving Elliptic Curve Cryptography that we're aware of, either only \"named\ncurves\" are supported, or, if explicit curve parameters are supported, they\nspecify an X9.62 encoding of binary (GF(2^m)) curves that can't represent\nproblematic input values. Thus the likelihood of existence of a vulnerable\napplication is low.\n\nIn particular, the X9.62 encoding is used for ECC keys in X.509 certificates,\nso problematic inputs cannot occur in the context of processing X.509\ncertificates.  Any problematic use-cases would have to be using an \"exotic\"\ncurve encoding.\n\nThe affected APIs include: EC_GROUP_new_curve_GF2m(), EC_GROUP_new_from_params(),\nand various supporting BN_GF2m_*() functions.\n\nApplications working with \"exotic\" explicit binary (GF(2^m)) curve parameters,\nthat make it possible to represent invalid field polynomials with a zero\nconstant term, via the above or similar APIs, may terminate abruptly as a\nresult of reading or writing outside of array bounds.  Remote code execution\ncannot easily be ruled out.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0215",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The public API function BIO_new_NDEF is a helper function used for streaming\nASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the\nSMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by\nend user applications.\n\nThe function receives a BIO from the caller, prepends a new BIO_f_asn1 filter\nBIO onto the front of it to form a BIO chain, and then returns the new head of\nthe BIO chain to the caller. Under certain conditions, for example if a CMS\nrecipient public key is invalid, the new filter BIO is freed and the function\nreturns a NULL result indicating a failure. However, in this case, the BIO chain\nis not properly cleaned up and the BIO passed by the caller still retains\ninternal pointers to the previously freed filter BIO. If the caller then goes on\nto call BIO_pop() on the BIO then a use-after-free will occur. This will most\nlikely result in a crash.\n\n\n\nThis scenario occurs directly in the internal function B64_write_ASN1() which\nmay cause BIO_new_NDEF() to be called and will subsequently call BIO_pop() on\nthe BIO. This internal function is in turn called by the public API functions\nPEM_write_bio_ASN1_stream, PEM_write_bio_CMS_stream, PEM_write_bio_PKCS7_stream,\nSMIME_write_ASN1, SMIME_write_CMS and SMIME_write_PKCS7.\n\nOther public API functions that may be impacted by this include\ni2d_ASN1_bio_stream, BIO_new_CMS, BIO_new_PKCS7, i2d_CMS_bio_stream and\ni2d_PKCS7_bio_stream.\n\nThe OpenSSL cms and smime command line applications are similarly affected.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-2097",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "AES OCB mode for 32-bit x86 platforms using the AES-NI assembly optimised implementation will not encrypt the entirety of the data under some circumstances. This could reveal sixteen bytes of data that was preexisting in the memory that wasn't written. In the special case of \"in place\" encryption, sixteen bytes of the plaintext would be revealed. Since OpenSSL does not support OCB based cipher suites for TLS and DTLS, they are both unaffected. Fixed in OpenSSL 3.0.5 (Affected 3.0.0-3.0.4). Fixed in OpenSSL 1.1.1q (Affected 1.1.1-1.1.1p).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-0465",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Applications that use a non-default option when verifying certificates may be\nvulnerable to an attack from a malicious CA to circumvent certain checks.\n\nInvalid certificate policies in leaf certificates are silently ignored by\nOpenSSL and other certificate policy checks are skipped for that certificate.\nA malicious CA could use this to deliberately assert invalid certificate policies\nin order to circumvent policy checking on the certificate altogether.\n\nPolicy processing is disabled by default but can be enabled by passing\nthe `-policy' argument to the command line utilities or by calling the\n`X509_VERIFY_PARAM_set1_policies()' function.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-1971",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1i-r0",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-3817",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Checking excessively long DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_check(), DH_check_ex()\nor EVP_PKEY_param_check() to check a DH key or DH parameters may experience long\ndelays. Where the key or parameters that are being checked have been obtained\nfrom an untrusted source this may lead to a Denial of Service.\n\nThe function DH_check() performs various checks on DH parameters. After fixing\nCVE-2023-3446 it was discovered that a large q parameter value can also trigger\nan overly long computation during some of these checks. A correct q value,\nif present, cannot be larger than the modulus p parameter, thus it is\nunnecessary to perform these checks if q is larger than p.\n\nAn application that calls DH_check() and supplies a key or parameters obtained\nfrom an untrusted source could be vulnerable to a Denial of Service attack.\n\nThe function DH_check() is itself called by a number of other OpenSSL functions.\nAn application calling any of those other functions may similarly be affected.\nThe other functions affected by this are DH_check_ex() and\nEVP_PKEY_param_check().\n\nAlso vulnerable are the OpenSSL dhparam and pkeyparam command line applications\nwhen using the \"-check\" option.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-4160",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "There is a carry propagation bug in the MIPS32 and MIPS64 squaring procedure. Many EC algorithms are affected, including some of the TLS 1.3 default curves. Impact was not analyzed in detail, because the pre-requisites for attack are considered unlikely and include reusing private keys. Analysis suggests that attacks against RSA and DSA as a result of this defect would be very difficult to perform and are not believed likely. Attacks against DH are considered just feasible (although very difficult) because most of the work necessary to deduce information about a private key may be performed offline. The amount of resources required for such an attack would be significant. However, for an attack on TLS to be meaningful, the server would have to share the DH private key among multiple clients, which is no longer an option since CVE-2016-0701. This issue affects OpenSSL versions 1.0.2, 1.1.1 and 3.0.0. It was addressed in the releases of 1.1.1m and 3.0.1 on the 15th of December 2021. For the 1.0.2 release it is addressed in git commit 6fc1aaaf3 that is available to premium support customers only. It will be made available in 1.0.2zc when it is released. The issue only affects OpenSSL on MIPS platforms. Fixed in OpenSSL 3.0.1 (Affected 3.0.0). Fixed in OpenSSL 1.1.1m (Affected 1.1.1-1.1.1l). Fixed in OpenSSL 1.0.2zc-dev (Affected 1.0.2-1.0.2zb).",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4304",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "A timing based side channel exists in the OpenSSL RSA Decryption implementation\nwhich could be sufficient to recover a plaintext across a network in a\nBleichenbacher style attack. To achieve a successful decryption an attacker\nwould have to be able to send a very large number of trial messages for\ndecryption. The vulnerability affects all RSA padding modes: PKCS#1 v1.5,\nRSA-OEAP and RSASVE.\n\nFor example, in a TLS connection, RSA is commonly used by a client to send an\nencrypted pre-master secret to the server. An attacker that had observed a\ngenuine connection between a client and a server could use this flaw to send\ntrial messages to the server and record the time taken to process them. After a\nsufficiently large number of messages the attacker could recover the pre-master\nsecret used for the original connection and thus be able to decrypt the\napplication data sent over that connection.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-0727",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-4741",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause\nmemory to be accessed that was previously freed in some situations\n\nImpact summary: A use after free can have a range of potential consequences such\nas the corruption of valid data, crashes or execution of arbitrary code.\nHowever, only applications that directly call the SSL_free_buffers function are\naffected by this issue. Applications that do not call this function are not\nvulnerable. Our investigations indicate that this function is rarely used by\napplications.\n\nThe SSL_free_buffers function is used to free the internal OpenSSL buffer used\nwhen processing an incoming record from the network. The call is only expected\nto succeed if the buffer is not currently in use. However, two scenarios have\nbeen identified where the buffer is freed even when still in use.\n\nThe first scenario occurs where a record header has been received from the\nnetwork and processed by OpenSSL, but the full record body has not yet arrived.\nIn this case calling SSL_free_buffers will succeed even though a record has only\nbeen partially processed and the buffer is still in use.\n\nThe second scenario occurs where a full record containing application data has\nbeen received and processed by OpenSSL but the application has only read part of\nthis data. Again a call to SSL_free_buffers will succeed even though the buffer\nis still in use.\n\nWhile these scenarios could occur accidentally during normal operation a\nmalicious attacker could attempt to engineer a stituation where this occurs.\nWe are not aware of this issue being actively exploited.\n\nThe FIPS modules in 3.3, 3.2, 3.1 and 3.0 are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-23839",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "1.1.1j-r0",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-4450",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and\ndecodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data.\nIf the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are\npopulated with pointers to buffers containing the relevant decoded data. The\ncaller is responsible for freeing those buffers. It is possible to construct a\nPEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex()\nwill return a failure code but will populate the header argument with a pointer\nto a buffer that has already been freed. If the caller also frees this buffer\nthen a double free will occur. This will most likely lead to a crash. This\ncould be exploited by an attacker who has the ability to supply malicious PEM\nfiles for parsing to achieve a denial of service attack.\n\nThe functions PEM_read_bio() and PEM_read() are simple wrappers around\nPEM_read_bio_ex() and therefore these functions are also directly affected.\n\nThese functions are also called indirectly by a number of other OpenSSL\nfunctions including PEM_X509_INFO_read_bio_ex() and\nSSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal\nuses of these functions are not vulnerable because the caller does not free the\nheader argument if PEM_read_bio_ex() returns a failure code. These locations\ninclude the PEM_read_bio_TYPE() functions as well as the decoders introduced in\nOpenSSL 3.0.\n\nThe OpenSSL asn1parse command line application is also impacted by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2018-25032",
        "package_name": "zlib",
        "installed_version": "1.2.11-r3",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2023-5678",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: Generating excessively long X9.42 DH keys or checking\nexcessively long X9.42 DH keys or parameters may be very slow.\n\nImpact summary: Applications that use the functions DH_generate_key() to\ngenerate an X9.42 DH key may experience long delays.  Likewise, applications\nthat use DH_check_pub_key(), DH_check_pub_key_ex() or EVP_PKEY_public_check()\nto check an X9.42 DH key or X9.42 DH parameters may experience long delays.\nWhere the key or parameters that are being checked have been obtained from\nan untrusted source this may lead to a Denial of Service.\n\nWhile DH_check() performs all the necessary checks (as of CVE-2023-3817),\nDH_check_pub_key() doesn't make any of these checks, and is therefore\nvulnerable for excessively large P and Q parameters.\n\nLikewise, while DH_generate_key() performs a check for an excessively large\nP, it doesn't check for an excessively large Q.\n\nAn application that calls DH_generate_key() or DH_check_pub_key() and\nsupplies a key or parameters obtained from an untrusted source could be\nvulnerable to a Denial of Service attack.\n\nDH_generate_key() and DH_check_pub_key() are also called by a number of\nother OpenSSL functions.  An application calling any of those other\nfunctions may similarly be affected.  The other functions affected by this\nare DH_check_pub_key_ex(), EVP_PKEY_public_check(), and EVP_PKEY_generate().\n\nAlso vulnerable are the OpenSSL pkey command line application when using the\n\"-pubcheck\" option, as well as the OpenSSL genpkey command line application.\n\nThe OpenSSL SSL/TLS implementation is not affected by this issue.\n\nThe OpenSSL 3.0 and 3.1 FIPS providers are not affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-13176",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: A timing side-channel which could potentially allow recovering\nthe private key exists in the ECDSA signature computation.\n\nImpact summary: A timing side-channel in ECDSA signature computations\ncould allow recovering the private key by an attacker. However, measuring\nthe timing would require either local access to the signing application or\na very fast network connection with low latency.\n\nThere is a timing signal of around 300 nanoseconds when the top word of\nthe inverted ECDSA nonce value is zero. This can happen with significant\nprobability only for some of the supported elliptic curves. In particular\nthe NIST P-521 curve is affected. To be able to measure this leak, the attacker\nprocess must either be located in the same physical computer or must\nhave a very fast network connection with low latency. For that reason\nthe severity of this vulnerability is Low.\n\nThe FIPS modules in 3.4, 3.3, 3.2, 3.1 and 3.0 are affected by this issue.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2021-42374",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "1.31.1-r11",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2020-28928",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "1.1.24-r3",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libcrypto1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-9230",
        "package_name": "libssl1.1",
        "installed_version": "1.1.1g-r0",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "Issue summary: An application trying to decrypt CMS messages encrypted using\npassword based encryption can trigger an out-of-bounds read and write.\n\nImpact summary: This out-of-bounds read may trigger a crash which leads to\nDenial of Service for an application. The out-of-bounds write can cause\na memory corruption which can have various consequences including\na Denial of Service or Execution of attacker-supplied code.\n\nAlthough the consequences of a successful exploit of this vulnerability\ncould be severe, the probability that the attacker would be able to\nperform it is low. Besides, password based (PWRI) encryption support in CMS\nmessages is very rarely used. For that reason the issue was assessed as\nModerate severity according to our Security Policy.\n\nThe FIPS modules in 3.5, 3.4, 3.3, 3.2, 3.1 and 3.0 are not affected by this\nissue, as the CMS implementation is outside the OpenSSL FIPS module\nboundary.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-26519",
        "package_name": "musl-utils",
        "installed_version": "1.1.24-r2",
        "fixed_version": "No fix available",
        "severity": "HIGH",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "musl libc 0.9.13 through 1.2.5 before 1.2.6 has an out-of-bounds write vulnerability when an attacker can trigger iconv conversion of untrusted EUC-KR text to UTF-8.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-46394",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In tar in BusyBox through 1.37.0, a TAR archive can have filenames hidden from a listing through the use of terminal escape sequences.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "busybox",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-58251",
        "package_name": "ssl_client",
        "installed_version": "1.31.1-r9",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-orderer:2.1",
        "scanner": "grype",
        "title": "",
        "description": "In netstat in BusyBox through 1.37.0, local users can launch of network application with an argv[0] containing an ANSI terminal escape sequence, leading to a denial of service (terminal locked up) when netstat is used by a victim.",
        "detected_by": [
          "grype"
        ]
      }
    ],
    "hyperledger/fabric-peer:3.1": [
      {
        "cve_id": "CVE-2024-56433",
        "package_name": "login",
        "installed_version": "1:4.13+dfsg1-4ubuntu3.2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-56433",
        "package_name": "passwd",
        "installed_version": "1:4.13+dfsg1-4ubuntu3.2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-41996",
        "package_name": "libssl3t64",
        "installed_version": "3.0.13-0ubuntu3.6",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2024-2236",
        "package_name": "libgcrypt20",
        "installed_version": "1.10.3-2build1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-45582",
        "package_name": "tar",
        "installed_version": "1.35+dfsg-3build1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2016-2781",
        "package_name": "coreutils",
        "installed_version": "9.4-3ubuntu6.1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-8941",
        "package_name": "libpam-modules",
        "installed_version": "1.5.3-5ubuntu5.5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-8941",
        "package_name": "libpam-modules-bin",
        "installed_version": "1.5.3-5ubuntu5.5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-8941",
        "package_name": "libpam-runtime",
        "installed_version": "1.5.3-5ubuntu5.5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-8941",
        "package_name": "libpam0g",
        "installed_version": "1.5.3-5ubuntu5.5",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-27587",
        "package_name": "libssl3t64",
        "installed_version": "3.0.13-0ubuntu3.6",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-62813",
        "package_name": "liblz4-1",
        "installed_version": "1.9.4-1build1.1",
        "fixed_version": "No fix available",
        "severity": "MEDIUM",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-6141",
        "package_name": "libncursesw6",
        "installed_version": "6.4+20240113-1ubuntu2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-6141",
        "package_name": "libtinfo6",
        "installed_version": "6.4+20240113-1ubuntu2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-6141",
        "package_name": "ncurses-base",
        "installed_version": "6.4+20240113-1ubuntu2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-6141",
        "package_name": "ncurses-bin",
        "installed_version": "6.4+20240113-1ubuntu2",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2022-3219",
        "package_name": "gpgv",
        "installed_version": "2.4.4-2ubuntu17.3",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      },
      {
        "cve_id": "CVE-2025-5278",
        "package_name": "coreutils",
        "installed_version": "9.4-3ubuntu6.1",
        "fixed_version": "No fix available",
        "severity": "LOW",
        "image": "hyperledger/fabric-peer:3.1",
        "scanner": "grype",
        "title": "",
        "description": "",
        "detected_by": [
          "grype"
        ]
      }
    ]
  }
}