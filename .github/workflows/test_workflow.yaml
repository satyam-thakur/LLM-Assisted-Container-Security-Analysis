name: test_workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build container and Scan with Trivy and Grype
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Create output directories
        run: |
          mkdir -p "GithubActions/TrivyScan"
          mkdir -p "GithubActions/GrypeScan"
          mkdir -p "GithubActions/Syft_sbom"

      - name: Set Date
        id: set-date
        run: echo "DATE=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
      
      - name: Install Trivy
        run: |
          sudo apt-get install -y wget apt-transport-https gnupg lsb-release
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          grype version

      - name: Install Syft
        run: |
          curl -sSfL https://get.anchore.io/syft | sudo sh -s -- -b /usr/local/bin
          syft version

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Pull Docker Images from Compose File
        run: |
          docker-compose -f artifacts/docker-compose_notls-orderer.yaml pull
          docker-compose -f artifacts/docker-compose_no-tls-peer1.yaml pull

      - name: Build Docker Compose Image
        run: |
          docker-compose -f artifacts/docker-compose_notls-orderer.yaml build
          docker-compose -f artifacts/docker-compose_no-tls-peer1.yaml build

      - name: List Docker Images and get Image Names
        id: get-images
        run: |
          docker images
          # Get images and add :latest if no tag exists
          IMAGES=""
          for IMAGE in $(docker-compose -f artifacts/docker-compose_notls-orderer.yaml config | grep 'image:' | awk '{print $2}') $(docker-compose -f artifacts/docker-compose_no-tls-peer1.yaml config | grep 'image:' | awk '{print $2}'); do
            if [[ "$IMAGE" != *":"* ]]; then
              IMAGE="${IMAGE}:latest"
            fi
            IMAGES="$IMAGES $IMAGE"
          done
          
          echo "IMAGES=$IMAGES" >> $GITHUB_ENV
          echo "Images to scan: $IMAGES"

      - name: Scan All Images from Compose File with Trivy
        id: trivy-scan
        run: |
          for IMAGE in $IMAGES; do
            # Generate JSON report
            JSON_OUTPUT_FILE="GithubActions/TrivyScan/trivy-scan-report-$(echo $IMAGE | tr '/:' '_').json"
            trivy image --severity HIGH,CRITICAL --no-progress --format json -o "$JSON_OUTPUT_FILE" "$IMAGE"
            
            # Generate table report
            TABLE_OUTPUT_FILE="GithubActions/TrivyScan/trivy-scan-report-$(echo $IMAGE | tr '/:' '_').txt"
            trivy image --severity HIGH,CRITICAL --no-progress --format table -o "$TABLE_OUTPUT_FILE" "$IMAGE"
          done

      - name: Scan All Images from Compose File with Grype
        id: grype-scan
        run: |
          for IMAGE in $IMAGES; do
            # Generate JSON report
            JSON_OUTPUT_FILE="GithubActions/GrypeScan/grype-scan-report-$(echo $IMAGE | tr '/:' '_').json"
            grype --output json --file "$JSON_OUTPUT_FILE" "$IMAGE"
            
            # Generate table report
            TABLE_OUTPUT_FILE="GithubActions/GrypeScan/grype-scan-report-$(echo $IMAGE | tr '/:' '_').txt"
            grype --output table --file "$TABLE_OUTPUT_FILE" "$IMAGE"
          done

      - name: Scan All Images from Compose File with Syft
        id: syft-scan
        run: |
          for IMAGE in $IMAGES; do
            # Generate JSON SBOM report
            JSON_OUTPUT_FILE="GithubActions/Syft_sbom/syft-sbom-report-$(echo $IMAGE | tr '/:' '_').json"
            syft "$IMAGE" -o syft-json > "$JSON_OUTPUT_FILE"
            
            # Generate text SBOM report
            TEXT_OUTPUT_FILE="GithubActions/Syft_sbom/syft-sbom-report-$(echo $IMAGE | tr '/:' '_').txt"
            syft "$IMAGE" -o syft-text > "$TEXT_OUTPUT_FILE"
          done

      - name: Verify Scan Reports
        run: |
          echo "Trivy Scan Reports:"
          ls -l "GithubActions/TrivyScan/"
          echo "Grype Scan Reports:"
          ls -l "GithubActions/GrypeScan/"
          echo "Syft SBOM Reports:"
          ls -l "GithubActions/Syft_sbom/"

      - name: Commit Security Scan Reports
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          for IMAGE in $IMAGES; do
            # Add Trivy reports
            TRIVY_JSON_OUTPUT_FILE="GithubActions/TrivyScan/trivy-scan-report-$(echo $IMAGE | tr '/:' '_').json"
            TRIVY_TABLE_OUTPUT_FILE="GithubActions/TrivyScan/trivy-scan-report-$(echo $IMAGE | tr '/:' '_').txt"
            git add "$TRIVY_JSON_OUTPUT_FILE"
            git add "$TRIVY_TABLE_OUTPUT_FILE"
            
            # Add Grype reports
            GRYPE_JSON_OUTPUT_FILE="GithubActions/GrypeScan/grype-scan-report-$(echo $IMAGE | tr '/:' '_').json"
            GRYPE_TABLE_OUTPUT_FILE="GithubActions/GrypeScan/grype-scan-report-$(echo $IMAGE | tr '/:' '_').txt"
            git add "$GRYPE_JSON_OUTPUT_FILE"
            git add "$GRYPE_TABLE_OUTPUT_FILE"
            
            # Add Syft SBOM reports
            SYFT_JSON_OUTPUT_FILE="GithubActions/Syft_sbom/syft-sbom-report-$(echo $IMAGE | tr '/:' '_').json"
            SYFT_TEXT_OUTPUT_FILE="GithubActions/Syft_sbom/syft-sbom-report-$(echo $IMAGE | tr '/:' '_').txt"
            git add "$SYFT_JSON_OUTPUT_FILE"
            git add "$SYFT_TEXT_OUTPUT_FILE"
          done
          git commit -m "Add security scan reports (Trivy, Grype, and Syft SBOM) for $DATE"
          git push origin main
